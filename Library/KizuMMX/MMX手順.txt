結局これだけでよいはず
1.それぞれのasmファイルのプロパティを開く
2.カスタムビルドステップの全般の出力ファイルに以下を記述
	$(IntDir)\$(InputName).obj


============================-
どうもこれはNG
PC
1．masm64.rules を 以下フォルダにコピー
	64bitOS時 C:\Program Files (x86)\Microsoft Visual Studio 8\VC\VCProjectDefaults
	32bitOS時 C:\Program Files\Microsoft Visual Studio 8\VC\VCProjectDefaults


VS
1.KizuMMX プロジェクトを右クリック。カスタムビルド規則を選択
2.masm64.rulesを入れたパスの規則ファイルをチェック
3.VS再起動
4.それぞれのasmファイルのプロパティを開く
5.カスタムビルドステップの全般の出力ファイルに以下を記述
	$(IntDir)\$(InputName).obj




=========================================
梅村です。
これは、MemCopy_x64.objがリンクされていません。

MemCopy_x64.asmの「カスタムビルド」の「出力ファイル」に
このasmからどのようなファイルが出力されるか書かないと
linkコマンドに渡してくれません。
具体的には「出力ファイル」に-Foオプション以降のファイル名を書いておきます。
$(IntDir)\$(InputName).obj

これでこちらではリンクOKでした。

x64のasmをカスタムビルドを使ってasmをコンパイルするようにしていますが
VS2005の場合は、x64 asm用の「カスタムビルド規則」を設定しておくと
勝手にコンパイル・リンクしてくれます。
＃ちなみにVS2010はこの設定は不要です。

KizuMMXをソリューションエクスプローラで選択して、「プロジェクト」->「カスタムビルドステップ」で
Win32用のmacro assembler規則のファイルの位置を確認して
それを同じフォルダで名前を変えてコピーして
ml64.exeを呼び出すように変更してVisual Studioを再起動。
すると同じ画面でx64用のmacro assembler規則がチェックできるようになります。
x64構成でasmファイルを右クリックして、「構成プロパティ」->「全般」->「ツール」でx64用の
macro assembler規則を選択します。

以上ご参考まで。
