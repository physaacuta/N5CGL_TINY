#////////////////////////////////////////////////////////////////////
# 機能単位の設定ファイル
#  ※ 名前の付け方 [t統括機能 KizuTask.ini]
#////////////////////////////////////////////////////////////////////

#**************************************************************************************
# ライブラリ使用 部
#**************************************************************************************
#=========================================================
# データベース情報
#  DBADDLESS	: DB接続アドレス (VBでしか使用しない)
#  ODBCNAME	: ODBCの名称 (C のみ使用)
#  DSNAME	: SQLServerのDB名称(VB のみ使用)
#  USERID	: ユーザー名
#  PASSWORD	: パスワード
#=========================================================
# オンライン実行中DB
[DB]
DBADDLESS = 192.9.201.31
#DBADDLESS = tikuseki\vz2005
ODBCNAME =DATABASE_N1CAPL_SPM
DSNAME   =DATABASE_N1CAPL_SPM
USERID   =sa
PASSWORD =vz
# A系DB
[DB_A]
DBADDLESS= 192.9.201.31
ODBCNAME = DATABASE_N1CAPL_SPM
DSNAME   = DATABASE_N1CAPL_SPM
USERID   = sa
PASSWORD = vz
# B系DB
[DB_B]
DBADDLESS= 192.9.201.32
ODBCNAME = DATABASE_N1CAPL_SPMsub
DSNAME   = DATABASE_N1CAPL_SPM
USERID   = sa
PASSWORD = vz

#=========================================================
# 共通設定
#  LINEID	: ライン区分(コンパイル無しでタスクの切替等で使用可能)
#  NOA		: NOA接続フラグ (0:オンライン  1:遠隔  -1:解析用  9:デバック)
#=========================================================
[COMMON]
LINEID = 0
NOA = 9

#=========================================================
# 機器ID定義
#  各機能での機器IDを定義 (共通支援機能での機器IDは除く)
#=========================================================
[STATUS]
# 判定PC応答無し
HANTEI_ANS_1_ID = 87
HANTEI_ANS_2_ID = 88
HANTEI_ANS_3_ID = 89
HANTEI_ANS_4_ID = 90
HANTEI_ANS_5_ID = 91
HANTEI_ANS_6_ID = 92

# 判定PC 異常発生（バックアップも不可能）
HANTEI_TOP_ANS_ID = 93
HANTEI_BOT_ANS_ID = 94

# 圧縮全長画像保存異常
SAVE_RPI_1_ERR_ID = 95
SAVE_RPI_2_ERR_ID = 96

# カメラ温度状態
CAM_TEMPSTATE_1_1_ID = 105
CAM_TEMPSTATE_1_2_ID = 106
CAM_TEMPSTATE_2_1_ID = 107
CAM_TEMPSTATE_2_2_ID = 108
CAM_TEMPSTATE_3_1_ID = 109
CAM_TEMPSTATE_3_2_ID = 110
CAM_TEMPSTATE_4_1_ID = 111
CAM_TEMPSTATE_4_2_ID = 112

# カメラ温度
CAM_TEMP_1_1_ID = 113
CAM_TEMP_1_2_ID = 114
CAM_TEMP_2_1_ID = 115
CAM_TEMP_2_2_ID = 116
CAM_TEMP_3_1_ID = 117
CAM_TEMP_3_2_ID = 118
CAM_TEMP_4_1_ID = 119
CAM_TEMP_4_2_ID = 120

# カメラゲイン
CAM_GAIN_1_1_R_ID = 129
CAM_GAIN_1_1_G_ID = 130
CAM_GAIN_1_1_B_ID = 131
CAM_GAIN_1_2_R_ID = 132
CAM_GAIN_1_2_G_ID = 133
CAM_GAIN_1_2_B_ID = 134
CAM_GAIN_2_1_R_ID = 135
CAM_GAIN_2_1_G_ID = 136
CAM_GAIN_2_1_B_ID = 137
CAM_GAIN_2_2_R_ID = 138
CAM_GAIN_2_2_G_ID = 139
CAM_GAIN_2_2_B_ID = 140
CAM_GAIN_3_1_R_ID = 141
CAM_GAIN_3_1_G_ID = 142
CAM_GAIN_3_1_B_ID = 143
CAM_GAIN_3_2_R_ID = 144
CAM_GAIN_3_2_G_ID = 145
CAM_GAIN_3_2_B_ID = 146
CAM_GAIN_4_1_R_ID = 147
CAM_GAIN_4_1_G_ID = 148
CAM_GAIN_4_1_B_ID = 149
CAM_GAIN_4_2_R_ID = 150
CAM_GAIN_4_2_G_ID = 151
CAM_GAIN_4_2_B_ID = 152

# カメラ露光時間
CAM_EXPTIME_1_1_R_ID = 153
CAM_EXPTIME_1_1_G_ID = 154
CAM_EXPTIME_1_1_B_ID = 155
CAM_EXPTIME_1_2_R_ID = 156
CAM_EXPTIME_1_2_G_ID = 157
CAM_EXPTIME_1_2_B_ID = 158
CAM_EXPTIME_2_1_R_ID = 159
CAM_EXPTIME_2_1_G_ID = 160
CAM_EXPTIME_2_1_B_ID = 161
CAM_EXPTIME_2_2_R_ID = 162
CAM_EXPTIME_2_2_G_ID = 163
CAM_EXPTIME_2_2_B_ID = 164
CAM_EXPTIME_3_1_R_ID = 165
CAM_EXPTIME_3_1_G_ID = 166
CAM_EXPTIME_3_1_B_ID = 167
CAM_EXPTIME_3_2_R_ID = 168
CAM_EXPTIME_3_2_G_ID = 169
CAM_EXPTIME_3_2_B_ID = 170
CAM_EXPTIME_4_1_R_ID = 171
CAM_EXPTIME_4_1_G_ID = 172
CAM_EXPTIME_4_1_B_ID = 173
CAM_EXPTIME_4_2_R_ID = 174
CAM_EXPTIME_4_2_G_ID = 175
CAM_EXPTIME_4_2_B_ID = 176


# カメラリンクスイッチ(TO_CAMERA,TO_LINKSW,TO_DEFECT)
CAMCONTROL_ID = 177
CAMSWITCH_ID = 178
CAMLINKSW_ANS_ID = 203


# ライン稼動時の照明OFF
#LED_RUNOFF_1_ID = 304
#LED_RUNOFF_2_ID = 305

# カウンターボード
#BOARD_CNT_ID = 337
# PIOボード
#BOARD_PIO_ID = 338

# 各種状態
DIV_KADOU_ID = 334
DIV_UNTEN_ID = 335
DIV_SOGYO_ID = 336
DIV_PLGMODE_ID = 337

# 検査開始１本目
COIL_INIT_ID = 347
COIL_RESTART_ID = 348
COIL_TIMING_ERR_ID = 349

# コイル情報無し
COIL_KEN_ID = 350
COIL_DSP_ID = 351

# コイル長異常
MAXLEN_KEN_ID = 352
MAXLEN_DSP_ID = 353

# 画像書き込み失敗
BCP_ERR_ID = 361

# 検査実績保存上限
DB_SAVE_MAX_1_ID = 362
DB_SAVE_MAX_2_ID = 363
# 検査実績保存スキップ
DB_SAVE_SKIP_1_ID = 364
DB_SAVE_SKIP_2_ID = 365
# 未検査区間
FRAME_SKIP_1_ID = 366
FRAME_SKIP_2_ID = 367
# エッジ不正
EDGE_NG_1_ID = 368
EDGE_NG_2_ID = 369

# プロコン通信
PROCON_ID = 323
# FF通信
FFSERV_ID = 325
# FFサーバーイニシャル中
FF_CONNECT_ERR_ID = 333
# 対シーケンサ通信
#DATAMEM_SEQ_ID = 3
DATAMEM_HB_ID = 324

# 検査用PLG整合性異常
PLGLEN_KEN_CHECK_ID = 354
# 表示用PLG整合性異常
PLGLEN_DSP_CHECK_ID = 355
# プロコン長補正率
HOSEIRITU_ID = 356

# プロコン検査実績生成失敗
ZI_CREATE_ERR_ID 357

# プロコン検査実績送信失敗
ZI_SEND_ERR_ID = 358


# カメラ台車位置情報
DAISYA_1_ID = 374
DAISYA_2_ID = 375

# 機密保持関連
SECURITY_DOOR_ID = 372
SECURITY_KEY_ID  = 373

# シーケンサUDP回線異常
UDP_SEQ_ID = 331

# 穴検エッジUDP
UDP_ANA_ID = 411


#=========================================================
# 共有メモリ情報 (1〜50まで)
#  MEM1_NAME	: 共有メモリ名
#  MEM1_SIZE	: サイズ
#=========================================================
[MEM]
# 表示機能もテストするために定義しておく
MEM1_NAME = TBL_HY_STATUS
MEM1_SIZE = 2048
MEM2_NAME = TBL_HY_POINT
MEM2_SIZE = 5120
MEM3_NAME = TBL_HY_COILINF
MEM3_SIZE = 12800
MEM4_NAME = TBL_HY_COILRESULT
MEM4_SIZE = 2048
MEM5_NAME = TBL_HY_MAP_ROW
MEM5_SIZE = 25344000
MEM6_NAME = TBL_HY_DEFECTINF
MEM6_SIZE = 968000396
MEM7_NAME = TBL_HY_DEFLIST
MEM7_SIZE = 10240
MEM8_NAME = TBL_HY_DEFMAP
MEM8_SIZE = 2048
MEM9_NAME = TBL_HY_MAE_INF
MEM9_SIZE = 16368088
MEM10_NAME = TBL_HY_ALARM
MEM10_SIZE = 128

# 統括機能
MEM11_NAME = TBL_TO_COIL
MEM11_SIZE = 4096
MEM12_NAME = TBL_TO_SEQMEM
MEM12_SIZE = 10240
MEM13_NAME = TBL_TO_CAMERA
MEM13_SIZE = 256


#=========================================================
# プロセス情報 (1〜50まで)
#  TASK1	: 起動タスク名, 起動プロセス(0:通常 1:最小化 2:最大化 3:非表示), ホントの起動EXE名称(起動タスク名と同じなら無しでOK)
#=========================================================
[EXECUTE]
TASK1=KS_SYSLOG, 1, KS_SYSLOGx64
TASK2=KS_EVTLOG, 1, KS_EVTLOGx64
TASK3=KS_HDDCHK, 1, KS_HDDCHKx64
TASK4=KS_HISTRY, 1, KS_HISTRYx64
TASK5=KS_EQALDB, 1, KS_EQALDBx64
TASK6=KT_LEDMGR, 1
TASK7=KT_CHILER, 1, KT_CHILERx64

TASK8=TI_DELETE, 1
TASK9=TO_CAMERA, 1
TASK10=TO_LINKSW, 1
TASK11=KT_RPICHK, 1
TASK12=TO_MAEDAT, 1

TASK13=TO_DEFECT, 0
TASK14=TO_FFSERV, 1
TASK15=TO_GETDAT, 1
TASK16=TO_PUTDAT, 1
TASK17=TO_FFVOTE, 1
TASK18=TO_SEQDM, 1

#TASK8=TI_DELETE, 1
#TASK9=TO_CAMERA, 1
#TASK10=TO_LINKSW, 1
#TASK11=KT_RPICHK, 1
#TASK12=KT_TEMPMT, 1

#TASK13=TO_DEFECT, 0
#TASK14=TO_PROCON, 1
#TASK15=TO_DATLOG, 1
#TASK16=TO_FFSERV, 1
#TASK17=TO_GETDAT, 1
#TASK18=TO_PUTDAT, 1
#TASK19=TO_INTENS, 1
#TASK20=TO_FFVOTE, 1
#TASK21=TO_E1VOTE, 1
#TASK22=TO_MAEDAT, 1
#TASK23=TO_SEQDM, 1

#TASK24=HY_DEFECT, 1

#**************************************************************************************
# 各タスク 部
#**************************************************************************************
#=========================================================
# 統括管理
#=========================================================
[TO_DEFECT]
# LED照明 ライン休止OFF時間 [分]
LED_LINESTOP_OFFTIME    = 30

# 台車オフラインOFF時間 [秒]
LED_DAISYA_OFFTIME      = 10

# 出側物理単位のプロコン伝文アップデート失敗時のリトライ回数[回]
PROC_UPDATE_RETRY_COUNT = 5

# 出側物理単位のプロコン伝文アップデート失敗時のリトライ間隔[秒]
PROC_UPDATE_RETRY_INTERVAL = 10

# パンチ穴 疵種EdasysID。ログチェックのみ(0なら実施しない)
PANCH_TYPE_ID  = 0

# 自動高速リセット。有効疵種EdasysID(0なら実施しない)
#CAM_RESET_TYPE_ID = 0

# 疵情報出力先フォルダ
DEF_DUMP_PATH = D:\CSV\

# ウォーマ材 帳票出力(0:出力無し 1:出力有り)
WALM_PRINT    = 0

# レコーダーのコイル情報送信タイミング(0:基準面 1:その他面)
REC_COIL_TIMING = 0

# 各判定PCの物理的なカメラリンクスイッチ接続CH を設定
#   CAMLINKSW_PCIDx_y : 判定PCと接続されているｶﾒﾗﾘﾝｸｽｲｯﾁ出力 (FPGAボードNo*100 + ch(1〜15))
#			x:PCID 1〜
#			y:接続口 1〜
# PCID=1〜10 (判定PC01〜10)
CAMLINKSW_PCID1_1 = 1
CAMLINKSW_PCID1_2 = 2
CAMLINKSW_PCID2_1 = 3
CAMLINKSW_PCID2_2 = 4
CAMLINKSW_PCID3_1 = 5
CAMLINKSW_PCID3_2 = 6
CAMLINKSW_PCID4_1 = 7
CAMLINKSW_PCID4_2 = 8
CAMLINKSW_PCID5_1 = 101
CAMLINKSW_PCID5_2 = 102
CAMLINKSW_PCID6_1 = 103
CAMLINKSW_PCID6_2 = 104
CAMLINKSW_PCID7_1 = 105
CAMLINKSW_PCID7_2 = 106
CAMLINKSW_PCID8_1 = 107
CAMLINKSW_PCID8_2 = 108
CAMLINKSW_PCID9_1 = 9
CAMLINKSW_PCID9_2 = 10
CAMLINKSW_PCID10_1 = 11
CAMLINKSW_PCID10_2 = 12

# 判定PCとのソケット定義
# Cliant01_Nameは、プログラム内で値を設定しなおす
[HT_RECV_TOP]
SAVE_IP		= 192.9.201.31
SAVE_PORT	= 10000
[HT_RECV_BOT]
SAVE_IP		= 192.9.201.31
SAVE_PORT	= 10001
# 表示PCとのソケット定義
[OP_SEND]
SAVE_IP 	= 192.9.201.31
SAVE_PORT 	= 10002
# 周期PCとのソケット定義
[CY_RECV_TOP]
SAVE_IP		= 192.9.201.31
SAVE_PORT	= 10010
[CY_RECV_BOT]
SAVE_IP		= 192.9.201.31
SAVE_PORT	= 10011

# シーケンサとのソケット定義
[TO_DEFECT_SEND_SEQ]
SAVE_IP		= 192.168.2.2
#SAVE_IP		= 127.0.0.1
SAVE_PORT	= 2002

[TO_DEFECT_SEND_MARK]
SAVE_IP		= 192.168.2.2
#SAVE_IP		= 127.0.0.1
SAVE_PORT	= 2003


[SOGYO_MODE]
#操業条件
# 最小ライン速度チェック周期 [ms]
CHECK_INTERVAL = 1000
# 操業状態判定方法
# 「ライン速度がXmpm以下が、Y回続いた」の場合、低速操業認識。
# 「ライン速度がXmpm以下が、Y回続いた」の場合、ライン停止認識。
# 「ライン速度がXmpmより大きくが、Y回続いた」の場合、低速操業認識。
# 「ライン速度がXmpmより大きくが、Y回続いた」の場合、ライン稼動認識。
#    ※ 条件がかぶった場合は、下の項目に行くほど優先される。
#     ・Xが xxx_MPM。
#     ・Yが xxx_CNT(=最小ライン速度チェック周期で１回) (0で未チェック)

# 5mpmが10秒続いたら、一時停止 (ストップマーク発生)
UpToDown_SLOW_MPM = 5
UpToDown_SLOW_CNT = 10
# 0mpmが30秒続いたら、停止
UpToDown_STOP_MPM = 0
UpToDown_STOP_CNT = 30
# ちょっとでも動いたら即低速操業
DownToUp_SLOW_MPM = 0
DownToUp_SLOW_CNT = 1
# 5mpmより大きければ即ライン稼動認識
DownToUp_RUN_MPM = 5
DownToUp_RUN_CNT = 1


# 1CAPL出側φωとのソケット定義
[RN_RECV_OUT]
# 出側実績情報送信PCのIPアドレス
SAVE_IP		= 192.9.201.221
# 受信ポート
SAVE_PORT	= 10000

# 1CAPL穴検とのソケット定義
[RN_RECV_ANA]
# 出側実績情報送信PCのIPアドレス
SAVE_IP		= 192.9.201.231
# 受信ポート
SAVE_PORT	= 10010

#=========================================================
# UDP設定
#----------------------------
# HT_SEND_PORT_0	: 全長レコーダー送信(表)用　 相手ポートNo
# HT_SEND_PORT_1	: 全長レコーダー送信(裏)用　 相手ポートNo
# HT_SEND_IP_n		: 全長レコーダー送信用	     相手IPアドレス
#=========================================================
[UDP]
HT_SEND_PORT_0 = 8100
HT_SEND_PORT_1 = 8101

HT_SEND_IP_1 = 192.9.201.110
HT_SEND_IP_2 = 192.9.201.110
HT_SEND_IP_3 = 192.9.201.110
HT_SEND_IP_4 = 192.9.201.110
HT_SEND_IP_5 = 192.9.201.110
HT_SEND_IP_6 = 192.9.201.110
HT_SEND_IP_7 = 192.9.201.110
HT_SEND_IP_8 = 192.9.201.110


#=========================================================
# 対プロコン通信 (受信ポート/送信ポート共にサーバー)
# CTL		プロコンIP  128.101.61.31
# 			φωIP      128.101.61.71	受信 10031  送信 10032
#=========================================================
[TO_PROCON]

[TO_PROCON_RECV]
SAVE_IP		= 128.101.61.71
#SAVE_IP	= 127.0.0.1
SAVE_PORT	= 10031

[TO_PROCON_SEND]
SAVE_IP		= 128.101.61.71
#SAVE_IP	= 127.0.0.1
SAVE_PORT	= 10032


#=========================================================
# 対ＦＦサーバー通信 (受信ポート:クライアント/送信ポート:クライアント)
#  FFサーバーIP   10.24.98.1
#  CTL   φωIP   10.25.124.178  受信 3861  送信 3811
#  (試験)φωIP   10.25.124.178  受信 5561  送信 5511
#=========================================================
[TO_FFSERV_RECV]
#SAVE_IP		= 10.24.98.1
SAVE_IP		= 127.0.0.1
# 本番
#SAVE_PORT	= 3861
# 試験
SAVE_PORT	= 5561

[TO_FFSERV_SEND]
#SAVE_IP		= 10.24.98.1
SAVE_IP		= 127.0.0.1
# 本番
#SAVE_PORT	= 3811
# 試験
SAVE_PORT	= 5511
[DummyFF_RECV]
#SAVE_IP		= 10.24.98.1
SAVE_IP		= 127.0.0.1
# 本番
#SAVE_PORT	= 3811
# 試験
SAVE_PORT	= 5511

[DummyFF_SEND]
#SAVE_IP		= 10.24.98.1
SAVE_IP		= 127.0.0.1
# 本番
#SAVE_PORT	= 3861
# 試験
SAVE_PORT	= 5561


#=========================================================
# 対データロガー通信 (受信ポート/送信ポート共にクライアント)
# NCTL		データロガーIP  192.168.1.2
# 		φωIP      	192.168.1.11	受信 2011  送信 2010
#=========================================================
[TO_DATLOG]

[TO_DATLOG_RECV]
SAVE_IP		= 192.168.1.2
#SAVE_IP	= 192.168.51.229
SAVE_PORT	= 2010

[TO_DATLOG_SEND]
SAVE_IP		= 192.168.1.2
#SAVE_IP	= 192.168.51.229
SAVE_PORT	= 2011


#=========================================================
# シーケンサ データメモリ管理
#   UDP接続 (ActQJ71E71UDPを使用)
# -- MXコンポーネント設置用 --
#  PC_NETWORK_NO		: パソコン側(自局) ネットワークNo
#  PC_STATION_NO		: パソコン側(自局) 局番
#  SEQ_NETWORK_NO		: シーケンサ側(他局) ネットワークNo
#  SEQ_STATION_NO		: シーケンサ側(他局) 局番
#  SEQ_CPU_TYPE			: CPUタイプ  マニュアル sh080275f.pdf  P53を参照 (10進数で指定すること)
#							Q02(H) ･･･ 0x22
# -- データメモリ領域用 --
#  READADDR  	: 読込エリア開始アドレス
#  WRITEADDR 	: 書込エリア開始アドレス
#=========================================================
[TO_SEQDM]
PC_NETWORK_NO	= 1
PC_STATION_NO	= 2
SEQ_NETWORK_NO	= 1
SEQ_STATION_NO 	= 1
SEQ_CPU_TYPE	= 211
CONNECT_IP	= 192.168.2.2
CONNECT_PORT	= 5001
CONNECT_TIMEOUT	= 5000

#-------------------------------------------------------
# 対プロコンIF用読込エリア開始アドレス
READADDR  = ZR100000

# 受信バッファはREADADDR_1〜の連番になるように記述する
# 検査用コイル情報伝文バッファ
READADDR_1 = ZR100256
# 表示用コイル情報伝文バッファ
READADDR_2 = ZR100768
# 採寸実績伝文バッファ
READADDR_3 = ZR101280
# カット実績伝文バッファ
READADDR_4 = ZR101792
# イニシャル伝文バッファ
READADDR_5 = ZR102304

#-------------------------------------------------------
# 対プロコンIF用書込エリア開始アドレス
WRITEADDR = ZR110000

# WRITEADDR_1〜の連番になるように記述する
# φω 検査実績伝文送信 バッファ
WRITEADDR_1 = ZR110256

# 穴検 検査実績送信伝文 バッファ
WRITEADDR_2 = ZR110768

#=========================================================
# 実績編集処理
#   CHKCOILDATE        : コイル検索対象期間[日]
#   ADDDB_MAXWAITTIME  : コイル実績の最大待ち合わせ時間[msec]
#   RETRYCOUNT         : 実績書き込み状況問い合わせのリトライ回数[回]
#   RETRYWAITTIME      : 実績書き込み状況問い合わせのリトライ時間[msec]
#   CHKUNSENTDATE      : 強制送信検索期間 [日]
#=========================================================
[TO_PUTDAT]
CHKCOILDATE = 10
ADDDB_MAXWAITTIME = 5000
RETRYCOUNT = 15
RETRYWAITTIME = 10000
CHKUNSENTDATE       = 1

#=========================================================
# 前工程疵情報管理
#=========================================================
[TO_MAEDAT]
#LINE_HOT_SQL = SELECT COUNT (*) FROM COIL_RESULT WHERE 疵検管理No = '%s'
#LINE_HOT_OLD_SQL = SELECT COUNT (*) FROM COILINF WHERE 保存ファイル名 = '%s'
#LINE_HHOT_SQL = SELECT COUNT (*) FROM COIL_INF WHERE 疵検管理No = '%s'

#[TO_MAEDAT_RETRY_HOT]
#PING_RETRY_COUNT_PRE   = 3
#PING_RETRY_COUNT_SHARE = 3
#PING_RETRY_TIME_PRE   = 1000
#PING_RETRY_TIME_SHARE = 1000
#CONNECT_RETRY_COUNT_PRE   = 1
#CONNECT_RETRY_COUNT_SHARE = 1
#CONNECT_RETRY_TIME_PRE   = 1000
#CONNECT_RETRY_TIME_SHARE = 1000

#[TO_MAEDAT_RETRY_HHOT]
#PING_RETRY_COUNT_PRE   = 3
#PING_RETRY_COUNT_SHARE = 3
#PING_RETRY_TIME_PRE   = 1000
#PING_RETRY_TIME_SHARE = 1000
#CONNECT_RETRY_COUNT_PRE   = 1
#CONNECT_RETRY_COUNT_SHARE = 1
#CONNECT_RETRY_TIME_PRE   = 1000
#CONNECT_RETRY_TIME_SHARE = 1000

#=========================================================
# 自動帳票管理  
# TIKUSEKI_PATH    : 自動帳票保存先パス(長期保存用) ※最後に\を付けること
# BACKUP_PATH      : 自動帳票保存先パス(バックアップ用) ※最後に\を付けること
# FFVOTE_NO_AUTO   : 自動帳票種類No(端板カット未反映)
# FFVOTE_NO_CUT    : 自動帳票種類No(端板カット反映)
# FFVOTE_NO_RE     : 自動帳票種類No(再発行)
#=========================================================
[TO_FFVOTE]
TIKUSEKI_PATH = \\192.9.201.31\d$\自動帳票\
BACKUP_PATH = \\192.9.201.45\d$\自動帳票\
FFVOTE_NO_AUTO = 1
FFVOTE_NO_CUT = 2
FFVOTE_NO_RE = 3

#=========================================================
# 検査結果連絡票管理帳票
# MAP_TIKUSEKI_PATH	: マップ帳票保存先パス(長期保存用) ※最後に\を付けること
# MAP_BACKUP_PATH	: マップ帳票保存先パス(バックアップ用) ※最後に\を付けること
# LST_TIKUSEKI_PATH	: リスト帳票保存先パス(長期保存用) ※最後に\を付けること
# LST_BACKUP_PATH	: リスト帳票保存先パス(バックアップ用) ※最後に\を付けること
# DB_UNSAVED		: 帳票実績をDB保存(0:無効、1:有効)
# FILE_UNSAVED		: 帳票ファイルを保存先にコピー(0:無効、1:有効)
#
# DEBUG_LOG_ON		: ログ出力有無(1:出力する、0:出力しない) ※処理の流れを出力
# DUMP_LOG_ON		: ログ出力有無(1:出力する、0:出力しない) ※帳票対象データをダンプ
#=========================================================
[TO_E1VOTE]
MAP_TIKUSEKI_PATH	= \\192.9.201.31\d$\検査結果連絡票_マップ\
MAP_BACKUP_PATH		= \\192.9.201.45\d$\検査結果連絡票_マップ\
LST_TIKUSEKI_PATH	= \\192.9.201.31\d$\検査結果連絡票_リスト\
LST_BACKUP_PATH		= \\192.9.201.45\d$\検査結果連絡票_リスト\

DB_UNSAVED			= 0
FILE_UNSAVED		= 0

DEBUG_LOG_ON		= 0
DUMP_LOG_ON			= 1

#**************************************************************************************
# 共通タスク 部
#**************************************************************************************
#=========================================================
# 機器状態履歴管理
#  MAX_DB_COLUMN_KIKI		：DBのST_HISTORY関係の機器状態の列数 (最大64コ)
#  MAX_DB_COLUMN_TEMP		: DBのST_HISTORY関係の付加情報の列数 (最大64コ)
#=========================================================
[KS_HISTRY]
MAX_DB_COLUMN_KIKI 		= 9
MAX_DB_COLUMN_TEMP 		= 1

#=========================================================
# RPIファイル監視
#
# ----- 共通部 ---------------------------
# INS_NUM  		何個ある (1オリジン。MAX:4)
# CHECK_OK_NUM		過去xコイルを見て、１つもRPIファイルが無ければNG判定 (1〜)
# CYCLE_TIME		チェック周期 [分] ※チェック対象疵検管理Noが変更なければ、チェックしない
# TIME_FIRST		初期実行までの時間 (0:定周期無し) [分]
# RPI_CHECK_SQL		実績検索に用いるSQL文。%dはCHECK_OK_NUM分Forループ。必ず「疵検管理Noが1件ヒットする形式」にすること。
#
### 各機能 [**_ID_1･･･] ---------------------------
## 設定
# RPI_CHECK_MODE	0:ini参照	1:直接指定
#
# (0:ini参照)
# RPISAVE_INI_PATH	TI_RPISAVEのINIファイル絶対パス(統括IniSettingの中)
# RPISAVE_INS_SEC	TI_RPISAVEセクション名 ([TI_RPISAVE_INS_1])
#
# (1:直接指定)
# RPI_FOLDER_SAVE_1	保存パス指定
#
## 機器状態
# ERR_ID		機器ID
# REBOOT_PCNAME 再起動PC名称。空白時再起動無し
#=========================================================
[KT_RPICHK]
INS_NUM 	= 2
CHECK_OK_NUM	= 2
CYCLE_TIME	= 5
TIME_FIRST	= 1
RPI_CHECK_SQL   = SELECT MIN(c.管理No) FROM (SELECT TOP %d 管理No FROM COIL_RESULT WHERE 実績格納区分=1 AND 検査本数 <> 0 ORDER BY 管理No DESC) AS c

[KT_RPICHK_ID_1]
RPI_CHECK_MODE = 1

# ini参照 [RPI_CHECK_MODE:0]
RPISAVE_INI_PATH= \\192.9.201.31\C$\N1CAPL_SPM\IniSetting_N1CAPL_SPM\t全長画像処理機能表 KizuTask.ini
RPISAVE_INS_SEC	= TI_RPISAVE_INS_1
# 直接指定 [RPI_CHECK_MODE:1]
RPI_FOLDER_SAVE_1  = \\192.9.203.150\F$\RPI

ERR_ID		= 95
REBOOT_PCNAME=RPIEXEC01


[KT_RPICHK_ID_2]
RPI_CHECK_MODE = 1

# ini参照 [RPI_CHECK_MODE:0]
RPISAVE_INI_PATH= \\192.9.201.31\C$\N1CAPL_SPM\IniSetting_N1CAPL_SPM\t全長画像処理機能裏 KizuTask.ini
RPISAVE_INS_SEC	= TI_RPISAVE_INS_2
# 直接指定 [RPI_CHECK_MODE:1]
RPI_FOLDER_SAVE_1  = \\192.9.203.150\G$\RPI

ERR_ID		= 96
REBOOT_PCNAME=RPIEXEC02

#=========================================================
# 対カメラコントローラー通信
#  ※ メールスロットLineIDで、Unitを切替。(0:全部  1〜:対象ユニットのみ)
#=========================================================
[TO_CAMERA_MAIN]

# カメラコントローラ複数台対応
#  NAME_*		：セッション名となる (インスタンスの名前にもなる) MAX8コ
NAME_1 = TO_CAMERA

[TO_CAMERA]
com=COM4
baud=96
parity=n
data=8
stop=1
to=off
dtr=off
rts=off
idsr=off
octs=off

# フィルタ値 [0.1μs] (未指定時は、0μs)
#FILTER = 1
# Hコマンド (初期値0) ※ジッター対策。振幅フレ対策。べき乗で移動平均を取る。0〜5。※0の時には、コマンドも送らない。Hコマンドは追加コマンドのため
COMMAND_H = 0

# 入力チャンネル別のパラメータ指定 (0:なし 1:あり)
#	カメラPLG逓倍率〜カメラPLG位相差までの５項目 が
# 	それぞれ表校正、裏校正、テスト用に存在するか(_O,_U,_T)
PARAM_O = 0
PARAM_U = 0
PARAM_T = 0

#====================================
# カメラリンクスイッチ用
#
# カメラIDとカメラコントローラーの入力CHの紐付け
#   配線ミス時などに指定する (1オリジン) (飛び飛びで指定も可能)
#   CAMID_<スイッチマスタのFPGAボードID>_<連番(1〜8)>
#   INPCH_<スイッチマスタのFPGAボードID>_<連番(1〜8)>
# 例
#   CAMID_0_1 = 1
#   INPCH_0_1 = 2 
#   この場合、カメラID=1の時には A2*****としてカメラコントローラーへ指示される
# 未定義だと、何もしない(= デフォルト値のまま)
CAMID_0_1 = 1
CAMID_0_2 = 2
CAMID_0_3 = 3
CAMID_0_4 = 4
CAMID_0_5 = 5
CAMID_0_6 = 6
CAMID_0_7 = 7
CAMID_0_8 = 8

INPCH_0_1 = 1
INPCH_0_2 = 2
INPCH_0_3 = 3
INPCH_0_4 = 4
INPCH_0_5 = 5
INPCH_0_6 = 6
INPCH_0_7 = 7
INPCH_0_8 = 8

#=========================================================
# 対カメラリンクスイッチ通信
#
# ### 共通仕様
#  TIMER_CYCLE		：定周期チェックタイマ周期 [秒]
#
# ### 個別仕様
# [タスク名_スイッチFPGAボードID]
#  FPGADIE_TEMP_LIMIT	：FPGAダイ温度上限 [℃]
#  FPGADIE_TEMP_ID	：FPGAダイ温度 ID
#  FPGADIE_TEMP_ST_ID	：FPGAダイ温度状態 ID
#  AMBIENT_TEMP_LIMIT	：周囲温度上限 [℃]
#  AMBIENT_TEMP_ID	：周囲温度 ID
#  AMBIENT_TEMP_ST_ID	：周囲温度状態 ID
#  OPTCLINKx_B_ST_ID	：Opt-C:Link B   ステータス ID (x:1〜4) (※ スイッチFPGAマスタならCH1〜4、スイッチFPGAスレーブならCH5〜6に相当)
#  OPTCLINKx_MF_ST_ID	：Opt-C:Link M/F ステータス ID (x:1〜4) (※ スイッチFPGAマスタならCH1〜4、スイッチFPGAスレーブならCH5〜6に相当)
#=========================================================
[TO_LINKSW]
com=COM3
baud=115200
parity=n
data=8
stop=1
to=off
dtr=off
rts=off
idsr=off
octs=off

# 定周期チェックタイマ周期 [秒]
TIMER_CYCLE = 180

# 高速通信(115200bps)（有効=1。未定義時、無効）
ENABLE_SPEED_CHANGE = 1

# 各ボードのカメラ入力CH(1〜8, 0:無視), 表裏区分(0:表, 1:裏)
# テスト的に画像パラ撮りする時などに使用
FPGA_0_BOARD_1 = 5, 1
FPGA_0_BOARD_2 = 6, 1
FPGA_0_BOARD_3 = 7, 1
FPGA_0_BOARD_4 = 8, 1
FPGA_0_BOARD_5 = 1, 0
FPGA_0_BOARD_6 = 2, 0
FPGA_0_BOARD_7 = 3, 0
FPGA_0_BOARD_8 = 4, 0
FPGA_0_BOARD_9 = 0, 0
FPGA_0_BOARD_10 = 0, 0
FPGA_0_BOARD_11 = 0, 0
FPGA_0_BOARD_12 = 0, 0
FPGA_0_BOARD_13 = 0, 0
FPGA_0_BOARD_14 = 0, 0
FPGA_0_BOARD_15 = 0, 0

FPGA_1_BOARD_1 = 5, 1
FPGA_1_BOARD_2 = 6, 1
FPGA_1_BOARD_3 = 7, 1
FPGA_1_BOARD_4 = 8, 1
FPGA_1_BOARD_5 = 1, 0
FPGA_1_BOARD_6 = 2, 0
FPGA_1_BOARD_7 = 3, 0
FPGA_1_BOARD_8 = 4, 0
FPGA_1_BOARD_9 = 5, 1
FPGA_1_BOARD_10 = 6, 1
FPGA_1_BOARD_11 = 7, 1
FPGA_1_BOARD_12 = 8, 1
FPGA_1_BOARD_13 = 0, 0
FPGA_1_BOARD_14 = 0, 0
FPGA_1_BOARD_15 = 0, 0

# スイッチマスタ (スイッチFPGAボードID = 0)
[TO_LINKSW_0]
FPGADIE_TEMP_LIMIT	= 60
FPGADIE_TEMP_ID		= 173
FPGADIE_TEMP_ST_ID	= 171
AMBIENT_TEMP_LIMIT	= 50
AMBIENT_TEMP_ID		= 177
AMBIENT_TEMP_ST_ID	= 178
OPTCLINK1_B_ST_ID	= 179
OPTCLINK1_MF_ST_ID	= 180
OPTCLINK2_B_ST_ID	= 181
OPTCLINK2_MF_ST_ID	= 182
OPTCLINK3_B_ST_ID	= 183
OPTCLINK3_MF_ST_ID	= 184
OPTCLINK4_B_ST_ID	= 185
OPTCLINK4_MF_ST_ID	= 186

# スイッチスレーブ (スイッチFPGAボードID = 1)
[TO_LINKSW_1]
FPGADIE_TEMP_LIMIT	= 60
FPGADIE_TEMP_ID		= 174
FPGADIE_TEMP_ST_ID	= 172
AMBIENT_TEMP_LIMIT	= 50
AMBIENT_TEMP_ID		= 178
AMBIENT_TEMP_ST_ID	= 179
OPTCLINK1_B_ST_ID	= 187
OPTCLINK1_MF_ST_ID	= 188
OPTCLINK2_B_ST_ID	= 189
OPTCLINK2_MF_ST_ID	= 190
OPTCLINK3_B_ST_ID	= 191
OPTCLINK3_MF_ST_ID	= 192
OPTCLINK4_B_ST_ID	= 193
OPTCLINK4_MF_ST_ID	= 194

#=========================================================
# 対LED照明装置 (アイテック製 TCP/IP)
#   2分30秒 通信がなければ、LED照明側が回線切断する。PCいきなり死亡対策。
# ### 共通仕様
#  BLOCK		：配光ブロック数　　 CHごとに設定しない場合、この値を用いる(MAX256)
#  TEMP_UNIT 		：LED温度計測点数　　CHごとに設定しない場合、この値を用いる(MAX9)
#  TEMP_THR		：温度閾値 (これ以上はエラーとなる) [度]
#  TEMP_THR_DOWN	：強制OFF温度閾値 (これ以上はエラー+LED消灯となる) [度]
#  TIMER_CYCLE		：温度取り込み周期 [秒]
#  NAME_*		：セッションの末の部分となる (インスタンスの名前にもなる) MAX8コ
# 
# ### 個別仕様
# -装置単位-----------------
#   ・片面に複数の電源装置が設置された場合に対応して、CH_STARTを追加
#     電源装置の先頭CHが、面単位で何番目のCHかを定義する。
#     例)　4PL_Cの場合
#          電源1台目              電源2台目
#          CH_START = 1           CH_START = 4
#          CH1 (R)                CH1 (空)
#          CH2 (G左)              CH2 (B左)
#          CH3 (G右)              CH3 (B右)
#
#  MEN			：面 (0:表 1:裏)
#  CH_NUM		：管理対象チャンネル数 (最大4CH)
#  CH_START		：先頭チャンネルの片面単位のID(1オリジン)
#  LED_CONNECT_ID	：照明装置 通信状態
#  SAVE_IP		：デフォルト 192.168.0.99
#  SAVE_PORT		：デフォルト 5001
#
# -チャンネル単位-----------------
#   ・高輝度LED（１列に対して複数CH使うLED照明）対応の為、INDEXを追加。
#   　１列に複数CH使う場合、同じINDEXにすることで、１回のメールスロットで
#   　同時にコマンドを投げることが出来る。
#　　 例)　4PL_Cの場合
#          電源1台目　　　　　　　電源2台目
#          CH1 (R)   = INDEX1     CH1 (空)  CH単位のセクション未定義
#          CH2 (G左) = INDEX2     CH2 (B左) = INDEX3
#          CH3 (G右) = INDEX2     CH3 (B右) = INDEX3
#
#   ・配光補正値の展開方向を追加。
#     (通常は、DBから読み出したバイナリ列をDS→WS方向に展開。逆展開するとWS→DS方向になる)
#
# [タスク名_セッション名_CH1]
#  INDEX		：CHに対応するINDEX   定義しない場合、CH番号を使用
#  BLOCK		：配光ブロック数  定義しない場合、共通設定を使用
#  TEMP_UNIT		：LED温度計測点数 定義しない場合、共通設定を使用
#  LR			：配光補正値左右展開(0=そのまま展開、1=逆展開)　定義しない場合、0(そのまま展開)
#  LED_BREAK_ID		：断線
#  LED_HOTWAR_ID	：加熱検出
#  LED_HOTERR_ID	：加熱シャットダウン
#  LED_ONOFF_ID		：LED点灯消灯状態
#  LED_VALNOW_ID	：現在設定輝度値
#  LED_TOTALTIME_ID	：稼動累計時間
#  LED_TEMP_ST_1_ID 	：温度状態 (L,C,R)
#  LED_TEMP_1_ID 	：温度 (L,C,R)
#=========================================================
[KT_LEDMGR]
BLOCK 		   = 36
TEMP_UNIT 	   = 3
#TEMP_THR           = 70
#TEMP_THR_DOWN	   = 90
TEMP_THR           = 60
TEMP_THR_DOWN	   = 60
TIMER_CYCLE        = 120
NAME_1             = TOP1
NAME_2             = TOP2
NAME_3      	   = BOT1
NAME_4      	   = BOT2

[KT_LEDMGR_TOP1]
# 基本設定
MEN			= 0
CH_NUM		= 3
CH_START	= 1
LED_CONNECT_ID	= 204
# TCP/IP設定
#SAVE_IP		= 192.168.11.101
SAVE_IP		= 127.0.0.1
SAVE_PORT	= 5001

# CH単位 (1:R 2:G(1) 3:G(2)の順)
[KT_LEDMGR_TOP1_CH1]
INDEX		   = 1
BLOCK		   = 36
TEMP_UNIT	   = 3
LR			   = 0

LED_BREAK_ID       = 206
LED_HOTWAR_ID      = 207
LED_HOTERR_ID      = 208
LED_ONOFF_ID       = 209
LED_VALNOW_ID      = 210
LED_TOTALTIME_ID   = 211

LED_TEMP_ST_1_ID   = 236
LED_TEMP_ST_2_ID   = 237
LED_TEMP_ST_3_ID   = 238
LED_TEMP_1_ID      = 239
LED_TEMP_2_ID      = 240
LED_TEMP_3_ID      = 241

[KT_LEDMGR_TOP1_CH2]
INDEX		   = 2
BLOCK		   = 36
TEMP_UNIT	   = 3
LR			   = 0

LED_BREAK_ID       = 212
LED_HOTWAR_ID      = 213
LED_HOTERR_ID      = 214
LED_ONOFF_ID       = 215
LED_VALNOW_ID      = 216
LED_TOTALTIME_ID   = 217

LED_TEMP_ST_1_ID   = 242
LED_TEMP_ST_2_ID   = 243
LED_TEMP_ST_3_ID   = 244
LED_TEMP_1_ID      = 245
LED_TEMP_2_ID      = 246
LED_TEMP_3_ID      = 247

[KT_LEDMGR_TOP1_CH3]
INDEX		   = 3
BLOCK		   = 36
TEMP_UNIT	   = 0
LR			   = 0

LED_BREAK_ID       = 218
LED_HOTWAR_ID      = 219
LED_HOTERR_ID      = 220
LED_ONOFF_ID       = 221
LED_VALNOW_ID      = 222
LED_TOTALTIME_ID   = 223

#LED_TEMP_ST_1_ID   = 242
#LED_TEMP_ST_2_ID   = 243
#LED_TEMP_ST_3_ID   = 244
#LED_TEMP_1_ID      = 245
#LED_TEMP_2_ID      = 246
#LED_TEMP_3_ID      = 247



[KT_LEDMGR_TOP2]
# 基本設定
MEN			= 0
CH_NUM		= 2
CH_START	= 4
LED_CONNECT_ID	= 205
# TCP/IP設定
#SAVE_IP		= 192.168.11.102
SAVE_IP		= 127.0.0.1
SAVE_PORT	= 5002

# CH単位 (2:B(1) 3:B(2)の順)
[KT_LEDMGR_TOP2_CH1]
INDEX		   = 1
BLOCK		   = 36
TEMP_UNIT	   = 3
LR			   = 0

LED_BREAK_ID       = 224
LED_HOTWAR_ID      = 225
LED_HOTERR_ID      = 226
LED_ONOFF_ID       = 227
LED_VALNOW_ID      = 228
LED_TOTALTIME_ID   = 229

LED_TEMP_ST_1_ID   = 248
LED_TEMP_ST_2_ID   = 249
LED_TEMP_ST_3_ID   = 250
LED_TEMP_1_ID      = 251
LED_TEMP_2_ID      = 252
LED_TEMP_3_ID      = 253

[KT_LEDMGR_TOP2_CH2]
INDEX			= 2
BLOCK			= 36
TEMP_UNIT		= 0
LR				= 0

LED_BREAK_ID       = 230
LED_HOTWAR_ID      = 231
LED_HOTERR_ID      = 232
LED_ONOFF_ID       = 233
LED_VALNOW_ID      = 234
LED_TOTALTIME_ID   = 235

#LED_TEMP_ST_1_ID   = 248
#LED_TEMP_ST_2_ID   = 249
#LED_TEMP_ST_3_ID   = 250
#LED_TEMP_1_ID      = 251
#LED_TEMP_2_ID      = 252
#LED_TEMP_3_ID      = 253


[KT_LEDMGR_BOT1]
# 基本設定
MEN			= 1
CH_NUM		= 3
CH_START	= 1
LED_CONNECT_ID	= 254
# TCP/IP設定
#SAVE_IP		= 192.168.11.103
SAVE_IP		= 127.0.0.1
SAVE_PORT	= 5003

# CH単位 (1:R 2:G(1) 3:G(2)の順)
[KT_LEDMGR_BOT1_CH1]
INDEX		   = 1
BLOCK		   = 36
TEMP_UNIT	   = 3
LR			   = 0

LED_BREAK_ID       = 256
LED_HOTWAR_ID      = 257
LED_HOTERR_ID      = 258
LED_ONOFF_ID       = 259
LED_VALNOW_ID      = 260
LED_TOTALTIME_ID   = 261

LED_TEMP_ST_1_ID   = 286
LED_TEMP_ST_2_ID   = 287
LED_TEMP_ST_3_ID   = 288
LED_TEMP_1_ID      = 289
LED_TEMP_2_ID      = 290
LED_TEMP_3_ID      = 291

[KT_LEDMGR_BOT1_CH2]
INDEX		   = 2
BLOCK		   = 36
TEMP_UNIT	   = 3
LR			   = 0

LED_BREAK_ID       = 262
LED_HOTWAR_ID      = 263
LED_HOTERR_ID      = 264
LED_ONOFF_ID       = 265
LED_VALNOW_ID      = 266
LED_TOTALTIME_ID   = 267

LED_TEMP_ST_1_ID   = 292
LED_TEMP_ST_2_ID   = 293
LED_TEMP_ST_3_ID   = 294
LED_TEMP_1_ID      = 295
LED_TEMP_2_ID      = 296
LED_TEMP_3_ID      = 297

[KT_LEDMGR_BOT1_CH3]
INDEX		   = 3
BLOCK		   = 36
TEMP_UNIT	   = 0
LR			   = 0

LED_BREAK_ID       = 268
LED_HOTWAR_ID      = 269
LED_HOTERR_ID      = 270
LED_ONOFF_ID       = 271
LED_VALNOW_ID      = 272
LED_TOTALTIME_ID   = 273

#LED_TEMP_ST_1_ID   = 292
#LED_TEMP_ST_2_ID   = 293
#LED_TEMP_ST_3_ID   = 294
#LED_TEMP_1_ID      = 295
#LED_TEMP_2_ID      = 296
#LED_TEMP_3_ID      = 297

[KT_LEDMGR_BOT2]
# 基本設定
MEN			= 1
CH_NUM		= 2
CH_START	= 4
LED_CONNECT_ID	= 255
# TCP/IP設定
#SAVE_IP		= 192.168.11.104
SAVE_IP		= 127.0.0.1
SAVE_PORT	= 5004

# CH単位 (2:B(1) 3:B(2)の順)
[KT_LEDMGR_BOT2_CH1]
INDEX		   = 1
BLOCK		   = 36
TEMP_UNIT	   = 3
LR		   = 0

LED_BREAK_ID       = 274
LED_HOTWAR_ID      = 275
LED_HOTERR_ID      = 276
LED_ONOFF_ID       = 277
LED_VALNOW_ID      = 278
LED_TOTALTIME_ID   = 279

LED_TEMP_ST_1_ID   = 298
LED_TEMP_ST_2_ID   = 299
LED_TEMP_ST_3_ID   = 300
LED_TEMP_1_ID      = 301
LED_TEMP_2_ID      = 302
LED_TEMP_3_ID      = 303

[KT_LEDMGR_BOT2_CH2]
INDEX		   = 2
BLOCK		   = 36
TEMP_UNIT	   = 0
LR		   = 0

LED_BREAK_ID       = 280
LED_HOTWAR_ID      = 281
LED_HOTERR_ID      = 282
LED_ONOFF_ID       = 283
LED_VALNOW_ID      = 284
LED_TOTALTIME_ID   = 285

#LED_TEMP_ST_1_ID   = 298
#LED_TEMP_ST_2_ID   = 299
#LED_TEMP_ST_3_ID   = 300
#LED_TEMP_1_ID      = 301
#LED_TEMP_2_ID      = 302
#LED_TEMP_3_ID      = 303


#=========================================================
# 対チラー装置
# ### 共通仕様
#  TEMP_THR	：温度閾値 (これ以上はエラーとなる) [度]
#  TIMER_CYCLE	：温度取り込み周期 [秒]
#  NAME_*	：セッションの末の部分となる (インスタンスの名前にもなる) MAX8コ
#
# ### 個別仕様
#  CHILER_CONNECT_ID	: チラー装置との通信状態を格納するID
#  CHILER_STATE_ID	: チラー運転状態を格納するID (0:クーラー運転中 1:停止,ポンプ単独運転中 )
#  CHILER_ERR_ID	: チラーからの異常を格納するID 
#  CHILER_TEMP_ST_ID	: 温度異常を格納するID (ID=0は未実行)
#  CHILER_TEMP_ID	: 温度を格納するID (ID=0は未実行)
#   以降は、232C設定
#=========================================================
[KT_CHILER]
TEMP_THR           = 35 
TIMER_CYCLE        = 180
NAME_1             = TOP
NAME_2      	   = BOT

[KT_CHILER_TOP]
# 一般設定
CHILER_CONNECT_ID  = 300
CHILER_STATE_ID    = 301
CHILER_ERR_ID      = 302
CHILER_TEMP_ST_ID  = 303
CHILER_TEMP_ID     = 304
# 232C設定
com    = COM5
baud   = 96
parity = n
data   = 8
stop   = 1
to     = off
dtr    = on
rts    = on
idsr   = off
octs   = off

[KT_CHILER_BOT]
# 一般設定
CHILER_CONNECT_ID  = 305
CHILER_STATE_ID    = 306
CHILER_ERR_ID      = 307
CHILER_TEMP_ST_ID  = 308
CHILER_TEMP_ID     = 309
# 232C設定
com    = COM6
baud   = 96
parity = n
data   = 8
stop   = 1
to     = off
dtr    = on
rts    = on
idsr   = off
octs   = off


#=========================================================
# 対温度パネルメーター装置 (オムロン製 RS-232C)
# ### 共通仕様
#  NAME_*		：セッションの末の部分となる (インスタンスの名前にもなる) MAX8コ
#
# ### 個別仕様
# -１ループ単位-----------------
# [タスク名_セッション名]
#  UNIT_NUM		：管理対象装置数 (最大16機器)
#  TIMER_CYCLE		：温度取り込み周期 [秒]
#  CONNECT_ID		：232C 通信状態 機器ID 	(0：機器状態に登録しない)
#  TEMP_KETA	: 取得温度の桁合わせ (1で1/10。2で1/100。0はそのまま。マイナスは未対応)
#  232C定義
#
# -装置単位-----------------
# [タスク名_セッション名_UNIT(UnitNo)] UnitNo=1〜の連番
#  NAME			：装置名称
#  TEMP_LIMIT		：温度上限 [度] (0のときは、未チェック)
#  TEMP_ID		：温度 ID 	(0：機器状態に登録しない)
#  TEMP_ST_ID		：温度状態 ID	(0：機器状態に登録しない)
#  UNTEN_ID		：運転状態 ID	(0：機器状態に登録しない)
#  STATE_ID		：ステータスID 	(0：機器状態に登録しない)
#			     ステータス状態
#				1bit目：未計測状態
#				2bit目：表示範囲オーバー
#				3bit目：入力異常A
#				4bit目：入力異常B
#=========================================================
[KT_TEMPMT]
NAME_1		= MAIN

[KT_TEMPMT_MAIN]
UNIT_NUM	= 3
TIMER_CYCLE	= 180
CONNECT_ID	= 362
TEMP_KETA	= 1

com = COM1
baud=9600
parity=e
data=7
stop=2
to = ON
dtr = ON
rts = ON
idsr = ON
octs = ON

[KT_TEMPMT_MAIN_UNIT1]
NAME		= 機側盤
TEMP_LIMIT	= 50
TEMP_ID		= 363
TEMP_ST_ID	= 364
UNTEN_ID	= 365
STATE_ID	= 366

[KT_TEMPMT_MAIN_UNIT2]
NAME		= チラー室
TEMP_LIMIT	= 40
TEMP_ID		= 367
TEMP_ST_ID	= 368
UNTEN_ID	= 369
STATE_ID	= 370

[KT_TEMPMT_MAIN_UNIT3]
NAME		= 画像処理盤
TEMP_LIMIT	= 50
TEMP_ID		= 371
TEMP_ST_ID	= 372
UNTEN_ID	= 373
STATE_ID	= 374

#=========================================================
# DB容量管理
#---------------------------
# タスク名セッションの中身
# SESSION_1	: セッション情報 (1〜10)
#---------------------------
# 各セッションの中身
# DB_ODBC	: DBセッション名
# DB_TRAN_SIZE_ERR_ID : トランザクションログサイズ増加時の異常機器ID (0時異常判定処理未実施)
# DB_TRAN_ERR_SIZE : トランザクションエラー認識サイズ [MByte]
# TIME_CYCLE	: 定周期実行周期 [分] (0時、チェック無し)
# TIME_SIZECHECK: DB容量チェック周期 [分] (0時、容量チェック無し)
# THREAD_COUNT	: DB容量低下時の削除スレッド数 (0時、容量低下で削除しない)
# DEL_RITU_1	: 削除スレッド実行開始容量 [%-2] (空き容量が指定パーセント以下になるとスレッド実行) (降順)
# 			スレッドの実行数と同じ数にする事
# 			最大9コまでとする。(指定した最後のスレッドが起動時は、ホントに容量がやばいと判断して、全力で消しに行くので注意する事)
#			(0時、チェック無し)
# TIME_MAX_WAIT	: 書込優先時の待ち時間 [ms]
# TIME_MIN_WAIT	: 削除優先時の待ち時間 [ms]
# LOG_SAVEDAY	: ログ保存日数 (0時、LOG_INF削除 実施無し)
# COIL_DEL_COUNT: 1回での削除コイル件数
# COILRESULT_TBL: コイル実績テーブル (疵検管理Noが主キーのテーブルを指定する事)
# COILRESULT_KEY: コイル実績テーブルの主キー (通常疵検管理No)
# COILRESULT_SORT:コイル実績テーブルのソートキー(ASCでソート)(複数工程疵検管理Noが1テーブルに入っているような場合、疵検管理NoではASCソートできない対応) ※未指定なら 従来どおりCOILRESULT_KEY でソート、 (通常は、空白。設定する場合は、登録日付) 
#					※ COILRESULT_SORT が 設定されている場合 (且つ COILRESULT_KEY と異なる場合)、バックアップ削除(最後に削除した疵検管理Noよりも小さいものを全部削除)は、停止
#					   そうしないと、ソートで大きい疵検管理Noが消えた場合、バックアップ削除でそれよりも小さい疵検管理Noが全部消えてしまうため
# 
#### 拡張
# ZI_1		: コイル実績の疵検管理Noを消す時に、一緒に消えていくテーブル (容量により削除) (1〜無限)		
# 			テーブル名, 主キー, サブキー(通常,疵No or ""), 一回の削除件数(0だと疵検管理No全部)
#  
# TI_1		: 日付で管理しているテーブル (定周期により削除) (1〜無限)
# 			テーブル名, 日付列(通常,登録日付), 保存日数
#
# CI_1		: 主キーの件数で管理しているテーブル (定周期により削除) (1〜無限)
#			テーブル名, 主キー, サブキー(通常,疵No or ""), 一回の削除件数(0だと対象全部), 保存上限数
#=========================================================
[TI_DELETE]
SESSION_1 = TI_DELETE_A
SESSION_2 = TI_DELETE_B

# 統合サーバー取得事後仕様 ------>>>
# 無害Gr 削除スレッド実行数(1〜9) (0のときは、以降一切無処理)
#LOWGR_THREAD_COUNT = 2
LOWGR_THREAD_COUNT = 0

# 何日以前のデータを強制削除するか [日] (0のときは、強制削除しない)
LOWGR_DELEDAY = 3
# 一覧テーブルのチェック周期 [分]
LOWGR_CYCLE = 60

# 一覧テーブルから削除対象キー取得SQL (削除対象主キーを昇順で一覧取得)
# 無害Gr削除後の一覧テーブル更新SQL (WHERE句には削除した主キーがセットされる) ※ 無くてもOK
SQL_SELECT_KEY = "SELECT 管理No FROM T_COIL_RESULT WHERE 無害Gr削除区分 IS NULL AND [統合サーバー取得区分]=1 ORDER BY 管理No ASC"
SQL_SELECT_END = "UPDATE T_COIL_RESULT SET 無害Gr削除区分=1 WHERE 管理No='%s'"

# テーブル設定 (いろんなところで使用)
COILRESULT_TBL 	= T_COIL_RESULT
COILRESULT_TIME = 登録日付
MAINKEY_NAME 	= 管理No
SUBKEY_NAME 	= 疵No

# 無害Gr削除メイン
# KEY :(通常DEFECT_INF)		テーブル名, 対象抽出WHERE句(単純にAddするだけなのでAND等はつけること)
# SUB :( TBL_SUB_[KEYに紐付く]_[1からの連番] )	テーブル名 (主キー,サブキーはﾒｲﾝと同じ)
TBL_KEY_1	= "T_DEFECT_INF_T, AND 無害Gr=1"
TBL_KEY_2	= "T_DEFECT_INF_B, AND 無害Gr=1"
TBL_SUB_1_1 = T_DEFECT_IMG_T
TBL_SUB_1_2 = T_DEFECT_ATTR0_T
TBL_SUB_1_3 = T_DEFECT_ATTR1_T
TBL_SUB_1_4 = T_DEFECT_ATTR2_T
TBL_SUB_1_5 = T_DEFECT_ATTR3_T
TBL_SUB_1_6 = T_DEFECT_ATTR4_T
TBL_SUB_2_1 = T_DEFECT_IMG_B
TBL_SUB_2_2 = T_DEFECT_ATTR0_B
TBL_SUB_2_3 = T_DEFECT_ATTR1_B
TBL_SUB_2_4 = T_DEFECT_ATTR2_B
TBL_SUB_2_5 = T_DEFECT_ATTR3_B
TBL_SUB_2_6 = T_DEFECT_ATTR4_B
# <<<--------------------


# デフラグ実行仕様 ------>>>
# デフラグ経過日。この間隔以上空いたときにデフラグ実行 (0のときは、未実行)
DEFRAG_INTERVAL_DAY = 7

# デフラグ実行可=1, 不可=0となるように単項目のSQL文。※ 操業状態の停止、休止で実行1。
SQL_DEFRAG_RUN = "SELECT (CASE 機器状態 WHEN 2 THEN 0 ELSE 1 END) FROM M_STATUS_INF WHERE 機器ID=154"
# <<<--------------------


[TI_DELETE_A]
DB_ODBC = DB_A
DB_TRAN_SIZE_ERR_ID = 345
DB_TRAN_ERR_SIZE = 200000
TIME_CYCLE = 10
TIME_SIZECHECK = 5
THREAD_COUNT = 3
DEL_RITU_1 = 600
DEL_RITU_2 = 300
DEL_RITU_3 = 200
TIME_MAX_WAIT = 3000
TIME_MIN_WAIT = 100
LOG_SAVEDAY = 180
COIL_DEL_COUNT = 20
COILRESULT_TBL = T_COIL_RESULT
COILRESULT_KEY = 管理No
COILRESULT_SORT = 

#### 拡張
## コイル実績の管理Noを消す時に、一緒に消えていくテーブル達
# テーブル名, 主キー, サブキー(通常,疵No or ""), 一回の削除件数(0だと管理No全部)
ZI_1	= T_COIL_INF, 				管理No,		,		0
ZI_2	= T_COIL_ORDER,				管理No,		,		0
ZI_3	= T_COIL_POSITION,			管理No,		,		0
ZI_4	= T_COIL_POSITION_OUT,			管理No,		,		0
ZI_5	= T_COIL_POSITION_ANA,			管理No,		,		0
ZI_6	= T_COIL_TRAND,				管理No,		,		0
ZI_7	= T_DEFECT_INF_T,			管理No,		疵No,		5000
ZI_8	= T_DEFECT_IMG_T,			管理No,		疵No,		1000
ZI_9	= T_DEFECT_ATTR0_T,			管理No,		疵No,		2000
ZI_10	= T_DEFECT_ATTR1_T,			管理No,		疵No,		2000
ZI_11	= T_DEFECT_ATTR2_T,			管理No,		疵No,		2000
ZI_12	= T_DEFECT_ATTR3_T,			管理No,		疵No,		2000
ZI_13	= T_DEFECT_ATTR4_T,			管理No,		疵No,		2000
ZI_14	= T_DEFECT_INF_B,			管理No,		疵No,		5000
ZI_15	= T_DEFECT_IMG_B,			管理No,		疵No,		1000
ZI_16	= T_DEFECT_ATTR0_B,			管理No,		疵No,		2000
ZI_17	= T_DEFECT_ATTR1_B,			管理No,		疵No,		2000
ZI_18	= T_DEFECT_ATTR2_B,			管理No,		疵No,		2000
ZI_19	= T_DEFECT_ATTR3_B,			管理No,		疵No,		2000
ZI_20	= T_DEFECT_ATTR4_B,			管理No,		疵No,		2000
ZI_21	= T_DUMMY_DEFECT_INF,		管理No,		疵No,		5000
ZI_22	= T_EDGE_COIL_INF,			管理No,		,		0
ZI_23	= T_EDGE_CHANGE_INF,		管理No,		,		0
ZI_24	= T_COIL_CUT_POS,			管理No,		,		0
ZI_25	= T_COIL_CUT_RESULT,		管理No,		,		0
ZI_26	= T_COIL_SAISUN_RESULT,		管理No,		,		0
ZI_27	= T_MAE_COIL_INF,			管理No,		,		0
ZI_28	= T_MAE_COIL_LINE,			管理No,		,		0
ZI_29	= T_MAE_FF_INF,				管理No,		,		0
ZI_30	= T_MAE_DEFECT_INF,			管理No,		,		0
ZI_31	= T_MAE_DEFECT_IMG,			管理No,		,		0
ZI_32	= T_ACCESS_NEXT_COIL_INF,	管理No,		,		0
ZI_33	= T_ACCESS_NEXT_DEFECT_INF,	管理No,		,		0


## 日付で管理しているテーブル
# テーブル名, 日付列(通常,登録日付), 保存日数
TI_1	= T_ST_HISTORY_INF,			登録日付,	400
TI_2	= T_STATUS_LOG,				登録日付,	90

TI_3	= BUF_PRO_R_COILINF,		登録日付,	90
TI_4	= BUF_PRO_R_CUT,			登録日付,	90
TI_5	= BUF_PRO_R_SAISUN,			登録日付,	90
TI_6	= BUF_PRO_S_ZISEKI,			登録日付,	90

TI_7	= BUF_FF_S_ZISEKI,			登録日付,	90
TI_8	= BUF_FF_R_MAEINF,			登録日付,	90



[TI_DELETE_B]
DB_ODBC = DB_B
DB_TRAN_SIZE_ERR_ID = 346
DB_TRAN_ERR_SIZE = 200000
TIME_CYCLE = 10
TIME_SIZECHECK = 5
THREAD_COUNT = 3
DEL_RITU_1 = 600
DEL_RITU_2 = 300
DEL_RITU_3 = 200
TIME_MAX_WAIT = 3000
TIME_MIN_WAIT = 100
LOG_SAVEDAY = 180
COIL_DEL_COUNT = 20
COILRESULT_TBL = T_COIL_RESULT
COILRESULT_KEY = 管理No
COILRESULT_SORT = 

#### 拡張
## コイル実績の管理Noを消す時に、一緒に消えていくテーブル達
# テーブル名, 主キー, サブキー(通常,疵No or ""), 一回の削除件数(0だと管理No全部)
ZI_1	= T_COIL_INF, 				管理No,		,		0
ZI_2	= T_COIL_ORDER,				管理No,		,		0
ZI_3	= T_COIL_POSITION,			管理No,		,		0
ZI_4	= T_COIL_POSITION_OUT,			管理No,		,		0
ZI_5	= T_COIL_POSITION_ANA,			管理No,		,		0
ZI_6	= T_COIL_TRAND,				管理No,		,		0
ZI_7	= T_DEFECT_INF_T,			管理No,		疵No,		5000
ZI_8	= T_DEFECT_IMG_T,			管理No,		疵No,		1000
ZI_9	= T_DEFECT_ATTR0_T,			管理No,		疵No,		2000
ZI_10	= T_DEFECT_ATTR1_T,			管理No,		疵No,		2000
ZI_11	= T_DEFECT_ATTR2_T,			管理No,		疵No,		2000
ZI_12	= T_DEFECT_ATTR3_T,			管理No,		疵No,		2000
ZI_13	= T_DEFECT_ATTR4_T,			管理No,		疵No,		2000
ZI_14	= T_DEFECT_INF_B,			管理No,		疵No,		5000
ZI_15	= T_DEFECT_IMG_B,			管理No,		疵No,		1000
ZI_16	= T_DEFECT_ATTR0_B,			管理No,		疵No,		2000
ZI_17	= T_DEFECT_ATTR1_B,			管理No,		疵No,		2000
ZI_18	= T_DEFECT_ATTR2_B,			管理No,		疵No,		2000
ZI_19	= T_DEFECT_ATTR3_B,			管理No,		疵No,		2000
ZI_20	= T_DEFECT_ATTR4_B,			管理No,		疵No,		2000
ZI_21	= T_DUMMY_DEFECT_INF,		管理No,		疵No,		5000
ZI_22	= T_EDGE_COIL_INF,			管理No,		,		0
ZI_23	= T_EDGE_CHANGE_INF,		管理No,		,		0
ZI_24	= T_COIL_CUT_POS,			管理No,		,		0
ZI_25	= T_COIL_CUT_RESULT,		管理No,		,		0
ZI_26	= T_COIL_SAISUN_RESULT,		管理No,		,		0
ZI_27	= T_MAE_COIL_INF,			管理No,		,		0
ZI_28	= T_MAE_COIL_LINE,			管理No,		,		0
ZI_29	= T_MAE_FF_INF,				管理No,		,		0
ZI_30	= T_MAE_DEFECT_INF,			管理No,		,		0
ZI_31	= T_MAE_DEFECT_IMG,			管理No,		,		0
ZI_32	= T_ACCESS_NEXT_COIL_INF,	管理No,		,		0
ZI_33	= T_ACCESS_NEXT_DEFECT_INF,	管理No,		,		0


## 日付で管理しているテーブル
# テーブル名, 日付列(通常,登録日付), 保存日数
TI_1	= T_ST_HISTORY_INF,			登録日付,	400
TI_2	= T_STATUS_LOG,				登録日付,	90

TI_3	= BUF_PRO_R_COILINF,		登録日付,	90
TI_4	= BUF_PRO_R_CUT,			登録日付,	90
TI_5	= BUF_PRO_R_SAISUN,			登録日付,	90
TI_6	= BUF_PRO_S_ZISEKI,			登録日付,	90

TI_7	= BUF_FF_S_ZISEKI,			登録日付,	90
TI_8	= BUF_FF_R_MAEINF,			登録日付,	90


#=========================================================
# DB同期管理
#---------------------------
# タスク名セッションの中身
## SESSION_1	: セッション情報 (1〜) [セッション名, TYPE]
# 		   TYPE : このセッションの動作定義 (同一タイプの最大登録数10個)
#     		0 ･･･ マスターの同期  (初期時)
#				TBLの形式１：テーブル名
#			1 ･･･ 実績の追加コピー (先テーブルの最新をキーに、それ以降の元テーブルのデータを先テーブルにコピー)
#				TBLの形式１：テーブル名,  1回の追加件数,  主キー1(必須),  主キー2(空白可),  主キー3(空白可)
#			2 ･･･ 実績の移動
#				TBLの形式１：テーブル名,  1回の移動件数,  主キー1(必須),  主キー2(空白可)
#			3 ･･･ 実績の完全同期 (双方のテーブルで、キーが無い項目を補間しあう)  (初期時,A→Bにデータがコピー)
#				TBLの形式１：テーブル名,  1回の追加件数,  主キー1(必須),  主キー2(空白可),  主キー3(空白可)
#---------------------------
# 各セッションの中身
# DB_ODBC_A	: DBセッション名
# DB_ODBC_B	: DBセッション名
# LINK_PATH_AB	: A系のDBに定義されているリンクサーバー経由でB系アクセスする時のパス "[リンクサーバー名].データベース名.dbo."
# LINK_PATH_BA	: B系のDBに定義されているリンクサーバー経由でA系アクセスする時のパス "[リンクサーバー名].データベース名.dbo."
#   通常の定周期実行時は、 A→Bの流れでデータが処理される
#   このタスクを使用する場合は、必ずDBのリンクサーバーの定義をする事。
#    ・A系には、B系のサーバーを追加。B系には、A系のサーバーを追加する事。
#    ・リンクサーバーの定義は、 プロパイダ[SQL Native Client、Microsoft OLE DB Pro…SQLServer]
#				製品名[mySQLServer]    データソース[IPアドレス]   カタログ[DB名]   セキュリティでログイン名とパスを設定する事
#
# TIME_FAST	: 初期実行までの時間 (0:定周期無し) [分]
# TIME_INTERVAL	: ２回目以降の実行周期 [分]
# MAIL_KEY	: メールスロット受信時に第2引数と一致した場合、強制的に実行される。 (0:未実施)
# T_1		: テーブル名 (最大50テーブル)
#
# FACT_KS_EQALDB_01の起動受信時
#     data[0]   0:A→B    1:B→A
#     data[1]  任意の値 (0:無視  1〜:MAIL_KEYと一致した場合、強制的に実行される。
#
#---------------------------
#リンクサーバー定義	(A系のDBにはB系にアクセスするために定義を設定させる)
# [LINKSRV_1]		1〜の連番
# SELECT_ODBC_KEY	追加対象のODBCキー
# LINK_NAME		リンクサーバー名
# DBADDLESS		: DB接続アドレス
# DSNAME		: SQLServerのDB名称
# USERID		: ユーザー名
# PASSWORD		: パスワード
# SRVPRODUCT		製品名 (mySQLServer)固定
# PROVIDER		プロバイダ (SQLServer2005=SQLNCLI。SQLServer2008=SQLNCLI10。SQLServer2014=SQLNCLI11)
#=========================================================
[KS_EQALDB]
SESSION_1 = KS_EQALDB_EQAL, 0
#SESSION_2 = KS_EQALDB_MOVE, 2

#リンクサーバー定義
[LINKSRV_1]
SELECT_ODBC_KEY = DB_A
LINK_NAME		= BACKUP
DBADDLESS		= 192.9.201.32
DSNAME			= DATABASE_N1CAPL_SPM
USERID			= sa
PASSWORD		= vz
SRVPRODUCT		= mySQLServer
PROVIDER		= SQLNCLI11

[LINKSRV_2]
SELECT_ODBC_KEY = DB_B
LINK_NAME		= TOKATU
DBADDLESS		= 192.9.201.31
DSNAME			= DATABASE_N1CAPL_SPM
USERID			= sa
PASSWORD		= vz
SRVPRODUCT		= mySQLServer
PROVIDER		= SQLNCLI11

[KS_EQALDB_EQAL]
DB_ODBC_A	= DB_A
DB_ODBC_B	= DB_B
LINK_PATH_AB	= [BACKUP].DATABASE_N1CAPL_SPM.dbo.
LINK_PATH_BA	= [TOKATU].DATABASE_N1CAPL_SPM.dbo.
TIME_FAST	= 1440
TIME_INTERVAL	= 60
MAIL_KEY	= 1
# マスター同期対象テーブル
T_1		= M_STATUS_MASTER
T_2		= M_STATUS_INF
T_3		= M_LOG_MASTER
T_4		= M_PC_MASTER
T_5		= M_PC_INF
T_6		= M_ST_HISTORY_MASTER
T_7		= M_BASE_ACTION_MASTER
T_8		= M_COMMON_MASTER
T_9		= TYPE_NAME
T_10		= GRADE_NAME
T_11		= M_SCODE_MASTER
T_12		= M_SCODE_JUDGE
T_13		= M_SCODE_OUTPUT
T_14		= M_PCODE_MASTER
T_15		= M_PCODE_JUDGE
T_16		= M_PCODE_OUTPUT
T_17		= M_PALL_OUTPUT
T_18		= M_PCOMMON_OUTPUT
T_19		= M_CAMERA_LINKSWITCH
T_20		= M_MAE_MASTER
T_21		= M_MAE_TYPE_NAME
T_22		= M_MAE_GRADE_NAME
T_23		= M_PAR_GRID_SETTING
T_24		= M_PAR_LOV_ITEM
T_25		= ATTR_NAME
T_26		= PARAM_COMMON
T_27		= PARAM_SCODE
T_28		= PARAM_CAMSET
T_29		= PARAM_CAMSET_SCODE
T_30		= PARAM_CAMSET_ANGLE
T_31		= PARAM_CAMANGLE_SCODE
T_32		= PARAM_CAMSET_ANGLE_SCODE
T_33		= PARAM_THRESHOLD
T_34		= PD_PARAM_THRESHOLD
T_35		= PARAM_REDUCTION
T_36		= PARAM_FILTER
T_37		= ROLL_INFO
T_38		= PCINFO_DESC
T_39		= Group_Name

### 今回無し
[KS_EQALDB_MOVE]
DB_ODBC_A	= DB_B
DB_ODBC_B	= DB_A
LINK_PATH_AB	= [TOKATU].DATABASE_N1CAPL_SPM.dbo.
LINK_PATH_BA	= [BACKUP].DATABASE_N1CAPL_SPM.dbo.
TIME_FAST	= 0
TIME_INTERVAL	= 0
MAIL_KEY	= 2
#実績移動
T_1		= T_LOG_INF,			1000,	登録日付, 	AutoNo
T_2		= T_ST_HISTORY_INF,		2000,	登録日付,	区分
T_3		= T_STATUS_LOG,			2000,	登録日付,	AutoNo
T_4		= T_COIL_INF,			500,	管理No
T_5		= T_COIL_ORDER,			500,	管理No
T_6		= T_COIL_POSITION,		2000,	管理No,		ID
T_7		= T_COIL_POSITION_OUT,		2000,	管理No,		ID
T_8		= T_COIL_POSITION_ANA,		2000,	管理No,		ID
T_9		= T_COIL_TRAND,			2000,	管理No,		表裏区分,	取得位置
T_10		= T_DEFECT_INF_T,			500,	管理No,		疵No
T_11		= T_DEFECT_IMG_T,			500,	管理No,		疵No
T_12		= T_DEFECT_ATTR0_T,		500,	管理No,		疵No
T_13		= T_DEFECT_ATTR1_T,		500,	管理No,		疵No
T_14		= T_DEFECT_ATTR2_T,		500,	管理No,		疵No	
T_15		= T_DEFECT_ATTR3_T,		500,	管理No,		疵No
T_16		= T_DEFECT_ATTR4_T,		500,	管理No,		疵No
T_17		= T_DEFECT_INF_B,			500,	管理No,		疵No
T_18		= T_DEFECT_IMG_B,			500,	管理No,		疵No
T_19		= T_DEFECT_ATTR0_B,		500,	管理No,		疵No
T_20		= T_DEFECT_ATTR1_B,		500,	管理No,		疵No
T_21		= T_DEFECT_ATTR2_B,		500,	管理No,		疵No
T_22		= T_DEFECT_ATTR3_B,		500,	管理No,		疵No
T_23		= T_DEFECT_ATTR4_B,		500,	管理No,		疵No
T_24		= T_DUMMY_DEFECT_INF,			500,	管理No,		疵No
T_25		= T_EDGE_COIL_INF,		500,	管理No,		表裏区分
T_26		= T_EDGE_CHANGE_INF,		500,	管理No,		長手位置,	表裏区分
T_27		= T_COIL_CUT_POS,			500,	管理No
T_28		= T_COIL_CUT_RESULT,			500,	管理No
T_29		= T_COIL_SAISUN_RESULT,			500,	管理No
T_30		= T_MAE_COIL_INF,		1000,	管理No
T_31		= T_MAE_COIL_LINE,		1000,	管理No,	工程種別,	表裏区分
T_32		= T_MAE_FF_INF,			3000,	管理No,	疵No
T_33		= T_MAE_DEFECT_INF,		3000,	管理No,	疵No
T_34		= T_MAE_DEFECT_IMG,		500,	管理No,	疵No
T_35		= T_ACCESS_NEXT_COIL_INF,		500,	管理No
T_36		= T_ACCESS_NEXT_DEFECT_INF,		500,	管理No,		疵No

T_37		= T_COIL_RESULT,		500,	管理No

#=========================================================
# 表示管理
# IMAGE_PATH        : 探傷画面表示用の画像格納パス
# MAEIMG_PATH       : 前工程疵画像格納パス
# SAVE_IP           : 疵実績情報送信PCのIPアドレス
# SAVE_PORT         : 受信ポート
# STATUS_MERGE_OUT  : 出側 通板位置ステータスマージ処理実施有無(1:マージする、以外：未実施)
# STATUS_MERGE_ANA  : 穴検 通板位置ステータスマージ処理実施有無(1:マージする、以外：未実施)
#=========================================================
[HY_DEFECT]
IMAGE_PATH = D:\IMG
MAEIMG_PATH = D:\MAE
SAVE_IP	   = 127.0.0.1
SAVE_PORT  = 10002
STATUS_MERGE_OUT = 1
STATUS_MERGE_ANA = 1

#=========================================================
# 操作画面
#   RAS_TIMER		   : RAS画面DB読み込み周期[msec]
#   SYUKUTAI_TIMER	   : 縮退状態画面DB読み込み周期[msec]
#
#   MAP_SCROLL_DIRECT      : マップ進行方向             (0:左から右、1:右から左)
#   MAP_VIEW_DIRECT_O      : 表面疵マップ表示側         (0:左がDS、1:左がWS)
#   MAP_CELL_DIRECT_O      : 表面疵マップセル側         (0:疵マップの左右反転無し、1:疵マップの左右反転有り)
#   IMAGE_VIEW_DIRECT_O    : 表面疵画像の表示欄反転     (0:左がDS、1:左がWS)
#   IMAGE_TOP_BOTTOM_INF_O : 表面疵画像の上下反転       (0:反転無し、1:反転有り)
#   IMAGE_SIDE_INF_O       : 表面疵画像の右左反転       (0:反転無し、1:反転有り)
#   MAP_VIEW_DIRECT_U      : 裏面疵マップ表示側         (0:左がDS、1:左がWS)
#   MAP_CELL_DIRECT_U      : 裏面疵マップセル側         (0:疵マップの左右反転無し、1:疵マップの左右反転有り)
#   IMAGE_VIEW_DIRECT_U    : 裏面疵画像の表示欄反転     (0:左がDS、1:左がWS)
#   IMAGE_TOP_BOTTOM_INF_U : 裏面疵画像の上下反転       (0:反転無し、1:反転有り)
#   IMAGE_SIDE_INF_U       : 裏面疵画像の右左反転       (0:反転無し、1:反転有り)
#   IMAGE_WIDTH            : 切り出し画像100pixel横幅設定       (1 〜 :100pixel横幅を指定[mm])
#   FRAME_IMAGE_WIDTH      : フレーム画像100pixel横幅設定       (1 〜 :100pixel横幅を指定[mm])
#
#   DEFMAP_UP_TOP          : 疵マップ画面 表面 長手方向に対して、上下反転 (0:反転無し、1:反転有り)
#   DEFMAP_UP_BOT          : 疵マップ画面 裏面 長手方向に対して、上下反転 (0:反転無し、1:反転有り)
#   DEFMAP_SIDE_TOP        : 疵マップ画面 表面 長手縦方向表示時、左右反転 (0:反転無し、1:反転有り)
#   DEFMAP_SIDE_BOT        : 疵マップ画面 裏面 長手縦方向表示時、左右反転 (0:反転無し、1:反転有り)
#   DEFMAP_SIDE_TOP_HORZ   : 疵マップ画面 表面 長手横方向表示時、左右反転 (0:反転無し、1:反転有り)
#   DEFMAP_SIDE_BOT_HORZ   : 疵マップ画面 裏面 長手横方向表示時、左右反転 (0:反転無し、1:反転有り)
#   DEFMAP_HORZ_FLOW       : 疵マップ画面 長手方向の向き                  (0:横方向 1:縦方向)
#
#   DISP_TOP_FLG           : 最前面   画面表示設定       (0:通常、1:最前面表示)
#   SEARCH_TIMEOUT_SEC     : コマンド実行タイムアウト時間 (1〜 :検索用（単位：秒））
#   ENABLE_PASS_CHECK	   : RAS画面からPCログオフ/再起動する時のパスワード確認の有無(0：無し、1：有り。未定義時、有り)
#
#   TIKUSEKI_PATH          : 自動帳票保存先パス(長期保存用) ※最後に\を付けること
#   BACKUP_PATH            : 自動帳票保存先パス(バックアップ用) ※最後に\を付けること
#   FFVOTE_NO_AUTO         : 自動帳票種類No(端板カット未反映)
#   FFVOTE_NO_CUT          : 自動帳票種類No(端板カット反映)
#   FFVOTE_NO_RE           : 自動帳票種類No(再発行)
#   MAP_TIKUSEKI_PATH      : マップ帳票保存先パス(長期保存用) ※最後に\を付けること
#   MAP_BACKUP_PATH        : マップ帳票保存先パス(バックアップ用) ※最後に\を付けること
#   LST_TIKUSEKI_PATH      : リスト帳票保存先パス(長期保存用) ※最後に\を付けること
#   LST_BACKUP_PATH        : リスト帳票保存先パス(バックアップ用) ※最後に\を付けること
#   SO_GAMENN_SPM_PATH     : 中央φω実行フォルダパス ※最後に\を付けること
#   SO_GAMENN_ANA_PATH     : 穴検φω実行フォルダパス ※最後に\を付けること
#   SO_GAMENN_OUT_PATH     : 出側φω実行フォルダパス ※最後に\を付けること
#
#=========================================================
[SO_GAMENN_SPM]
RAS_TIMER              = 1000
SYUKUTAI_TIMER         = 5000

MAP_SCROLL_DIRECT      = 0

MAP_VIEW_DIRECT_O      = 1
MAP_CELL_DIRECT_O      = 1
IMAGE_VIEW_DIRECT_O    = 1
IMAGE_TOP_BOTTOM_INF_O = 1
IMAGE_SIDE_INF_O       = 1

MAP_VIEW_DIRECT_U      = 0
MAP_CELL_DIRECT_U      = 0
IMAGE_VIEW_DIRECT_U    = 0
IMAGE_TOP_BOTTOM_INF_U = 1
IMAGE_SIDE_INF_U       = 0

IMAGE_WIDTH            = 25
FRAME_IMAGE_WIDTH      = 25

DEFMAP_UP_TOP          = 0
DEFMAP_UP_BOT          = 0
DEFMAP_SIDE_TOP        = 0
DEFMAP_SIDE_BOT        = 0
DEFMAP_SIDE_TOP_HORZ   = 0
DEFMAP_SIDE_BOT_HORZ   = 0
DEFMAP_HORZ_FLOW       = 0

DISP_TOP_FLG           = 0
SEARCH_TIMEOUT_SEC     = 60
ENABLE_PASS_CHECK　　　= 0

SO_GAMENN_SPM_PATH	= .\..\EXE\
SO_GAMENN_ANA_PATH	= .\..\EXE_ANA\
SO_GAMENN_OUT_PATH	= .\..\EXE_OUT\

#TIKUSEKI_PATH 		= \\192.9.201.31\d$\自動帳票\
#BACKUP_PATH 		= \\192.9.201.45\d$\自動帳票\
#FFVOTE_NO_AUTO		= 1
#FFVOTE_NO_CUT		= 2
#FFVOTE_NO_RE		= 3
#MAP_TIKUSEKI_PATH	= \\192.9.201.31\d$\検査結果連絡票_マップ\
#MAP_BACKUP_PATH		= \\192.9.201.45\d$\検査結果連絡票_マップ\
#LST_TIKUSEKI_PATH	= \\192.9.201.31\d$\検査結果連絡票_リスト\
#LST_BACKUP_PATH		= \\192.9.201.45\d$\検査結果連絡票_リスト\

#=========================================================
# パラメータ設定画面
# PASSCHK_UMU  : パスワード設定実施有無(0:パスワード無し、設定可 -1:パス無し、設定不可  1:パス有り、設定可)
# PASSWORD	   : 設定値変更用 パスワード
# HARDCOPY_UMU : DB保存時のハードコピー出力有無(0:出力無し、1:出力有り)
#=========================================================
[KA_PARSET]
PASSCHK_UMU = 0
PASSWORD = kizu
HARDCOPY_UMU = 1

