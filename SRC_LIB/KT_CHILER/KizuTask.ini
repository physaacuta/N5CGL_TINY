#////////////////////////////////////////////////////////////////////
# 機能単位の設定ファイル
#  ※ 名前の付け方 [t統括機能 kizuTask.ini]
#////////////////////////////////////////////////////////////////////

#**************************************************************************************
# ライブラリ使用 部
#**************************************************************************************
#=========================================================
# データベース情報
#  DBADDLESS	: DB接続アドレス (VBでしか使用しない)
#  ODBCNAME	: ODBCの名称 (C のみ使用)
#  DSNAME	: SQLServerのDB名称(VB のみ使用)
#  USERID	: ユーザー名
#  PASSWORD	: パスワード
#=========================================================
# オンライン実行中DB
[DB]
DBADDLESS= 192.9.200.33
#DBADDLESS= 192.9.200.216\db2005
ODBCNAME = DATABASE_2PL
DSNAME   = DATABASE_2PL
USERID   = sa
PASSWORD = nsc
# A系DB
[DB_A]
DBADDLESS= 192.9.200.33
ODBCNAME = DATABASE_2PL
DSNAME   = DATABASE_2PL
USERID   = sa
PASSWORD = nsc
# B系DB
[DB_B]
DBADDLESS= 192.9.200.32
ODBCNAME = DATABASE_2PLsub
DSNAME   = DATABASE_2PL
USERID   = sa
PASSWORD = nsc

#=========================================================
#　前工程DB情報
#=========================================================
# 熱延疵検DB (新タイプ)
[DB_HOT]
DBADDLESS= 10.25.31.91
ODBCNAME = DATABASE_HOT
DSNAME   = DATABASE_HOT
USERID   = sa
PASSWORD = nsc
# 熱延疵検DB (旧タイプ) ※ いずれ削除予定
[DB_HOT_OLD]
DBADDLESS= 10.25.31.91
ODBCNAME = DATABASE_HOT_OLD
DSNAME   = HOT_DATABASE
USERID   = sa
PASSWORD = nsc


#=========================================================
# 共通設定
#  LINEID	: ライン区分(コンパイル無しでタスクの切替等で使用可能) (0:2PL 1:3PL )
#  NOA		: NOA接続フラグ (0:オンライン  1:遠隔  9:デバック)
#=========================================================
[COMMON]
LINEID = 0
NOA = 9

#=========================================================
# 機器ID定義
#  各機能での機器IDを定義 (共通支援機能での機器IDは除く)
#=========================================================
[STATUS]
# 判定PC01応答無し
HANTEI_ANS_1_ID = 128
HANTEI_ANS_2_ID = 129
HANTEI_ANS_3_ID = 130
HANTEI_ANS_4_ID = 131
HANTEI_ANS_5_ID = 132
HANTEI_ANS_6_ID = 133
HANTEI_ANS_7_ID = 134
HANTEI_ANS_8_ID = 135
HANTEI_ANS_9_ID = 136
HANTEI_ANS_10_ID = 137
HANTEI_ANS_11_ID = 138
HANTEI_ANS_12_ID = 139
# 判定PC 異常発生（バックアップも不可能）
HANTEI_TOP_ANS_ID = 140
HANTEI_BOT_ANS_ID = 141
CYCLE_TOP_ANS_ID = 142
CYCLE_BOT_ANS_ID = 143

# カメラ温度状態
CAM_TEMPSTATE_1_1_ID = 164
CAM_TEMPSTATE_2_1_ID = 165
CAM_TEMPSTATE_3_1_ID = 166
CAM_TEMPSTATE_4_1_ID = 167
CAM_TEMPSTATE_5_1_ID = 168
CAM_TEMPSTATE_6_1_ID = 169
CAM_TEMPSTATE_7_1_ID = 170
CAM_TEMPSTATE_8_1_ID = 171
CAM_TEMPSTATE_9_1_ID = 172
CAM_TEMPSTATE_10_1_ID = 173

# カメラ温度
CAM_TEMP_1_1_ID = 174
CAM_TEMP_2_1_ID = 175
CAM_TEMP_3_1_ID = 176
CAM_TEMP_4_1_ID = 177
CAM_TEMP_5_1_ID = 178
CAM_TEMP_6_1_ID = 179
CAM_TEMP_7_1_ID = 180
CAM_TEMP_8_1_ID = 181
CAM_TEMP_9_1_ID = 182
CAM_TEMP_10_1_ID = 183

# ライン稼動時の照明OFF
LED_RUNOFF_1_ID = 258
LED_RUNOFF_2_ID = 259
# チラー装置PI
CHILER_PI_ERR_1_ID = 260
CHILER_PI_ERR_2_ID = 261


# カメラコントローラー
CAMCONTROL_ID = 272
# カウンターボード
BOOD_CNT_ID = 273
# PIOボード
BOOD_PIO_ID = 274

# 稼動状態
DIV_KADOU_ID = 275
# 運転モード
DIV_UNTEN_ID = 276
# 操業状態
DIV_SOGYO_ID = 277
# PLG区分
DIV_PLGMODE_ID = 278
# 未検査区間
FRAME_SKIP_1_ID = 279
FRAME_SKIP_2_ID = 280
# 検査開始１本目
COIL_INIT_ID = 281
COIL_RESTART_ID = 282
# コイル情報無し
COIL_KEN_ID = 283
#COIL_DSP_ID = 298
# コイル長異常
MAXLEN_KEN_ID = 284
MAXLEN_DSP_ID = 285

# 画像書き込み失敗
BCP_ERR_ID = 288
# 検査実績保存上限
DB_SAVE_MAX_1_ID = 289
DB_SAVE_MAX_2_ID = 290
# 検査実績保存スキップ
DB_SAVE_SKIP_1_ID = 291
DB_SAVE_SKIP_2_ID = 292
# プロコン通信
PROCON_ID = 293
#FF送信
FFSERV_ID = 294
#FFサーバーイニシャル中
FF_CONNECT_ERR_ID=295
# 対シーケンサ通信
DATAMEM_SEQ_ID = 296
DATAMEM_HB_ID = 297
PIOSEQ_HB_ID = 298
# 通板中情報
LINE_CNO_ID = 299
LINE_LEN_ID = 300
LINE_ZANLEN_ID = 301
LINE_SPEED_ID = 302
#エアドライア
AIR_BLOW_1_ID=303
AIR_BLOW_2_ID=304
# カメラ台車位置情報
DAISYA_1_ID = 305
DAISYA_2_ID = 306


#=========================================================
# 共有メモリ情報 (1〜50まで)
#  MEM1_NAME	: 共有メモリ名
#  MEM1_SIZE	: サイズ
#=========================================================
[MEM]
#MEM1_NAME = TBL_TO_COIL
#MEM1_SIZE = 6144
#MEM2_NAME = TBL_TO_SEQMEM
#MEM2_SIZE = 512
MEM11_NAME = TBL_TO_COIL
MEM11_SIZE = 6144
MEM12_NAME = TBL_TO_SEQMEM
MEM12_SIZE = 512

# 表示機能もテストするために定義しておく
MEM1_NAME = TBL_HY_STATUS
MEM1_SIZE = 2048
MEM2_NAME = TBL_HY_POINT
MEM2_SIZE = 2048
MEM3_NAME = TBL_HY_COILINF
MEM3_SIZE = 7616
MEM4_NAME = TBL_HY_COILRESULT
MEM4_SIZE = 5120
MEM5_NAME = TBL_HY_MAP_COLROW
MEM5_SIZE = 169344000
MEM6_NAME = TBL_HY_MAP_ROW
MEM6_SIZE = 8064000
MEM7_NAME = TBL_HY_DEFECTINF
MEM7_SIZE = 358400196
MEM8_NAME = TBL_HY_ALARM
MEM8_SIZE = 2048
MEM9_NAME = TBL_HY_MAE_MAP
MEM9_SIZE = 4032028
MEM10_NAME = TBL_HY_MAE_INF
MEM10_SIZE = 6944056

#=========================================================
# プロセス情報 (1〜50まで)
#  TASK1	: 起動タスク名, 起動プロセス(0:通常 1:最小化 2:最大化 3:非表示), ホントの起動EXE名称(起動タスク名と同じなら無しでOK)
#=========================================================
[EXECUTE]
TASK1=KS_SYSLOG, 1
TASK2=KS_EVTLOG, 1
TASK3=KS_HDDCHK, 1, KS_HDDCHKx64
TASK4=KS_HISTRY, 1
TASK5=KS_EQALDB, 1
TASK6=TI_DELETE, 1
TASK7=KT_LEDMGR, 1

TASK8=TO_DEFECT, 0
TASK9=TO_CAMERA, 1
TASK10=TO_GETDAT, 1
TASK11=TO_PUTDAT, 1
TASK12=TO_PROCON, 1
TASK13=TO_SEQDM, 1
TASK14=TO_FFSERV, 1
TASK15=TO_MAEDAT, 1


#**************************************************************************************
# 各タスク 部
#**************************************************************************************
#=========================================================
# 統括管理
#=========================================================
[TO_DEFECT]
# LED照明 ライン休止OFF時間 [分]
LED_LINESTOP_OFFTIME    = 5

# 判定PCとのソケット定義
# Cliant01_Nameは、プログラム内で値を設定しなおす
[HT_RECV_TOP]
SAVE_IP		= 192.9.200.31
SAVE_PORT	= 10000
[HT_RECV_BOT]
SAVE_IP		= 192.9.200.31
SAVE_PORT	= 10001
# 表示PCとのソケット定義
[OP_SEND]
SAVE_IP 	= 192.9.200.31
SAVE_PORT 	= 10002
# 周期PCとのソケット定義
[CY_RECV_TOP]
SAVE_IP		= 192.9.200.31
SAVE_PORT	= 10010
[CY_RECV_BOT]
SAVE_IP		= 192.9.200.31
SAVE_PORT	= 10011

#全長画像PCに生画像保存要求 (未指定時には、機能無効となる)
#[RPISAVE]
#SAVE_IP		= 192.9.200.255
#SAVE_PORT	= 8095

[SOGYO_MODE]
#操業条件
# 最小ライン速度チェック周期 [ms]
CHECK_INTERVAL = 1000
# 操業状態判定方法
# 「ライン速度がXmpm以下が、Y回続いた」の場合、低速操業認識。
# 「ライン速度がXmpm以下が、Y回続いた」の場合、ライン停止認識。
# 「ライン速度がXmpmより大きくが、Y回続いた」の場合、低速操業認識。
# 「ライン速度がXmpmより大きくが、Y回続いた」の場合、ライン稼動認識。
#    ※ 条件がかぶった場合は、下の項目に行くほど優先される。
#     ・Xが xxx_MPM。
#     ・Yが xxx_CNT(=最小ライン速度チェック周期で１回) (0で未チェック)

# 0mpmが4秒続いたら、一時停止 (ストップマーク発生)
UpToDown_SLOW_MPM = 5
UpToDown_SLOW_CNT = 10
# 0mpmが10秒続いたら、停止
UpToDown_STOP_MPM = 0
UpToDown_STOP_CNT = 30
# ちょっとでも動いたら即低速操業
DownToUp_SLOW_MPM = 0
DownToUp_SLOW_CNT = 1
# 5mpmより大きければ即ライン稼動認識
DownToUp_RUN_MPM = 5
DownToUp_RUN_CNT = 1


#=========================================================
# 対ＦＦ通信 (サーバー：疵検)
#   ＦＦIP 10.24.98.1
#	2PL   受信 xxxx  送信 xxxx
#	3PL   受信 xxxx  送信 xxxx
#  TO_FFSERV_RECV  : 受信関連
#  TO_FFSERV_SEND  : 送信関連
#=========================================================
[TO_FFSERV_RECV]
SAVE_IP		= 127.0.0.1
#SAVE_IP	= 10.24.98.1
SAVE_PORT	= 2891

[TO_FFSERV_SEND]
SAVE_IP		= 127.0.0.1
#SAVE_IP	= 10.24.98.1
SAVE_PORT	= 2841



#=========================================================
# 対プロコン通信 (サーバー：受信ポート  クライアント：送信ポート)
# 2PL  プロコンIP  128.22.1.2      
#      疵検IP      128.22.1.72   受信 8006  送信 8007
# 3PL  プロコンIP  10.27.25.1      
#      疵検IP      10.27.25.12   受信 5000  送信 5001
#=========================================================
[TO_PROCON]

[TO_PROCON_RECV]
#SAVE_IP	= 127.0.0.1
SAVE_IP		= 128.22.1.2
SAVE_PORT	= 8006
#SAVE_IP	= 10.27.25.1
#SAVE_PORT	= 5000

[TO_PROCON_SEND]
#SAVE_IP	= 127.0.0.1
SAVE_IP		= 128.22.1.2
SAVE_PORT	= 8007
#SAVE_IP	= 10.27.25.1
#SAVE_PORT	= 5001


#=========================================================
# 実績編集処理
# ADDDB_MAXWAITTIME  カット実績時の統括管理側でのDB書き込みの最大待ち時間 [msec]
# RETRYWAITTIME      コイル実績確認のリトライ時間(リトライ間隔) [msec]
# RETRYCOUNT         コイル実績確認のリトライ回数(リトライ回数)
# CHKCOILDATE        コイル検索の対象期間 [日]
#=========================================================
[TO_PUTDAT]
ADDDB_MAXWAITTIME=5000
RETRYWAITTIME=20000
RETRYCOUNT=15
CHKCOILDATE=10



#=========================================================
# シーケンサ データメモリ管理
#   UDP接続 (ActQJ71E71UDPを使用)
# -- MXコンポーネント設置用 --
#  PC_NETWORK_NO		: パソコン側(自局) ネットワークNo
#  PC_STATION_NO		: パソコン側(自局) 局番
#  SEQ_NETWORK_NO		: シーケンサ側(他局) ネットワークNo
#  SEQ_STATION_NO		: シーケンサ側(他局) 局番
#  SEQ_CPU_TYPE			: CPUタイプ  マニュアル sh080275f.pdf  P53を参照 (10進数で指定すること)
#							Q02(H) ･･･ 0x22
# -- データメモリ領域用 --
#  READADDR  	: 読込エリア開始アドレス
#  WRITEADDR 	: 書込エリア開始アドレス
#=========================================================
[TO_SEQDM]
PC_NETWORK_NO	= 1
PC_STATION_NO	= 2
SEQ_NETWORK_NO	= 1
SEQ_STATION_NO 	= 1
SEQ_CPU_TYPE	= 34
CONNECT_IP	= 192.168.0.2
CONNECT_PORT	= 5001
CONNECT_TIMEOUT	= 5000

READADDR  = D100
WRITEADDR = D400





#**************************************************************************************
# 共通タスク 部
#**************************************************************************************
#=========================================================
# 機器状態履歴管理
#  MAX_DB_COLUMN_KIKI		：DBのST_HISTORY関係の機器状態の列数 (最大64コ)
#  MAX_DB_COLUMN_TEMP		: DBのST_HISTORY関係の付加情報の列数 (最大64コ)
#=========================================================
[KS_HISTRY]
MAX_DB_COLUMN_KIKI 		= 9
MAX_DB_COLUMN_TEMP 		= 1


#=========================================================
# 対カメラコントローラー通信
#=========================================================
[TO_CAMERA]
#△
com=COM2
baud=96
parity=n
data=8
stop=1
to=off
dtr=off
rts=off
idsr=off
octs=off
#▲
#com=COM3
#baud=96
#parity=n
#data=8
#stop=1
#to=on
#dtr=on
#rts=on
#idsr=on
#octs=on


#=========================================================
# 対LED照明装置 (アイテック製 TCP/IP)
#   2分30秒 通信がなければ、LED照明側が回線切断する。PCいきなり死亡対策。
# ### 共通仕様
#  BLOCK		：配光ブロック数 (MAX256)
#  TEMP_UNIT 		：LED温度計測点数
#  TEMP_THR		：温度閾値 (これ以上はエラーとなる) [度]
#  TEMP_THR_DOWN	：強制OFF温度閾値 (これ以上はエラー+LED消灯となる) [度]
#  TIMER_CYCLE		：温度取り込み周期 [秒]
#  NAME_*		：セッションの末の部分となる (インスタンスの名前にもなる) MAX8コ
# 
# ### 個別仕様
# -装置単位-----------------
#  MEN			：面 (0:表 1:裏)
#  CH_NUM		：管理対象チャンネル数 (最大4CH)
#  LED_CONNECT_ID	：照明装置 通信状態
#  SAVE_IP		：デフォルト 192.168.0.99
#  SAVE_PORT		：デフォルト 5001
#
# -チャンネル単位-----------------
# [タスク名_セッション名_CH1]
#  LED_BREAK_ID		：断線
#  LED_HOTWAR_ID	：加熱検出
#  LED_HOTERR_ID	：加熱シャットダウン
#  LED_ONOFF_ID		：LED点灯消灯状態
#  LED_VALNOW_ID	：現在設定輝度値
#  LED_TOTALTIME_ID	：稼動累計時間
#  LED_TEMP_ST_1_ID 	：温度状態 (L,C,R)
#  LED_TEMP_1_ID 	：温度 (L,C,R)
#=========================================================
[KT_LEDMGR]
BLOCK 		   = 48
TEMP_UNIT 	   = 3
TEMP_THR           = 70
TEMP_THR_DOWN	   = 90
TIMER_CYCLE        = 120
NAME_1             = TOP
NAME_2      	   = BOT

[KT_LEDMGR_TOP]
# 基本設定
MEN		= 0
CH_NUM		= 3
LED_CONNECT_ID	= 184
# TCP/IP設定
SAVE_IP		= 192.9.200.151
SAVE_PORT	= 5001

# CH単位 (1:R 2:G 3:Bの順)
[KT_LEDMGR_TOP_CH1]
LED_BREAK_ID       = 185
LED_HOTWAR_ID      = 186
LED_HOTERR_ID      = 187
LED_ONOFF_ID       = 188
LED_VALNOW_ID      = 189
LED_TOTALTIME_ID   = 190

LED_TEMP_ST_1_ID   = 191
LED_TEMP_ST_2_ID   = 192
LED_TEMP_ST_3_ID   = 193
LED_TEMP_1_ID      = 194
LED_TEMP_2_ID      = 195
LED_TEMP_3_ID      = 196

[KT_LEDMGR_TOP_CH2]
LED_BREAK_ID       = 197
LED_HOTWAR_ID      = 198
LED_HOTERR_ID      = 199
LED_ONOFF_ID       = 200
LED_VALNOW_ID      = 201
LED_TOTALTIME_ID   = 202

LED_TEMP_ST_1_ID   = 203
LED_TEMP_ST_2_ID   = 204
LED_TEMP_ST_3_ID   = 205
LED_TEMP_1_ID      = 206
LED_TEMP_2_ID      = 207
LED_TEMP_3_ID      = 208

[KT_LEDMGR_TOP_CH3]
LED_BREAK_ID       = 209
LED_HOTWAR_ID      = 210
LED_HOTERR_ID      = 211
LED_ONOFF_ID       = 212
LED_VALNOW_ID      = 213
LED_TOTALTIME_ID   = 214

LED_TEMP_ST_1_ID   = 215
LED_TEMP_ST_2_ID   = 216
LED_TEMP_ST_3_ID   = 217
LED_TEMP_1_ID      = 218
LED_TEMP_2_ID      = 219
LED_TEMP_3_ID      = 220


[KT_LEDMGR_BOT]
# 基本設定
MEN		= 1
CH_NUM		= 3
LED_CONNECT_ID	= 221
# TCP/IP設定
SAVE_IP		= 192.9.200.152
SAVE_PORT	= 5001

# CH単位
[KT_LEDMGR_BOT_CH1]
LED_BREAK_ID       = 222
LED_HOTWAR_ID      = 223
LED_HOTERR_ID      = 224
LED_ONOFF_ID       = 225
LED_VALNOW_ID      = 226
LED_TOTALTIME_ID   = 227

LED_TEMP_ST_1_ID   = 228
LED_TEMP_ST_2_ID   = 229
LED_TEMP_ST_3_ID   = 230
LED_TEMP_1_ID      = 231
LED_TEMP_2_ID      = 232
LED_TEMP_3_ID      = 233

[KT_LEDMGR_BOT_CH2]
LED_BREAK_ID       = 234
LED_HOTWAR_ID      = 235
LED_HOTERR_ID      = 236
LED_ONOFF_ID       = 237
LED_VALNOW_ID      = 238
LED_TOTALTIME_ID   = 239

LED_TEMP_ST_1_ID   = 240
LED_TEMP_ST_2_ID   = 241
LED_TEMP_ST_3_ID   = 242
LED_TEMP_1_ID      = 243
LED_TEMP_2_ID      = 244
LED_TEMP_3_ID      = 245

[KT_LEDMGR_BOT_CH3]
LED_BREAK_ID       = 246
LED_HOTWAR_ID      = 247
LED_HOTERR_ID      = 248
LED_ONOFF_ID       = 249
LED_VALNOW_ID      = 250
LED_TOTALTIME_ID   = 251

LED_TEMP_ST_1_ID   = 252
LED_TEMP_ST_2_ID   = 253
LED_TEMP_ST_3_ID   = 254
LED_TEMP_1_ID      = 255
LED_TEMP_2_ID      = 256
LED_TEMP_3_ID      = 257



#=========================================================
# 対チラー装置
# ### 共通仕様
#  TEMP_THR	：温度閾値 (これ以上はエラーとなる) [度]
#  TIMER_CYCLE	：温度取り込み周期 [秒]
#  NAME_*	：セッションの末の部分となる (インスタンスの名前にもなる) MAX8コ
#
# ### 個別仕様
#  CHILER_CONNECT_ID	: チラー装置との通信状態を格納するID
#  CHILER_STATE_ID	: チラー運転状態を格納するID (0:クーラー運転中 1:停止,ポンプ単独運転中 )
#  CHILER_ERR_ID	: チラーからの異常を格納するID 
#  CHILER_TEMP_ST_ID	: 温度異常を格納するID (ID=0は未実行)
#  CHILER_TEMP_ID	: 温度を格納するID (ID=0は未実行)
#   以降は、232C設定
#=========================================================
[KT_CHILER]
TEMP_THR           = 35 
TIMER_CYCLE        = 180
NAME_1             = TOP
NAME_2      	   = BOT

[KT_CHILER_TOP]
# 一般設定
CHILER_CONNECT_ID  = 232
CHILER_STATE_ID    = 233
CHILER_ERR_ID      = 234
CHILER_TEMP_ST_ID  = 235
CHILER_TEMP_ID     = 236
# 232C設定
com    = COM3
baud   = 96
parity = n
data   = 8
stop   = 1
to     = off
dtr    = on
rts    = on
idsr   = off
octs   = off

[KT_CHILER_BOT]
# 一般設定
CHILER_CONNECT_ID  = 237
CHILER_STATE_ID    = 238
CHILER_ERR_ID      = 239
CHILER_TEMP_ST_ID  = 240
CHILER_TEMP_ID     = 241
# 232C設定
com    = COM4
baud   = 96
parity = n
data   = 8
stop   = 1
to     = off
dtr    = on
rts    = on
idsr   = off
octs   = off

#=========================================================
# DB容量管理
#---------------------------
# タスク名セッションの中身
# SESSION_1	: セッション情報 (1〜10)
#---------------------------
# 各セッションの中身
# DB_ODBC	: DBセッション名
# DB_TRAN_SIZE_ERR_ID : トランザクションログサイズ増加時の異常機器ID (0時異常判定処理未実施)
# DB_TRAN_ERR_SIZE : トランザクションエラー認識サイズ [MByte]
# TIME_CYCLE	: 定周期実行周期 [分] (0時、チェック無し)
# TIME_SIZECHECK: DB容量チェック周期 [分] (0時、容量チェック無し)
# THREAD_COUNT	: DB容量低下時の削除スレッド数 (0時、容量低下で削除しない)
# DEL_RITU_1	: 削除スレッド実行開始容量 [%-2] (空き容量が指定パーセント以下になるとスレッド実行) (降順)
# 			スレッドの実行数と同じ数にする事
# 			最大9コまでとする。(指定した最後のスレッドが起動時は、ホントに容量がやばいと判断して、全力で消しに行くので注意する事)
#			(0時、チェック無し)
# TIME_MAX_WAIT	: 書込優先時の待ち時間 [ms]
# TIME_MIN_WAIT	: 削除優先時の待ち時間 [ms]
# LOG_SAVEDAY	: ログ保存日数 (0時、LOG_INF削除 実施無し)
# COIL_DEL_COUNT: 1回での削除コイル件数
# COILRESULT_TBL: コイル実績テーブル (疵検管理Noが主キーのテーブルを指定する事)
# COILRESULT_KEY: コイル実績テーブルの主キー (通常疵検管理No)
# 
#### 拡張
# ZI_1		: コイル実績の疵検管理Noを消す時に、一緒に消えていくテーブル (容量により削除) (1〜無限)		
# 			テーブル名, 主キー, サブキー(通常,疵No or ""), 一回の削除件数(0だと疵検管理No全部)
#  
# TI_1		: 日付で管理しているテーブル (定周期により削除) (1〜無限)
# 			テーブル名, 日付列(通常,登録日付), 保存日数
#=========================================================
[TI_DELETE]
SESSION_1 = TI_DELETE_A
SESSION_2 = TI_DELETE_B


[TI_DELETE_A]
DB_ODBC = DB_A
DB_TRAN_SIZE_ERR_ID = 286
DB_TRAN_ERR_SIZE = 200000
TIME_CYCLE = 10
TIME_SIZECHECK = 5
THREAD_COUNT = 3
DEL_RITU_1 = 600
DEL_RITU_2 = 300
DEL_RITU_3 = 200
TIME_MAX_WAIT = 3000
TIME_MIN_WAIT = 100
LOG_SAVEDAY = 180
COIL_DEL_COUNT = 20
COILRESULT_TBL = COIL_RESULT
COILRESULT_KEY = 疵検管理No

#### 拡張
## コイル実績の疵検管理Noを消す時に、一緒に消えていくテーブル達
# テーブル名, 主キー, サブキー(通常,疵No or ""), 一回の削除件数(0だと疵検管理No全部)
ZI_1	= COIL_INF, 		疵検管理No,	,		0
ZI_2	= COIL_OUTINF,		疵検管理No,	,		0
ZI_3	= COIL_POSITION,	疵検管理No,	,		0
ZI_4	= COIL_TRAND,		疵検管理No,	,		0
ZI_5	= COIL_CUT_POS,		疵検管理No,	,		0

ZI_6	= DEFECT_INF_T,		疵検管理No,	疵No,		5000
ZI_7	= DEFECT_IMG_T,		疵検管理No,	疵No,		1000
ZI_8	= DEFECT_ATTR0_T,	疵検管理No,	疵No,		2000
ZI_9	= DEFECT_ATTR1_T,	疵検管理No,	疵No,		2000
ZI_10	= DEFECT_ATTR2_T,	疵検管理No,	疵No,		2000
ZI_11	= DEFECT_ATTR3_T,	疵検管理No,	疵No,		2000
ZI_12	= DEFECT_ATTR4_T,	疵検管理No,	疵No,		2000
ZI_13	= DEFECT_INF_B,		疵検管理No,	疵No,		5000
ZI_14	= DEFECT_IMG_B,		疵検管理No,	疵No,		1000
ZI_15	= DEFECT_ATTR0_B,	疵検管理No,	疵No,		2000
ZI_16	= DEFECT_ATTR1_B,	疵検管理No,	疵No,		2000
ZI_17	= DEFECT_ATTR2_B,	疵検管理No,	疵No,		2000
ZI_18	= DEFECT_ATTR3_B,	疵検管理No,	疵No,		2000
ZI_19	= DEFECT_ATTR4_B,	疵検管理No,	疵No,		2000

ZI_20	= EDGE_COIL_INF,	疵検管理No,	,		0
ZI_21	= EDGE_CHANGE_INF,	疵検管理No,	,		0
ZI_22	= FRAME_INF,		疵検管理No,	,		0
ZI_23	= FRAME_IMG,		疵検管理No,	,		0

ZI_24	= COIL_ORDER,		疵検管理No,	,		0
ZI_25	= COIL_CUT_RESULT,	疵検管理No,	,		0

ZI_26	= MAE_COIL_INF,		疵検管理No,	,		0
ZI_27	= MAE_COIL_LINE,	疵検管理No,	,		0
ZI_28	= MAE_FF_INF,		疵検管理No,	,		0
ZI_29	= MAE_DEFECT_INF,	疵検管理No,	,		0
ZI_30	= MAE_DEFECT_IMG,	疵検管理No,	,		0

ZI_31	= ACCESS_NEXT_COIL_INF,	疵検管理No,	,	0
ZI_32	= ACCESS_NEXT_DEFECT_INF,	疵検管理No,	,	0



## 日付で管理しているテーブル
# テーブル名, 日付列(通常,登録日付), 保存日数
TI_1	= BUF_PRO_R_SAISUN,	登録日付,	90
TI_2	= BUF_PRO_R_CUT,	登録日付,	90
TI_2	= BUF_PRO_S_ZISEKI,	登録日付,	90
TI_2	= BUF_FF_S_ZISEKI,	登録日付,	90
TI_2	= BUF_FF_R_MAEINF,	登録日付,	90
TI_3	= ST_HISTORY_INF,	登録日付,	720

[TI_DELETE_B]
DB_ODBC = DB_B
DB_TRAN_SIZE_ERR_ID = 287
DB_TRAN_ERR_SIZE = 200000
TIME_CYCLE = 10
TIME_SIZECHECK = 5
THREAD_COUNT = 2
DEL_RITU_1 = 1000
DEL_RITU_2 = 400
TIME_MAX_WAIT = 3000
TIME_MIN_WAIT = 100
LOG_SAVEDAY = 180
COIL_DEL_COUNT = 20
COILRESULT_TBL = COIL_RESULT
COILRESULT_KEY = 疵検管理No

#### 拡張
## コイル実績の疵検管理Noを消す時に、一緒に消えていくテーブル達
# テーブル名, 主キー, サブキー(通常,疵No or ""), 一回の削除件数(0だと疵検管理No全部)
ZI_1	= COIL_INF, 		疵検管理No,	,		0
ZI_2	= COIL_OUTINF,		疵検管理No,	,		0
ZI_3	= COIL_POSITION,	疵検管理No,	,		0
ZI_4	= COIL_TRAND,		疵検管理No,	,		0
ZI_5	= COIL_CUT_POS,		疵検管理No,	,		0

ZI_6	= DEFECT_INF_T,		疵検管理No,	疵No,		5000
ZI_7	= DEFECT_IMG_T,		疵検管理No,	疵No,		1000
ZI_8	= DEFECT_ATTR0_T,	疵検管理No,	疵No,		2000
ZI_9	= DEFECT_ATTR1_T,	疵検管理No,	疵No,		2000
ZI_10	= DEFECT_ATTR2_T,	疵検管理No,	疵No,		2000
ZI_11	= DEFECT_ATTR3_T,	疵検管理No,	疵No,		2000
ZI_12	= DEFECT_ATTR4_T,	疵検管理No,	疵No,		2000
ZI_13	= DEFECT_INF_B,		疵検管理No,	疵No,		5000
ZI_14	= DEFECT_IMG_B,		疵検管理No,	疵No,		1000
ZI_15	= DEFECT_ATTR0_B,	疵検管理No,	疵No,		2000
ZI_16	= DEFECT_ATTR1_B,	疵検管理No,	疵No,		2000
ZI_17	= DEFECT_ATTR2_B,	疵検管理No,	疵No,		2000
ZI_18	= DEFECT_ATTR3_B,	疵検管理No,	疵No,		2000
ZI_19	= DEFECT_ATTR4_B,	疵検管理No,	疵No,		2000

ZI_20	= EDGE_COIL_INF,	疵検管理No,	,		0
ZI_21	= EDGE_CHANGE_INF,	疵検管理No,	,		0
ZI_22	= FRAME_INF,		疵検管理No,	,		0
ZI_23	= FRAME_IMG,		疵検管理No,	,		0

ZI_24	= COIL_ORDER,		疵検管理No,	,		0
ZI_25	= COIL_CUT_RESULT,	疵検管理No,	,		0

ZI_26	= MAE_COIL_INF,		疵検管理No,	,		0
ZI_27	= MAE_COIL_LINE,	疵検管理No,	,		0
ZI_28	= MAE_FF_INF,		疵検管理No,	,		0
ZI_29	= MAE_DEFECT_INF,	疵検管理No,	,		0
ZI_30	= MAE_DEFECT_IMG,	疵検管理No,	,		0

ZI_31	= ACCESS_NEXT_COIL_INF,	疵検管理No,	,	0
ZI_32	= ACCESS_NEXT_DEFECT_INF,	疵検管理No,	,	0



## 日付で管理しているテーブル
# テーブル名, 日付列(通常,登録日付), 保存日数
TI_1	= BUF_PRO_R_SAISUN,	登録日付,	90
TI_2	= BUF_PRO_R_CUT,	登録日付,	90
TI_2	= BUF_PRO_S_ZISEKI,	登録日付,	90
TI_2	= BUF_FF_S_ZISEKI,	登録日付,	90
TI_2	= BUF_FF_R_MAEINF,	登録日付,	90
TI_3	= ST_HISTORY_INF,	登録日付,	720


#=========================================================
# DB同期管理
#---------------------------
# タスク名セッションの中身
## SESSION_1	: セッション情報 (1〜) [セッション名, TYPE]
# 		   TYPE : このセッションの動作定義 (同一タイプの最大登録数10個)
#     		0 ･･･ マスターの同期  (初期時)
#				TBLの形式１：テーブル名
#			1 ･･･ 実績の追加コピー (先テーブルの最新をキーに、それ以降の元テーブルのデータを先テーブルにコピー)
#				TBLの形式１：テーブル名,  1回の追加件数,  主キー1(必須),  主キー2(空白可),  主キー3(空白可)
#			2 ･･･ 実績の移動
#				TBLの形式１：テーブル名,  1回の移動件数,  主キー1(必須),  主キー2(空白可)
#			3 ･･･ 実績の完全同期 (双方のテーブルで、キーが無い項目を補間しあう)  (初期時,A→Bにデータがコピー)
#				TBLの形式１：テーブル名,  1回の追加件数,  主キー1(必須),  主キー2(空白可),  主キー3(空白可)
#---------------------------
# 各セッションの中身
# DB_ODBC_A	: DBセッション名
# DB_ODBC_B	: DBセッション名
# LINK_PATH_AB	: A系のDBに定義されているリンクサーバー経由でB系アクセスする時のパス "[リンクサーバー名].データベース名.dbo."
# LINK_PATH_BA	: B系のDBに定義されているリンクサーバー経由でA系アクセスする時のパス "[リンクサーバー名].データベース名.dbo."
#   通常の定周期実行時は、 A→Bの流れでデータが処理される
#   このタスクを使用する場合は、必ずDBのリンクサーバーの定義をする事。
#    ・A系には、B系のサーバーを追加。B系には、A系のサーバーを追加する事。
#    ・リンクサーバーの定義は、 プロパイダ[SQL Native Client、Microsoft OLE DB Pro…SQLServer]
#				製品名[mySQLServer]    データソース[IPアドレス]   カタログ[DB名]   セキュリティでログイン名とパスを設定する事
#
# TIME_FAST	: 初期実行までの時間 (0:定周期無し) [分]
# TIME_INTERVAL	: ２回目以降の実行周期 [分]
# MAIL_KEY	: メールスロット受信時に第2引数と一致した場合、強制的に実行される。 (0:未実施)
# T_1		: テーブル名 (最大50テーブル)
#
# FACT_KS_EQALDB_01の起動受信時
#     data[0]   0:A→B    1:B→A
#     data[1]  任意の値 (0:無視  1〜:MAIL_KEYと一致した場合、強制的に実行される。
#
#---------------------------
#リンクサーバー定義	(A系のDBにはB系にアクセスするために定義を設定させる)
# [LINKSRV_1]		1〜の連番
# SELECT_ODBC_KEY	追加対象のODBCキー
# LINK_NAME		リンクサーバー名
# DBADDLESS		: DB接続アドレス
# DSNAME		: SQLServerのDB名称
# USERID		: ユーザー名
# PASSWORD		: パスワード
# SRVPRODUCT		製品名 (mySQLServer)固定
# PROVIDER		プロバイダ (SQLServer2005=SQLNCLI。SQLServer2008=SQLNCLI10 )
#=========================================================
[KS_EQALDB]
SESSION_1 = KS_EQALDB_EQAL, 0
SESSION_2 = KS_EQALDB_MOVE, 2

#リンクサーバー定義
[LINKSRV_1]
SELECT_ODBC_KEY = DB_A
LINK_NAME		= BACKUP
DBADDLESS		= 192.9.200.32
DSNAME			= DATABASE_2PL
USERID			= sa
PASSWORD		= nsc
SRVPRODUCT		= mySQLServer
PROVIDER		= SQLNCLI

[LINKSRV_2]
SELECT_ODBC_KEY = DB_B
LINK_NAME		= TIKUSEKI
DBADDLESS		= 192.9.200.33
DSNAME			= DATABASE_2PL
USERID			= sa
PASSWORD		= nsc
SRVPRODUCT		= mySQLServer
PROVIDER		= SQLNCLI

[KS_EQALDB_EQAL]
DB_ODBC_A	= DB_A
DB_ODBC_B	= DB_B
LINK_PATH_AB	= [BACKUP].DATABASE_2PL.dbo.
LINK_PATH_BA	= [TIKUSEKI].DATABASE_2PL.dbo.
TIME_FAST	= 1440
TIME_INTERVAL	= 60
MAIL_KEY	= 1
# マスター同期対象テーブル
T_1	= STATUS_MASTER
T_2	= STATUS_INF
T_3	= LOG_MASTER
T_4	= PC_MASTER
T_5	= PC_INF
T_6	= ST_HISTORY_MASTER
T_7	= COMMON_MASTER

T_8	= TYPE_NAME
T_9	= GRADE_NAME
T_10	= SCODE_MASTER
T_11	= SCODE_JUDGE
T_12	= SCODE_OUTPUT
T_13	= PCODE_MASTER
T_14	= PCODE_JUDGE
T_15	= PCODE_OUTPUT
T_16	= PALL_OUTPUT
T_17	= PCOMMON_OUTPUT

T_18	= ATTR_NAME
T_19	= PARAM_COMMON
T_20	= PARAM_SCODE
T_21	= PARAM_CAMSET
T_22	= PARAM_CAMSET_SCODE
T_23	= PARAM_CAMSET_ANGLE
T_24	= PARAM_CAMANGLE_SCODE
T_25	= PARAM_CAMSET_ANGLE_SCODE
T_26	= ROLL_INFO
T_27	= PCINFO_DESC
T_28	= Group_Name

T_29	= VOIC_MASTER
T_30	= MAE_MASTER
T_31	= MAE_TYPE_NAME
T_32	= MAE_GRADE_NAME


### 今回無し
[KS_EQALDB_MOVE]
DB_ODBC_A	= DB_B
DB_ODBC_B	= DB_A
LINK_PATH_AB	= [TIKUSEKI].DATABASE_2PL.dbo.
LINK_PATH_BA	= [BACKUP].DATABASE_2PL.dbo.
TIME_FAST	= 1440
TIME_INTERVAL	= 360
MAIL_KEY	= 2
#実績移動
T_1		= LOG_INF,			1000,	登録日付, 	AutoNo
T_2		= ST_HISTORY_INF,	2000,	登録日付,	区分
T_3		= COIL_INF,			500,	疵検管理No
T_4		= COIL_OUTINF,		500,	ID, 		No
T_5		= COIL_POSITION,	500,	疵検管理No,	ID
T_6		= COIL_TRAND,		2000,	疵検管理No,	表裏区分,	取得位置
T_7		= COIL_CUT_POS,		500,	疵検管理No, No
T_7		= COIL_ORDER,		500,	疵検管理No, 通順

T_8		= DEFECT_INF_T,		500,	疵検管理No,	疵No
T_9		= DEFECT_IMG_T,		500,	疵検管理No,	疵No
T_10	= DEFECT_ATTR0_T,	500,	疵検管理No,	疵No
T_11	= DEFECT_ATTR1_T,	500,	疵検管理No,	疵No
T_12	= DEFECT_ATTR2_T,	500,	疵検管理No,	疵No	
T_13	= DEFECT_ATTR3_T,	500,	疵検管理No,	疵No
T_14	= DEFECT_ATTR4_T,	500,	疵検管理No,	疵No
T_15	= DEFECT_INF_B,		500,	疵検管理No,	疵No
T_16	= DEFECT_IMG_B,		500,	疵検管理No,	疵No
T_17	= DEFECT_ATTR0_B,	500,	疵検管理No,	疵No
T_18	= DEFECT_ATTR1_B,	500,	疵検管理No,	疵No
T_19	= DEFECT_ATTR2_B,	500,	疵検管理No,	疵No
T_20	= DEFECT_ATTR3_B,	500,	疵検管理No,	疵No
T_21	= DEFECT_ATTR4_B,	500,	疵検管理No,	疵No

T_22	= EDGE_COIL_INF,	500,	疵検管理No,	表裏区分
T_23	= EDGE_CHANGE_INF,	500,	疵検管理No,	長手位置,	表裏区分
T_24	= FRAME_INF,		500,	疵検管理No,	カメラセット,	フレームNo
T_25	= FRAME_IMG,		500,	疵検管理No,	カメラセット,	フレームNo
T_26	= COIL_CUT_RESULT,	500,	疵検管理No

T_27	= MAE_COIL_INF,		1000,	疵検管理No
T_28	= MAE_COIL_LINE,	1000,	疵検管理No,	工程種別,	表裏区分
T_29	= MAE_FF_INF,		3000,	疵検管理No,	疵No
T_30	= MAE_DEFECT_INF,	3000,	疵検管理No,	疵No
T_31	= MAE_DEFECT_IMG,	500,	疵検管理No,	疵No

T_32	= COIL_RESULT,		500,	疵検管理No





#**************************************************************************************
# 統括機能外
#**************************************************************************************

#=========================================================
# 操作画面
#   RAS_TIMER		   : RAS画面DB読み込み周期[msec]
#   SYUKUTAI_TIMER	   : 縮退状態画面DB読み込み周期[msec]
#
#   MAP_SCROLL_DIRECT      : マップ進行方向             (0:下から上、1:上から下)
#   MAP_VIEW_DIRECT_O      : 表面疵マップ表示側         (0:左がDS、1:左がWS)
#   MAP_CELL_DIRECT_O      : 表面疵マップセル側         (0:疵マップの左右反転無し、1:疵マップの左右反転有り)
#   IMAGE_VIEW_DIRECT_O    : 表面疵画像の表示欄反転     (0:左がDS、1:左がWS)
#   IMAGE_TOP_BOTTOM_INF_O : 表面疵画像の上下反転       (0:反転無し、1:反転有り)
#   IMAGE_SIDE_INF_O       : 表面疵画像の右左反転       (0:反転無し、1:反転有り)
#   MAP_VIEW_DIRECT_U      : 裏面疵マップ表示側         (0:左がDS、1:左がWS)
#   MAP_CELL_DIRECT_U      : 裏面疵マップセル側         (0:疵マップの左右反転無し、1:疵マップの左右反転有り)
#   IMAGE_VIEW_DIRECT_U    : 裏面疵画像の表示欄反転     (0:左がDS、1:左がWS)
#   IMAGE_TOP_BOTTOM_INF_U : 裏面疵画像の上下反転       (0:反転無し、1:反転有り)
#   IMAGE_SIDE_INF_U       : 裏面疵画像の右左反転       (0:反転無し、1:反転有り)
#   IMAGE_WIDTH            : 切り出し画像100pixel横幅設定       (1 〜 :100pixel横幅を指定[mm])
#   FRAME_IMAGE_WIDTH      : フレーム画像100pixel横幅設定       (1 〜 :100pixel横幅を指定[mm])
#
#   DEFMAP_UP_TOP          : 疵マップ画面 表面 長手方向に対して、上下反転 (0:反転無し、1:反転有り)
#   DEFMAP_UP_BOT          : 疵マップ画面 裏面 長手方向に対して、上下反転 (0:反転無し、1:反転有り)
#   DEFMAP_SIDE_TOP        : 疵マップ画面 表面 長手縦方向表示時、左右反転 (0:反転無し、1:反転有り)
#   DEFMAP_SIDE_BOT        : 疵マップ画面 裏面 長手縦方向表示時、左右反転 (0:反転無し、1:反転有り)
#   DEFMAP_SIDE_TOP_HORZ   : 疵マップ画面 表面 長手横方向表示時、左右反転 (0:反転無し、1:反転有り)
#   DEFMAP_SIDE_BOT_HORZ   : 疵マップ画面 裏面 長手横方向表示時、左右反転 (0:反転無し、1:反転有り)
#   DEFMAP_HORZ_FLOW       : 疵マップ画面 長手方向の向き                  (0:横方向 1:縦方向)
#
#   TYOHYO_VIEW_TOP        : 帳票画面 表面 ラベル表示    (0:左(下)がDS、1:左(下)がWS)
#   TYOHYO_SIDE_TOP        : 帳票画面 表面 左右反転      (0:反転無し、1:反転有り)
#   TYOHYO_VIEW_BOT        : 帳票画面 裏面 ラベル表示    (0:左(下)がDS、1:左(下)がWS)
#   TYOHYO_SIDE_BOT        : 帳票画面 裏面 左右反転      (0:反転無し、1:反転有り)
#=========================================================
[SO_GAMENN]
RAS_TIMER              = 1000
SYUKUTAI_TIMER         = 5000

MAP_SCROLL_DIRECT      = 0
MAP_VIEW_DIRECT_O      = 0
MAP_CELL_DIRECT_O      = 0
IMAGE_VIEW_DIRECT_O    = 0
IMAGE_TOP_BOTTOM_INF_O = 0
IMAGE_SIDE_INF_O       = 0
MAP_VIEW_DIRECT_U      = 0
MAP_CELL_DIRECT_U      = 0
IMAGE_VIEW_DIRECT_U    = 0
IMAGE_TOP_BOTTOM_INF_U = 0
IMAGE_SIDE_INF_U       = 0
IMAGE_WIDTH            = 20
FRAME_IMAGE_WIDTH      = 20

DEFMAP_UP_TOP          = 0
DEFMAP_UP_BOT          = 0
DEFMAP_SIDE_TOP        = 0
DEFMAP_SIDE_BOT        = 0
DEFMAP_SIDE_TOP_HORZ   = 0
DEFMAP_SIDE_BOT_HORZ   = 0
DEFMAP_HORZ_FLOW       = 0

TYOHYO_VIEW_TOP        = 0
TYOHYO_SIDE_TOP        = 0
TYOHYO_VIEW_BOT        = 0
TYOHYO_SIDE_BOT        = 0

#=========================================================
# 表示管理
# IMAGE_PATH        : 探傷画面表示用の画像格納パス
# SAVE_IP           : 疵実績情報送信PCのIPアドレス
# SAVE_PORT         : 受信ポート
#=========================================================
[HY_DEFECT]
IMAGE_PATH = D:\IMG
SAVE_IP	   = 192.9.200.31
SAVE_PORT  = 10002


#=========================================================
# パラメータ設定画面
#=========================================================
[KA_PARSET]
