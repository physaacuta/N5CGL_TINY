#////////////////////////////////////////////////////////////////////
# 機能単位の設定ファイル
#  ※ 名前の付け方 [t統括機能 kizuTask.ini]
#////////////////////////////////////////////////////////////////////

#**************************************************************************************
# ライブラリ使用 部
#**************************************************************************************
#=========================================================
# データベース情報
#  DBADDLESS	: DB接続アドレス (VBでしか使用しない)
#  ODBCNAME	: ODBCの名称 (C のみ使用)
#  DSNAME	: SQLServerのDB名称(VB のみ使用)
#  USERID	: ユーザー名
#  PASSWORD	: パスワード
#=========================================================
# オンライン実行中DB
[DB]
DBADDLESS=192.9.200.31
ODBCNAME =DATABASE_NHOT
DSNAME   =DATABASE_NHOT
USERID   =sa
PASSWORD =nsc
# 実績保存用DB
[DB_ZI]
DBADDLESS= 192.9.200.33
ODBCNAME = DATABASE_NHOT_ZI
DSNAME   = DATABASE_NHOT
USERID   = sa
PASSWORD = nsc
# A系DB
[DB_A]
DBADDLESS= 192.9.200.31
ODBCNAME = DATABASE_NHOT
DSNAME   = DATABASE_NHOT
USERID   = sa
PASSWORD = nsc
# B系DB
[DB_B]
DBADDLESS= 192.9.200.32
ODBCNAME = DATABASE_NHOTsub
DSNAME   = DATABASE_NHOT
USERID   = sa
PASSWORD = nsc

#=========================================================
# 共通設定
#  LINEID	: ライン区分(コンパイル無しでタスクの切替等で使用可能) (0:NHOT_MAKI)
#  NOA		: NOA接続フラグ (0:オンライン  1:遠隔  9:デバック)
#=========================================================
[COMMON]
LINEID = 0
NOA = 9

#=========================================================
# 機器ID定義
#  各機能での機器IDを定義 (共通支援機能での機器IDは除く)
#=========================================================
[STATUS]
# 判定PC01応答無し
HANTEI_ANS_1_ID = 180
HANTEI_ANS_2_ID = 181
HANTEI_ANS_3_ID = 182
HANTEI_ANS_4_ID = 183
HANTEI_ANS_5_ID = 184
HANTEI_ANS_6_ID = 185
HANTEI_ANS_7_ID = 186
HANTEI_ANS_8_ID = 187
HANTEI_ANS_9_ID = 188
HANTEI_ANS_10_ID = 189
HANTEI_ANS_11_ID = 190
HANTEI_ANS_12_ID = 191
HANTEI_ANS_13_ID = 192
HANTEI_ANS_14_ID = 193
HANTEI_ANS_15_ID = 194
HANTEI_ANS_16_ID = 195
HANTEI_ANS_17_ID = 196
HANTEI_ANS_18_ID = 197

# 判定PC 異常発生（バックアップも不可能）
HANTEI_TOP_ANS_ID = 198
HANTEI_BOT_ANS_ID = 199
CYCLE_TOP_ANS_ID = 200
CYCLE_BOT_ANS_ID = 201

# カメラ温度状態
CAM_TEMPSTATE_1_1_ID = 218
CAM_TEMPSTATE_2_1_ID = 219
CAM_TEMPSTATE_3_1_ID = 220
CAM_TEMPSTATE_4_1_ID = 221
CAM_TEMPSTATE_5_1_ID = 222
CAM_TEMPSTATE_6_1_ID = 223
CAM_TEMPSTATE_7_1_ID = 224
CAM_TEMPSTATE_8_1_ID = 225

# カメラ温度
CAM_TEMP_1_1_ID = 226
CAM_TEMP_2_1_ID = 227
CAM_TEMP_3_1_ID = 228
CAM_TEMP_4_1_ID = 229
CAM_TEMP_5_1_ID = 230
CAM_TEMP_6_1_ID = 231
CAM_TEMP_7_1_ID = 232
CAM_TEMP_8_1_ID = 233

# ライン稼動時の照明OFF
LED_RUNOFF_1_ID = 260
LED_RUNOFF_2_ID = 261

# チラー装置PI
CHILER_PI_ERR_1_ID = 262
CHILER_PI_ERR_2_ID = 263

# カメラコントローラー
CAMCONTROL_ID = 274
# カウンターボード
BOOD_CNT_ID = 275
# PIOボード
BOOD_PIO_ID = 276

# 稼動状態
DIV_KADOU_ID = 277
# 運転モード
DIV_UNTEN_ID = 278
# 操業状態
DIV_SOGYO_ID = 279
# PLG区分
DIV_PLGMODE_ID = 280
# 未検査区間
FRAME_SKIP_1_ID = 281
FRAME_SKIP_2_ID = 282
# 検査開始１本目
COIL_INIT_ID = 283
COIL_RESTART_ID = 284
# コイル情報無し
COIL_KEN_ID = 285
# コイル長異常
MAXLEN_KEN_ID = 286

# 画像書き込み失敗
BCP_ERR_ID = 290
# 検査実績保存上限
DB_SAVE_MAX_1_ID = 291
DB_SAVE_MAX_2_ID = 292
# 検査実績保存スキップ
DB_SAVE_SKIP_1_ID = 293
DB_SAVE_SKIP_2_ID = 294
# FF通信
FFSERV_ID = 295
# FFサーバイニシャル中
FF_CONNECT_ERR_ID=296
# 対仕上疵検シーケンサ通信
SEQ_SHIAGE_ID = 297
# 対巻取前疵検シーケンサ通信
SEQ_MAKI_TCPIP_ID = 298
SEQ_MAKI_DM_ID = 299
SEQ_MAKI_DM_HB_ID = 300
SEQ_MAKI_PIO_HB_ID = 301
# 通板中情報
LINE_CNO_ID = 302
LINE_LEN_ID = 303
LINE_SPEED_ID = 304
# エアドライア
AIR_BLOW_1_ID = 305
# 機側盤温度異常
BOX_TEMP_PI_1_ID = 306
BOX_TEMP_PI_2_ID = 307
# カメラ台車位置情報
DAISYA_1_ID = 308
DAISYA_2_ID = 309
# カメラ台車異常
DAISYA_ERR_1_ID = 310
DAISYA_ERR_2_ID = 311
#　表面台車　オンライン停止LS
DAISYA_ONLINE_STOP_LS_1_ID = 335
#　表面台車　オンライン極限LS
DAISYA_ONLINE_LIMIT_LS_1_ID = 336
#　表面台車　オフライン停止LS
DAISYA_OFFLINE_STOP_LS_1_ID = 337
#　表面台車　オフライン極限LS
DAISYA_OFFLINE_LIMIT_LS_1_ID = 338
#　表面台車　オンライン側ストッパーロック中
DAISYA_ONLINE_STOP_LOCK_1_ID = 339
#　表面台車　オフライン側ストッパーロック中
DAISYA_OFFLINE_STOP_LOCK_1_ID = 340
#　表面台車　オンライン側移動中
DAISYA_ONLINE_MOVING_1_ID = 341
#　表面台車　オフライン側移動中
DAISYA_OFFLINE_MOVING_1_ID = 342
#　表面台車　MCCBトリップ
DAISYA_MCCB_TRIP_1_ID = 343
#　表面台車　サーマルトリップ
DAISYA_THERMAL_TRIP_1_ID = 344
#　表面台車　漏電
DAISYA_RODEN_1_ID = 345
#　表面台車　移動タイムオーバー
DAISYA_MOVE_TIMEOVER_1_ID = 346
#　表面台車　安全柵SWロック中
DAISYA_SAFETY_SOFT_LOCK_1_ID = 347
#　裏面台車　オンライン停止LS
DAISYA_ONLINE_STOP_LS_2_ID = 348
#　裏面台車　オンライン極限LS
DAISYA_ONLINE_LIMIT_LS_2_ID = 349
#　裏面台車　オフライン停止LS
DAISYA_OFFLINE_STOP_LS_2_ID = 350
#　裏面台車　オフライン極限LS
DAISYA_OFFLINE_LIMIT_LS_2_ID = 351
#　裏面台車　オンライン側ストッパーロック中
DAISYA_ONLINE_STOP_LOCK_2_ID = 352
#　裏面台車　オフライン側ストッパーロック中
DAISYA_OFFLINE_STOP_LOCK_2_ID = 353
#　裏面台車　オンライン側移動中
DAISYA_ONLINE_MOVING_2_ID = 354
#　裏面台車　オフライン側移動中
DAISYA_OFFLINE_MOVING_2_ID = 355
#　裏面台車　MCCBトリップ
DAISYA_MCCB_TRIP_2_ID = 356
#　裏面台車　サーマルトリップ
DAISYA_THERMAL_TRIP_2_ID = 357
#　裏面台車　漏電
DAISYA_RODEN_2_ID = 358
#　裏面台車　移動タイムオーバー
DAISYA_MOVE_TIMEOVER_2_ID = 359
#　裏面台車　安全柵SWロック中
DAISYA_SAFETY_SOFT_LOCK_2_ID = 360
# シーケンサ　バッテリー異常
SEQ_BATTERY_ERROR_ID = 361
#運転室パトライト赤点灯　ブザー１発音時間
PATLITE_BUZZER_RED_ID = 362
#運転室パトライト黄点灯　ブザー２発音時間
PATLITE_BUZZER_YELLOW_ID = 363


#=========================================================
# 共有メモリ情報 (1〜50まで)
#  MEM1_NAME	: 共有メモリ名
#  MEM1_SIZE	: サイズ
#=========================================================
[MEM]
MEM1_NAME = TBL_TO_COIL
MEM1_SIZE = 6144
MEM2_NAME = TBL_TO_SEQMEM
MEM2_SIZE = 2000
#ステータス情報
MEM3_NAME = TBL_HY_STATUS
MEM3_SIZE = 2048
#ポインタ情報
MEM4_NAME = TBL_HY_POINT
MEM4_SIZE = 2048
#コイル情報
MEM5_NAME = TBL_HY_COILINF
MEM5_SIZE = 5120
#マップ情報
MEM6_NAME = TBL_HY_MAP_COLROW
MEM6_SIZE = 80640000
#マップ位置
MEM7_NAME = TBL_HY_MAP_ROW
MEM7_SIZE = 8064000
#疵情報
MEM8_NAME = TBL_HY_DEFECTINF
MEM8_SIZE = 358400196
#疵個数情報
MEM9_NAME = TBL_HY_KIZUCNT
MEM9_SIZE = 5885124		
#周期疵マップ情報
MEM10_NAME = TBL_HY_SYU_MAP_ROW
MEM10_SIZE = 16128000
#=========================================================
# プロセス情報 (1〜50まで)
#  TASK1	: 起動タスク名, 起動プロセス(0:通常 1:最小化 2:最大化 3:非表示), ホントの起動EXE名称(起動タスク名と同じなら無しでOK)
#=========================================================
[EXECUTE]
TASK1=KS_SYSLOG, 1
TASK2=KS_EVTLOG, 1
TASK3=KS_HDDCHK, 1, KS_HDDCHKx64
TASK4=KS_HISTRY, 1
TASK5=KS_EQALDB, 1
TASK6=KT_LEDMGR, 1
TASK7=KT_CHILER, 1
TASK8=TI_DELETE, 1
TASK9=TO_CAMERA, 1

TASK10=TO_DEFECT, 0
#TASK10=TO_DEFECT_TEST, 0
TASK11=TO_GETDAT, 1
TASK12=TO_PUTDAT, 1
TASK13=TO_SEQTCP, 1
TASK14=TO_SEQDM, 1
TASK15=KT_TEMPMT, 1
TASK16=TO_RPIMGR, 1
#TASK17=TO_FFSERV, 1

#TASK12=TO_MEM_TOOL, 1

#**************************************************************************************
# 各タスク 部
#**************************************************************************************
#=========================================================
# 統括管理
#=========================================================
[TO_DEFECT]
# LED照明 ライン休止OFF時間 [分]
LED_LINESTOP_OFFTIME    = 5

DEBUG_IP	= 192.9.200.255
DEBUG_PORT	= 12349

# 判定PCとのソケット定義
# Cliant01_Nameは、プログラム内で値を設定しなおす
[HT_RECV_TOP]
SAVE_IP		= 192.9.200.31
SAVE_PORT	= 10000
[HT_RECV_BOT]
SAVE_IP		= 192.9.200.31
SAVE_PORT	= 10001
# 表示PCとのソケット定義
[OP_SEND]
SAVE_IP 	= 192.9.200.31
SAVE_PORT 	= 10002
# 周期PCとのソケット定義
[CY_RECV_TOP]
SAVE_IP		= 192.9.200.31
SAVE_PORT	= 10010
[CY_RECV_BOT]
SAVE_IP		= 192.9.200.31
SAVE_PORT	= 10011

#全長画像PCに生画像保存要求 (未指定時には、機能無効となる)
#[RPISAVE]
#SAVE_IP		= 192.9.200.255
#SAVE_PORT	= 8095

[SOGYO_MODE]
#操業条件
# 最小ライン速度チェック周期 [ms]
CHECK_INTERVAL = 1000
# 操業状態判定方法
# 「ライン速度がXmpm以下が、Y回続いた」の場合、低速操業認識。
# 「ライン速度がXmpm以下が、Y回続いた」の場合、ライン停止認識。
# 「ライン速度がXmpmより大きくが、Y回続いた」の場合、低速操業認識。
# 「ライン速度がXmpmより大きくが、Y回続いた」の場合、ライン稼動認識。
#    ※ 条件がかぶった場合は、下の項目に行くほど優先される。
#     ・Xが xxx_MPM。
#     ・Yが xxx_CNT(=最小ライン速度チェック周期で１回) (0で未チェック)

# 0mpmが4秒続いたら、一時停止 (ストップマーク発生)
UpToDown_SLOW_MPM = 5
UpToDown_SLOW_CNT = 10
# 0mpmが10秒続いたら、停止
UpToDown_STOP_MPM = 0
UpToDown_STOP_CNT = 30
# ちょっとでも動いたら即低速操業
DownToUp_SLOW_MPM = 0
DownToUp_SLOW_CNT = 1
# 5mpmより大きければ即ライン稼動認識
DownToUp_RUN_MPM = 5
DownToUp_RUN_CNT = 1

#=========================================================
# 対シーケンサ通信 (サーバー：疵検)
#   シーケンサIP 192.9.100.2
#   疵検      IP 192.9.100.1
#	PORT   受信 5000
# TO_SEQTCP_RECV (受信ポート設定)
#  SAVE_IP          : 特に設定する必要はない
#  SAVE_PORT        : 受信待ちポートNo
# TO_SEQTCP (ソフト設定)
#  DEBUG_IP         : 受信コイル情報送信先IP
#  DEBUG_PORT       : 受信コイル情報送信先ポートNo
#  DEBUG_PIO_DIR    : PIOボード ドライバNo
#  DEBUG_PIO_GRP    : PIOボード グループNo
#  DEBUG_PIO_PNUM   : PIOボード ポート数
#=========================================================
[TO_SEQTCP_RECV]
SAVE_IP		= 192.9.100.1
SAVE_PORT	= 5000

#=========================================================
# シーケンサ データメモリ管理
#   UDP接続 (ActQJ71E71UDPを使用)
# -- MXコンポーネント設置用 --
#  PC_NETWORK_NO		: パソコン側(自局) ネットワークNo
#  PC_STATION_NO		: パソコン側(自局) 局番
#  SEQ_NETWORK_NO		: シーケンサ側(他局) ネットワークNo
#  SEQ_STATION_NO		: シーケンサ側(他局) 局番
#  SEQ_CPU_TYPE			: CPUタイプ  マニュアル sh080275f.pdf  P53を参照 (10進数で指定すること)
# -- データメモリ領域用 --
#  READADDR  	: 読込エリア開始アドレス
#  WRITEADDR 	: 書込エリア開始アドレス
#=========================================================
[TO_SEQDM]
PC_NETWORK_NO	= 1
PC_STATION_NO	= 2
SEQ_NETWORK_NO	= 1
SEQ_STATION_NO 	= 1
SEQ_CPU_TYPE	= 145
CONNECT_IP	= 192.9.100.2
CONNECT_PORT	= 6000
CONNECT_TIMEOUT	= 5000

READADDR  = D8000
WRITEADDR = D8500

#=========================================================
# 対ＦＦ通信 (サーバー：ＦＦ)
#   ＦＦIP 10.24.98.1
#   疵検IP xxx.xxx.xxx.xxx
#	PORT   受信 4751  送信 4701
#  TO_FFSERV_RECV  : 受信関連
#  TO_FFSERV_SEND  : 送信関連
#=========================================================
[TO_FFSERV_RECV]
SAVE_IP		= 10.24.98.1
SAVE_PORT	= 4751

[TO_FFSERV_SEND]
SAVE_IP		= 10.24.98.1
SAVE_PORT	= 4701

#=========================================================
# 実績編集処理
# ADDDB_MAXWAITTIME  カット実績時の統括管理側でのDB書き込みの最大待ち時間 [msec]
# RETRYWAITTIME      コイル実績確認のリトライ時間(リトライ間隔) [msec]
# RETRYCOUNT         コイル実績確認のリトライ回数(リトライ回数)
# CHKCOILDATE        コイル検索の対象期間 [日]
#=========================================================
[TO_PUTDAT]
ADDDB_MAXWAITTIME=5000
RETRYWAITTIME=20000
RETRYCOUNT=15
CHKCOILDATE=10

#**************************************************************************************
# 共通タスク 部
#**************************************************************************************
#=========================================================
# 機器状態履歴管理
#  MAX_DB_COLUMN_KIKI		：DBのST_HISTORY関係の機器状態の列数 (最大64コ)
#  MAX_DB_COLUMN_TEMP		: DBのST_HISTORY関係の付加情報の列数 (最大64コ)
#=========================================================
[KS_HISTRY]
MAX_DB_COLUMN_KIKI 		= 9
MAX_DB_COLUMN_TEMP 		= 1

#=========================================================
# 対カメラコントローラー通信
#=========================================================
[TO_CAMERA]
#△
com=COM3
baud=96
parity=n
data=8
stop=1
to=off
dtr=off
rts=off
idsr=off
octs=off
#▲
#com=COM3
#baud=96
#parity=n
#data=8
#stop=1
#to=on
#dtr=on
#rts=on
#idsr=on
#octs=on

# フィルタ値 [0.1μs] (未指定時は、0μs)
FILTER = 1

# カメラIDとカメラコントローラーNoの紐付け
#   配線ミス時などに指定する (1オリジン) (CAMID_1〜CAMID_16まで飛び飛びで指定も可能)
#   CAMID_1 = 2
#   上記例だと、カメラID1の時には A2*****としてカメラコントローラーへ指示される
CAMID_1 = 1
CAMID_2 = 2
CAMID_3 = 3
CAMID_4 = 4
CAMID_5 = 9
CAMID_6 = 10
CAMID_7 = 11
CAMID_8 = 12

# 入力チャンネル別のパラメータ指定 (0:なし 1:あり)
#	カメラPLG逓倍率〜カメラPLG位相差までの５項目 が
# 	それぞれ表校正、裏校正、テスト用に存在するか(_O,_U,_T)
PARAM_O = 0
PARAM_U = 0
PARAM_T = 0

#=========================================================
# 対LED照明装置 (アイテック製 TCP/IP)
#   2分30秒 通信がなければ、LED照明側が回線切断する。PCいきなり死亡対策。
# ### 共通仕様
#  BLOCK		：配光ブロック数 (MAX256)
#  TEMP_UNIT 		：LED温度計測点数
#  TEMP_THR		：温度閾値 (これ以上はエラーとなる) [度]
#  TEMP_THR_DOWN	：強制OFF温度閾値 (これ以上はエラー+LED消灯となる) [度]
#  TIMER_CYCLE		：温度取り込み周期 [秒]
#  NAME_*		：セッションの末の部分となる (インスタンスの名前にもなる) MAX8コ
# 
# ### 個別仕様
# -装置単位-----------------
#  MEN			：面 (0:表 1:裏)
#  CH_NUM		：管理対象チャンネル数 (最大4CH)
#  LED_CONNECT_ID	：照明装置 通信状態
#  SAVE_IP		：デフォルト 192.168.0.99
#  SAVE_PORT		：デフォルト 5001
#
# -チャンネル単位-----------------
# [タスク名_セッション名_CH1]
#  LED_BREAK_ID		：断線
#  LED_HOTWAR_ID	：加熱検出
#  LED_HOTERR_ID	：加熱シャットダウン
#  LED_ONOFF_ID		：LED点灯消灯状態
#  LED_VALNOW_ID	：現在設定輝度値
#  LED_TOTALTIME_ID	：稼動累計時間
#  LED_TEMP_ST_1_ID 	：温度状態 (L,C,R)
#  LED_TEMP_1_ID 	：温度 (L,C,R)
#=========================================================
[KT_LEDMGR]
BLOCK 		   = 48
TEMP_UNIT 	   = 3
TEMP_THR           = 70
TEMP_THR_DOWN	   = 90
TIMER_CYCLE        = 120
NAME_1             = TOP
NAME_2      	   = BOT

[KT_LEDMGR_TOP]
# 基本設定
MEN		= 0
CH_NUM		= 1
LED_CONNECT_ID	= 234
# TCP/IP設定
SAVE_IP		= 192.9.200.151
SAVE_PORT	= 5001

# CH単位 (1:R 2:G 3:Bの順)
[KT_LEDMGR_TOP_CH1]
LED_BREAK_ID       = 235
LED_HOTWAR_ID      = 236
LED_HOTERR_ID      = 237
LED_ONOFF_ID       = 238
LED_VALNOW_ID      = 239
LED_TOTALTIME_ID   = 240

LED_TEMP_ST_1_ID   = 241
LED_TEMP_ST_2_ID   = 242
LED_TEMP_ST_3_ID   = 243
LED_TEMP_1_ID      = 244
LED_TEMP_2_ID      = 245
LED_TEMP_3_ID      = 246

[KT_LEDMGR_BOT]
# 基本設定
MEN		= 1
CH_NUM		= 1
LED_CONNECT_ID	= 247
# TCP/IP設定
SAVE_IP		= 192.9.200.152
SAVE_PORT	= 5001

# CH単位
[KT_LEDMGR_BOT_CH1]
LED_BREAK_ID       = 248
LED_HOTWAR_ID      = 249
LED_HOTERR_ID      = 250
LED_ONOFF_ID       = 251
LED_VALNOW_ID      = 252
LED_TOTALTIME_ID   = 253

LED_TEMP_ST_1_ID   = 254
LED_TEMP_ST_2_ID   = 255
LED_TEMP_ST_3_ID   = 256
LED_TEMP_1_ID      = 257
LED_TEMP_2_ID      = 258
LED_TEMP_3_ID      = 259

#=========================================================
# 対チラー装置
# ### 共通仕様
#  TEMP_THR	：温度閾値 (これ以上はエラーとなる) [度]
#  TIMER_CYCLE	：温度取り込み周期 [秒]
#  NAME_*	：セッションの末の部分となる (インスタンスの名前にもなる) MAX8コ
#
# ### 個別仕様
#  CHILER_CONNECT_ID	: チラー装置との通信状態を格納するID
#  CHILER_STATE_ID	: チラー運転状態を格納するID (0:クーラー運転中 1:停止,ポンプ単独運転中 )
#  CHILER_ERR_ID	: チラーからの異常を格納するID 
#  CHILER_TEMP_ST_ID	: 温度異常を格納するID (ID=0は未実行)
#  CHILER_TEMP_ID	: 温度を格納するID (ID=0は未実行)
#   以降は、232C設定
#=========================================================
[KT_CHILER]
TEMP_THR           = 35 
TIMER_CYCLE        = 180
NAME_1             = TOP
NAME_2      	   = BOT

[KT_CHILER_TOP]
# 一般設定
CHILER_CONNECT_ID  = 264
CHILER_STATE_ID    = 265
CHILER_ERR_ID      = 266
CHILER_TEMP_ST_ID  = 267
CHILER_TEMP_ID     = 268
# 232C設定
com    = COM4
baud   = 96
parity = n
data   = 8
stop   = 1
to     = off
dtr    = on
rts    = on
idsr   = off
octs   = off

[KT_CHILER_BOT]
# 一般設定
CHILER_CONNECT_ID  = 269
CHILER_STATE_ID    = 270
CHILER_ERR_ID      = 271
CHILER_TEMP_ST_ID  = 272
CHILER_TEMP_ID     = 273
# 232C設定
com    = COM5
baud   = 96
parity = n
data   = 8
stop   = 1
to     = off
dtr    = on
rts    = on
idsr   = off
octs   = off


#=========================================================
# 対温度パネルメーター装置 (オムロン製 RS-232C)
# ### 共通仕様
#  NAME_*		：セッションの末の部分となる (インスタンスの名前にもなる) MAX8コ
#
# ### 個別仕様
# -１ループ単位-----------------
# [タスク名_セッション名]
#  UNIT_NUM		：管理対象装置数 (最大16機器)
#  TIMER_CYCLE		：温度取り込み周期 [秒]
#  CONNECT_ID		：232C 通信状態 機器ID 	(0：機器状態に登録しない)
#  TEMP_KETA	: 取得温度の桁合わせ (1で1/10。2で1/100。0はそのまま。マイナスは未対応)
#  232C定義
#
# -装置単位-----------------
# [タスク名_セッション名_UNIT(UnitNo)] UnitNo=1〜の連番
#  NAME			：装置名称
#  TEMP_LIMIT		：温度上限 [度] (0のときは、未チェック)
#  TEMP_ID		：温度 ID 	(0：機器状態に登録しない)
#  TEMP_ST_ID		：温度状態 ID	(0：機器状態に登録しない)
#  UNTEN_ID		：運転状態 ID	(0：機器状態に登録しない)
#  STATE_ID		：ステータスID 	(0：機器状態に登録しない)
#			     ステータス状態
#				1bit目：未計測状態
#				2bit目：表示範囲オーバー
#				3bit目：入力異常A
#				4bit目：入力異常B
#=========================================================
[KT_TEMPMT]
NAME_1		= MAIN

[KT_TEMPMT_MAIN]
UNIT_NUM	= 4
TIMER_CYCLE	= 180
CONNECT_ID	= 313
TEMP_KETA	= 1

com = COM6
baud=9600
parity=e
data=7
stop=2
to = ON
dtr = ON
rts = ON
idsr = ON
octs = ON

[KT_TEMPMT_MAIN_UNIT1]
NAME		= 制御盤
TEMP_LIMIT	= 50
TEMP_ID		= 314
TEMP_ST_ID	= 315
UNTEN_ID	= 316
STATE_ID	= 317
[KT_TEMPMT_MAIN_UNIT2]
NAME		= 延長器収納盤
TEMP_LIMIT	= 50
TEMP_ID		= 318
TEMP_ST_ID	= 319
UNTEN_ID	= 320
STATE_ID	= 321
[KT_TEMPMT_MAIN_UNIT3]
NAME		= 表面機側盤
TEMP_LIMIT	= 50
TEMP_ID		= 322
TEMP_ST_ID	= 323
UNTEN_ID	= 324
STATE_ID	= 325
[KT_TEMPMT_MAIN_UNIT4]
NAME		= 裏面機側盤
TEMP_LIMIT	= 50
TEMP_ID		= 326
TEMP_ST_ID	= 327
UNTEN_ID	= 328
STATE_ID	= 329

#=========================================================
# DB容量管理
#---------------------------
# タスク名セッションの中身
# SESSION_1	: セッション情報 (1〜10)
#---------------------------
# 各セッションの中身
# DB_ODBC	: DBセッション名
# DB_TRAN_SIZE_ERR_ID : トランザクションログサイズ増加時の異常機器ID (0時異常判定処理未実施)
# DB_TRAN_ERR_SIZE : トランザクションエラー認識サイズ [MByte]
# TIME_CYCLE	: 定周期実行周期 [分] (0時、チェック無し)
# TIME_SIZECHECK: DB容量チェック周期 [分] (0時、容量チェック無し)
# THREAD_COUNT	: DB容量低下時の削除スレッド数 (0時、容量低下で削除しない)
# DEL_RITU_1	: 削除スレッド実行開始容量 [%-2] (空き容量が指定パーセント以下になるとスレッド実行) (降順)
# 			スレッドの実行数と同じ数にする事
# 			最大9コまでとする。(指定した最後のスレッドが起動時は、ホントに容量がやばいと判断して、全力で消しに行くので注意する事)
#			(0時、チェック無し)
# TIME_MAX_WAIT	: 書込優先時の待ち時間 [ms]
# TIME_MIN_WAIT	: 削除優先時の待ち時間 [ms]
# LOG_SAVEDAY	: ログ保存日数 (0時、LOG_INF削除 実施無し)
# COIL_DEL_COUNT: 1回での削除コイル件数
# COILRESULT_TBL: コイル実績テーブル (疵検管理Noが主キーのテーブルを指定する事)
# COILRESULT_KEY: コイル実績テーブルの主キー (通常疵検管理No)
# 
#### 拡張
# ZI_1		: コイル実績の疵検管理Noを消す時に、一緒に消えていくテーブル (容量により削除) (1〜無限)		
# 			テーブル名, 主キー, サブキー(通常,疵No or ""), 一回の削除件数(0だと疵検管理No全部)
#  
# TI_1		: 日付で管理しているテーブル (定周期により削除) (1〜無限)
# 			テーブル名, 日付列(通常,登録日付), 保存日数
#=========================================================
[TI_DELETE]
SESSION_1 = TI_DELETE_A
SESSION_2 = TI_DELETE_B
SESSION_3 = TI_DELETE_ZI

# 統括PC
[TI_DELETE_A]
DB_ODBC = DB_A
DB_TRAN_SIZE_ERR_ID = 287
DB_TRAN_ERR_SIZE = 1000
TIME_CYCLE = 10
TIME_SIZECHECK = 5
THREAD_COUNT = 3
DEL_RITU_1 = 600
DEL_RITU_2 = 300
DEL_RITU_3 = 200
TIME_MAX_WAIT = 3000
TIME_MIN_WAIT = 100
LOG_SAVEDAY = 180
COIL_DEL_COUNT = 0
COILRESULT_TBL = 
COILRESULT_KEY = 

#### 拡張
## コイル実績の疵検管理Noを消す時に、一緒に消えていくテーブル達
# テーブル名, 主キー, サブキー(通常,疵No or ""), 一回の削除件数(0だと疵検管理No全部)

## 日付で管理しているテーブル
# テーブル名, 日付列(通常,登録日付), 保存日数
TI_1	= ST_HISTORY_INF,	登録日付,	720
TI_2	= BUF_SEQ_R_COILINF,	登録日付,	90
TI_3	= BUF_FF_S_ZISEKI,	登録日付,	90

# 統括バックアップPC
[TI_DELETE_B]
DB_ODBC = DB_B
DB_TRAN_SIZE_ERR_ID = 288
DB_TRAN_ERR_SIZE = 1000
TIME_CYCLE = 10
TIME_SIZECHECK = 5
THREAD_COUNT = 2
DEL_RITU_1 = 1000
DEL_RITU_2 = 400
TIME_MAX_WAIT = 3000
TIME_MIN_WAIT = 100
LOG_SAVEDAY = 180
COIL_DEL_COUNT = 0
COILRESULT_TBL = 
COILRESULT_KEY = 

#### 拡張
## コイル実績の疵検管理Noを消す時に、一緒に消えていくテーブル達
# テーブル名, 主キー, サブキー(通常,疵No or ""), 一回の削除件数(0だと疵検管理No全部)

## 日付で管理しているテーブル
# テーブル名, 日付列(通常,登録日付), 保存日数
TI_1	= ST_HISTORY_INF,	登録日付,	720
TI_2	= BUF_SEQ_R_COILINF,	登録日付,	90
TI_3	= BUF_FF_S_ZISEKI,	登録日付,	90

# 蓄積PC
[TI_DELETE_ZI]
DB_ODBC = DB_ZI
DB_TRAN_SIZE_ERR_ID = 289
DB_TRAN_ERR_SIZE = 1000
TIME_CYCLE = 10
TIME_SIZECHECK = 5
THREAD_COUNT = 2
DEL_RITU_1 = 1000
DEL_RITU_2 = 400
TIME_MAX_WAIT = 3000
TIME_MIN_WAIT = 100
LOG_SAVEDAY = 180
COIL_DEL_COUNT = 20
COILRESULT_TBL = COIL_RESULT
COILRESULT_KEY = 疵検管理No

#### 拡張
## コイル実績の疵検管理Noを消す時に、一緒に消えていくテーブル達
# テーブル名, 主キー, サブキー(通常,疵No or ""), 一回の削除件数(0だと疵検管理No全部)
ZI_1	= COIL_INF, 		疵検管理No,	,		0
ZI_2	= COIL_POSITION,	疵検管理No,	,		0

ZI_3	= DEFECT_INF_T,		疵検管理No,	疵No,		5000
ZI_4	= DEFECT_IMG_T,		疵検管理No,	疵No,		1000
ZI_5	= DEFECT_ATTR0_T,	疵検管理No,	疵No,		2000
ZI_6	= DEFECT_ATTR1_T,	疵検管理No,	疵No,		2000
ZI_7	= DEFECT_ATTR2_T,	疵検管理No,	疵No,		2000
ZI_8	= DEFECT_ATTR3_T,	疵検管理No,	疵No,		2000
ZI_9	= DEFECT_ATTR4_T,	疵検管理No,	疵No,		2000
ZI_10	= DEFECT_INF_B,		疵検管理No,	疵No,		5000
ZI_11	= DEFECT_IMG_B,		疵検管理No,	疵No,		1000
ZI_12	= DEFECT_ATTR0_B,	疵検管理No,	疵No,		2000
ZI_13	= DEFECT_ATTR1_B,	疵検管理No,	疵No,		2000
ZI_14	= DEFECT_ATTR2_B,	疵検管理No,	疵No,		2000
ZI_15	= DEFECT_ATTR3_B,	疵検管理No,	疵No,		2000
ZI_16	= DEFECT_ATTR4_B,	疵検管理No,	疵No,		2000

ZI_17	= FRAME_INF,		疵検管理No,	,		0
ZI_18	= FRAME_IMG,		疵検管理No,	,		0

ZI_19	= ACCESS_NEXT_COIL_INF,		疵検管理No,	,	0
ZI_20	= ACCESS_NEXT_DEFECT_INF,	疵検管理No,	,	0

## 日付で管理しているテーブル
# テーブル名, 日付列(通常,登録日付), 保存日数
TI_1	= ST_HISTORY_INF,	登録日付,	720
TI_2	= BUF_SEQ_R_COILINF,	登録日付,	90
TI_3	= BUF_FF_S_ZISEKI,	登録日付,	90

#=========================================================
# DB同期管理
#---------------------------
# タスク名セッションの中身
# SESSION_1	: セッション情報 (1〜) [セッション名, TYPE]
# TYPE		: このセッションの動作定義 (同一タイプの最大登録数10個)
#     			0 ･･･ マスターの同期  (初期時)
#				TBLの形式１：テーブル名
#			1 ･･･ 実績の追加コピー (先テーブルの最新をキーに、それ以降の元テーブルのデータを先テーブルにコピー)
#				TBLの形式１：テーブル名,  1回の追加件数,  主キー1(必須),  主キー2(空白可),  主キー3(空白可)
#			2 ･･･ 実績の移動
#				TBLの形式１：テーブル名,  1回の移動件数,  主キー1(必須),  主キー2(空白可)
#			3 ･･･ 実績の完全同期 (双方のテーブルで、キーが無い項目を補間しあう)  (初期時,A→Bにデータがコピー)
#				TBLの形式１：テーブル名,  1回の追加件数,  主キー1(必須),  主キー2(空白可),  主キー3(空白可)
#---------------------------
# 各セッションの中身
# DB_ODBC_A	: DBセッション名
# DB_ODBC_B	: DBセッション名
# LINK_PATH_AB	: A系のDBに定義されているリンクサーバー経由でB系アクセスする時のパス "[リンクサーバー名].データベース名.dbo."
# LINK_PATH_BA	: B系のDBに定義されているリンクサーバー経由でA系アクセスする時のパス "[リンクサーバー名].データベース名.dbo."
#   通常の定周期実行時は、 A→Bの流れでデータが処理される
#   このタスクを使用する場合は、必ずDBのリンクサーバーの定義をする事。
#    ・A系には、B系のサーバーを追加。B系には、A系のサーバーを追加する事。
#    ・リンクサーバーの定義は、 プロパイダ[SQL Native Client、Microsoft OLE DB Pro…SQLServer]
#				製品名[mySQLServer]    データソース[IPアドレス]   カタログ[DB名]   セキュリティでログイン名とパスを設定する事
#
# TIME_FAST	: 初期実行までの時間 (0:定周期無し) [分]
# TIME_INTERVAL	: ２回目以降の実行周期 [分]
# MAIL_KEY	: メールスロット受信時に第2引数と一致した場合、強制的に実行される。 (0:未実施)
# T_1		: テーブル名 (最大50テーブル)
#
# FACT_KS_EQALDB_01の起動受信時
#     data[0]   0:A→B    1:B→A
#     data[1]  任意の値 (0:無視  1〜:MAIL_KEYと一致した場合、強制的に実行される。
#
#---------------------------
#リンクサーバー定義	(A系のDBにはB系にアクセスするために定義を設定させる)
# [LINKSRV_1]		1〜の連番
# SELECT_ODBC_KEY	: 追加対象のODBCキー
# LINK_NAME		: リンクサーバー名
# DBADDLESS		: DB接続アドレス
# DSNAME		: SQLServerのDB名称
# USERID		: ユーザー名
# PASSWORD		: パスワード
# SRVPRODUCT		: 製品名 (mySQLServer)固定
# PROVIDER		: プロバイダ (SQLServer2005=SQLNCLI。SQLServer2008=SQLNCLI10 )
#=========================================================
[KS_EQALDB]
SESSION_1 = KS_EQALDB_EQAL_ZI_H, 0
SESSION_2 = KS_EQALDB_EQAL_ZI_L, 0
SESSION_3 = KS_EQALDB_COPY_ZI, 1
SESSION_4 = KS_EQALDB_EQAL_B, 0

# リンクサーバー定義
[LINKSRV_1]
SELECT_ODBC_KEY = DB_A
LINK_NAME	= TIKUSEKI
DBADDLESS	= 192.9.200.33
DSNAME		= DATABASE_NHOT
USERID		= sa
PASSWORD	= nsc
SRVPRODUCT	= mySQLServer
PROVIDER	= SQLNCLI

[LINKSRV_2]
SELECT_ODBC_KEY = DB_A
LINK_NAME	= TOKATUSUB
DBADDLESS	= 192.9.200.32
DSNAME		= DATABASE_NHOT
USERID		= sa
PASSWORD	= nsc
SRVPRODUCT	= mySQLServer
PROVIDER	= SQLNCLI

[LINKSRV_3]
SELECT_ODBC_KEY = DB_B
LINK_NAME	= TOKATU
DBADDLESS	= 192.9.200.31
DSNAME		= DATABASE_NHOT
USERID		= sa
PASSWORD	= nsc
SRVPRODUCT	= mySQLServer
PROVIDER	= SQLNCLI

[LINKSRV_4]
SELECT_ODBC_KEY = DB_B
LINK_NAME	= TIKUSEKI
DBADDLESS	= 192.9.200.33
DSNAME		= DATABASE_NHOT
USERID		= sa
PASSWORD	= nsc
SRVPRODUCT	= mySQLServer
PROVIDER	= SQLNCLI

[LINKSRV_5]
SELECT_ODBC_KEY = DB_ZI
LINK_NAME	= TOKATU
DBADDLESS	= 192.9.200.31
DSNAME		= DATABASE_NHOT
USERID		= sa
PASSWORD	= nsc
SRVPRODUCT	= mySQLServer
PROVIDER	= SQLNCLI

[LINKSRV_6]
SELECT_ODBC_KEY = DB_ZI
LINK_NAME	= TOKATUSUB
DBADDLESS	= 192.9.200.32
DSNAME		= DATABASE_NHOT
USERID		= sa
PASSWORD	= nsc
SRVPRODUCT	= mySQLServer
PROVIDER	= SQLNCLI

# 早く実績に反映させるもの
[KS_EQALDB_EQAL_ZI_H]
DB_ODBC_A	= DB_A
DB_ODBC_B	= DB_ZI
LINK_PATH_AB	= [TIKUSEKI].DATABASE_NHOT.dbo.
LINK_PATH_BA	= [TOKATU].DATABASE_NHOT.dbo.
TIME_FAST	= 1
TIME_INTERVAL	= 1
MAIL_KEY	= 10
# マスター同期対象テーブル
T_1	= STATUS_INF
T_2	= PC_INF

# ゆっくり実績に反映させるもの
[KS_EQALDB_EQAL_ZI_L]
DB_ODBC_A	= DB_A
DB_ODBC_B	= DB_ZI
LINK_PATH_AB	= [TIKUSEKI].DATABASE_NHOT.dbo.
LINK_PATH_BA	= [TOKATU].DATABASE_NHOT.dbo.
TIME_FAST	= 5
TIME_INTERVAL	= 10
MAIL_KEY	= 11
# マスター同期対象テーブル
T_1		= STATUS_MASTER
T_2		= LOG_MASTER
T_3		= PC_MASTER
T_4		= ST_HISTORY_MASTER
T_5		= COMMON_MASTER
T_6		= TYPE_NAME
T_7		= GRADE_NAME
T_8		= SCODE_MASTER
T_9		= SCODE_JUDGE
T_10		= SCODE_OUTPUT
T_11		= PCODE_MASTER
T_12		= PCODE_JUDGE
T_13		= PCODE_OUTPUT
T_14		= VOICE_MASTER
T_15		= BASE_ACTION_MASTER
T_16		= ATTR_NAME
T_17		= PARAM_COMMON
T_18		= PARAM_SCODE
T_19		= PARAM_CAMSET
T_20		= PARAM_CAMSET_SCODE
T_21		= PARAM_CAMSET_ANGLE
T_22		= PARAM_CAMANGLE_SCODE
T_23		= PARAM_CAMSET_ANGLE_SCODE
T_24		= PCINFO_DESC
T_25		= GROUP_NAME
T_26		= ROLL_INFO

# 共通蓄積へ定期的に実績コピー
[KS_EQALDB_COPY_ZI]
DB_ODBC_A	= DB_A
DB_ODBC_B	= DB_ZI
LINK_PATH_AB	= [TIKUSEKI].DATABASE_NHOT.dbo.
LINK_PATH_BA	= [TOKATU].DATABASE_NHOT.dbo.
TIME_FAST	= 1
TIME_INTERVAL	= 2
MAIL_KEY	= 12
# 実績コピー
T_1		= LOG_INF,		500,	登録日付, 	AutoNo
T_2		= ST_HISTORY_INF,	2000,	登録日付, 	区分
T_3		= BUF_SEQ_R_COILINF,	500,	ID,		
T_4		= BUF_FF_S_ZISEKI,	500,	ID,		

# マスターデータを統括バックアップPCにコピー
[KS_EQALDB_EQAL_B]
DB_ODBC_A	= DB_A
DB_ODBC_B	= DB_B
LINK_PATH_AB	= [TOKATUSUB].DATABASE_NHOT.dbo.
LINK_PATH_BA	= [TOKATU].DATABASE_NHOT.dbo.
TIME_FAST	= 1440
TIME_INTERVAL	= 60
MAIL_KEY	= 20
# マスター同期対象テーブル
T_1		= STATUS_MASTER
T_2		= LOG_MASTER
T_3		= PC_MASTER
T_4		= ST_HISTORY_MASTER
T_5		= COMMON_MASTER
T_6		= TYPE_NAME
T_7		= GRADE_NAME
T_8		= SCODE_MASTER
T_9		= SCODE_JUDGE
T_10		= SCODE_OUTPUT
T_11		= PCODE_MASTER
T_12		= PCODE_JUDGE
T_13		= PCODE_OUTPUT
T_14		= VOICE_MASTER
T_15		= BASE_ACTION_MASTER
T_16		= ATTR_NAME
T_17		= PARAM_COMMON
T_18		= PARAM_SCODE
T_19		= PARAM_CAMSET
T_20		= PARAM_CAMSET_SCODE
T_21		= PARAM_CAMSET_ANGLE
T_22		= PARAM_CAMANGLE_SCODE
T_23		= PARAM_CAMSET_ANGLE_SCODE
T_24		= PCINFO_DESC
T_25		= GROUP_NAME
T_26		= ROLL_INFO

T_27		= STATUS_INF
T_28		= PC_INF


#=========================================================
# 全長バックアップ管理
# ID_NUM  		何個ある
#
### 各機能 [ID_1･･･]
# MEN			表裏区分 (0:表 1:裏)
# RPISAVE_INI_PATH	TI_RPISAVEのINIファイル絶対パス(統括IniSettingの中)
# RPISAVE_INS_SEC	TI_RPISAVEセクション名 ([TI_RPISAVE_INS_1])

# PC_NUM		本番機を含めた管理数
# PCKIND_1		全長画像処理PC のPCKIND(本番機、予備機・・・)
# PCID_1		全長画像処理PC のPCID  (本番機、予備機・・・)
#=========================================================
[TO_RPIMGR]
ID_NUM 	= 2

[ID_1]
MEN = 0
RPISAVE_INI_PATH= C:\NHOT_MAKI\IniSetting\t全長処理表機能 KizuTask.ini
RPISAVE_INS_SEC = TI_RPISAVE_INS_1

PC_NUM		= 2
PCKIND_1	= 28
PCID_1		= 28
PCKIND_2	= 30
PCID_2		= 29

[ID_2]
MEN = 1
RPISAVE_INI_PATH= C:\NHOT_MAKI\IniSetting\t全長処理裏機能 KizuTask.ini
RPISAVE_INS_SEC = TI_RPISAVE_INS_1

PC_NUM		= 2
PCKIND_1	= 29
PCID_1		= 30
PCKIND_2	= 31
PCID_2		= 31


#**************************************************************************************
# 統括機能外
#**************************************************************************************
#=========================================================
# 表示管理
# IMAGE_PATH        : 探傷画面表示用の画像格納パス
# SAVE_IP           : 疵実績情報送信PCのIPアドレス
# SAVE_PORT         : 受信ポート
# VOIC_OUTPUT	    : ボイス出力有無 (0:無し 1:有り)
#=========================================================
[HY_DEFECT]
IMAGE_PATH = D:\IMG
SAVE_IP	   = 192.9.200.31
SAVE_PORT  = 10002
VOIC_OUTPUT =0
#=========================================================
# 探傷画面
# [HY_TANSHO]        (探傷画面共通設定)
#   FROM_TOTAL_NUM         : 出力総画面数               (1 〜 :探傷画面ウィンドウの出力数)
#   MAP_INTERVAL           : 疵マップ更新秒数           (0 〜 :探傷画面上疵マップの更新間隔)
#   STATUS_INTERVAL        : ステータス更新秒数         (0 〜 :探傷画面上ステータス欄の更新間隔)
#   COIL_INTERVAL          : コイル更新秒数             (0 〜 :探傷画面上コイル情報欄の更新間隔)
#   DSP_OVERLAY_INF        : オーバーレイ表示ボタン設定 (0:起動時に機能ON、1:起動時に機能OFF)
#   SYNC_MODE              : 同期モード                 (0:全ての画面を同期、1:検査台毎に動作、2:同期無し)
#   IMAGE_WIDTH            : 画像100pixel横幅設定       (1 〜 :100pixel横幅を指定[mm])
# [HY_TANSHO_FORMn]  (探傷画面個別設定 : n=1以上)
#   FROM_POS_NUM           : 画面位置番号               (1 〜 :HY_TANSHO_FORMnまで表示)
#   FROM_MEN_NUM           : 表示表裏面番号             (0:表面、1:裏面) 
#   KENSA_NUM              : 検査台番号                 (0 〜 :検査台番号 ポインタ情報テーブル参照番号)
#   MAP_SCROLL_DIRECT      : 疵マップ進行方向           (0:下から上、1:上から下)
#   MAP_VIEW_DIRECT        : 疵マップ表示欄側           (0:左がDS、1:左がWS)
#   MAP_CELL_DIRECT        : 疵マップセル側             (0:疵マップの左右反転無し、1:疵マップの左右反転有り)
#   IMAGE_TOP_BOTTOM_INF   : 疵画像の上下反転           (0:反転無し、1:反転有り)
#   IMAGE_SIDE_INF         : 疵画像の右左反転           (0:反転無し、1:反転有り)
#=========================================================
[HY_TANSHO]
FROM_TOTAL_NUM	= 2
MAP_INTERVAL	= 300
STATUS_INTERVAL	= 500
COIL_INTERVAL	= 2000
DSP_OVERLAY_INF	= 1
SYNC_MODE	= 1
IMAGE_WIDTH     = 20

[HY_TANSHO_FORM1]
FROM_POS_NUM           = 1
FROM_MEN_NUM           = 0
KENSA_NUM              = 0
MAP_SCROLL_DIRECT      = 0
MAP_VIEW_DIRECT        = 1
MAP_CELL_DIRECT        = 0
IMAGE_TOP_BOTTOM_INF   = 0
IMAGE_SIDE_INF         = 1

[HY_TANSHO_FORM2]
FROM_POS_NUM           = 2
FROM_MEN_NUM           = 1
KENSA_NUM              = 0
MAP_SCROLL_DIRECT      = 0
MAP_VIEW_DIRECT        = 1
MAP_CELL_DIRECT        = 0
IMAGE_TOP_BOTTOM_INF   = 0
IMAGE_SIDE_INF         = 1

#=========================================================
# 操作画面
#  [SO_GAMENN]       (共通設定)
#   RAS_TIMER		   : RAS画面DB読み込み周期[msec]
#   SYUKUTAI_TIMER	   : 縮退状態画面DB読み込み周期[msec]
#   DSP_OVERLAY_INF	   : 起動時のオーバーレイ表示有無 (0:非表示 1:表示)
#   DISPLAY_SIZE	   : ディスプレイサイズ 0:1280×1024 1:1920×1080
#   IMAGE_WIDTH		   : 切り出し画像100pixel横幅設定       (1 〜 :100pixel横幅を指定[mm])
#   FRAME_IMAGE_WIDTH  : フレーム画像100pixel横幅設定       (1 〜 :100pixel横幅を指定[mm])
#
#   MAP_SCROLL_DIRECT      : マップ進行方向             (0:下から上、1:上から下)
#   MAP_VIEW_DIRECT_O      : 表面疵マップ表示側         (0:左がDS、1:左がWS)
#   MAP_CELL_DIRECT_O      : 疵マップセル側             (0:疵マップの左右反転無し、1:疵マップの左右反転有り)
#   IMAGE_TOP_BOTTOM_INF_O : 表面疵画像の上下反転       (0:反転無し、1:反転有り)
#   IMAGE_SIDE_INF_O       : 表面疵画像の右左反転       (0:反転無し、1:反転有り)
#   MAP_VIEW_DIRECT_U      : 裏面疵マップ表示側         (0:左がDS、1:左がWS)
#   MAP_CELL_DIRECT_U      : 疵マップセル側             (0:疵マップの左右反転無し、1:疵マップの左右反転有り)
#   IMAGE_TOP_BOTTOM_INF_U : 裏面疵画像の上下反転       (0:反転無し、1:反転有り)
#   IMAGE_SIDE_INF_U       : 裏面疵画像の右左反転       (0:反転無し、1:反転有り)
#
#   PLOTMAP_UP_TOP          : 疵散布図画面 表面 長手方向に対して、上下反転 (0:反転無し、1:反転有り)
#   PLOTMAP_UP_BOT          : 疵散布図画面 裏面 長手方向に対して、上下反転 (0:反転無し、1:反転有り)
#   PLOTMAP_SIDE_TOP        : 疵散布図画面 表面 長手縦方向表示時、左右反転 (0:反転無し、1:反転有り)
#   PLOTMAP_SIDE_BOT        : 疵散布図画面 裏面 長手縦方向表示時、左右反転 (0:反転無し、1:反転有り)
#   PLOTMAP_SIDE_TOP_HORZ   : 疵散布図画面 表面 長手横方向表示時、左右反転 (0:反転無し、1:反転有り)
#   PLOTMAP_SIDE_BOT_HORZ   : 疵散布図画面 裏面 長手横方向表示時、左右反転 (0:反転無し、1:反転有り)
# [SO_GAMENN_FORM1]   (個別画面設定)
#   FROM_POS_NUM            : 初期起動ディスプレイ番号
#=========================================================
[SO_GAMENN]
RAS_TIMER              = 1000
SYUKUTAI_TIMER         = 5000
DSP_OVERLAY_INF        = 1
DISPLAY_SIZE           = 0
IMAGE_WIDTH            = 20
FRAME_IMAGE_WIDTH      = 100

MAP_SCROLL_DIRECT      = 0
MAP_VIEW_DIRECT_O      = 1
MAP_CELL_DIRECT_O      = 1
IMAGE_TOP_BOTTOM_INF_O = 0
IMAGE_SIDE_INF_O       = 1
MAP_VIEW_DIRECT_U      = 1
MAP_CELL_DIRECT_U      = 1
IMAGE_TOP_BOTTOM_INF_U = 0
IMAGE_SIDE_INF_U       = 1

PLOTMAP_UP_TOP          = 0
PLOTMAP_UP_BOT          = 0
PLOTMAP_SIDE_TOP        = 1
PLOTMAP_SIDE_BOT        = 1
PLOTMAP_SIDE_TOP_HORZ   = 1
PLOTMAP_SIDE_BOT_HORZ   = 1

[SO_GAMENN_FORM1]
FROM_POS_NUM = 1 

[SO_GAMENN_FORM2]
FROM_POS_NUM = 2 
