#////////////////////////////////////////////////////////////////////
# 機能単位の設定ファイル
#  ※ 名前の付け方 [t統括機能 kizuTask.ini]
#////////////////////////////////////////////////////////////////////

#**************************************************************************************
# ライブラリ使用 部
#**************************************************************************************
#=========================================================
# データベース情報
#  DBADDLESS	: DB接続アドレス (VBでしか使用しない)
#  ODBCNAME	: ODBCの名称 (C のみ使用)
#  DSNAME	: SQLServerのDB名称(VB のみ使用)
#  USERID	: ユーザー名
#  PASSWORD	: パスワード
#=========================================================
# オンライン実行中DB
[DB]
DBADDLESS=192.9.200.31
#DBADDLESS= 192.9.200.216\vz2014
ODBCNAME =DATABASE_OPLT
DSNAME   =DATABASE_OPLT
USERID   =sa
PASSWORD =vz
# A系DB
[DB_A]
DBADDLESS= 192.9.200.31
ODBCNAME = DATABASE_OPLT
DSNAME   = DATABASE_OPLT
USERID   = sa
PASSWORD = vz
# B系DB
[DB_B]
DBADDLESS= 192.9.200.32
ODBCNAME = DATABASE_OPLTsub
DSNAME   = DATABASE_OPLT
USERID   = sa
PASSWORD = vz


#=========================================================
# 共通設定
#  LINEID	: ライン区分(コンパイル無しでタスクの切替等で使用可能) (0:)
#  NOA		: NOA接続フラグ (0:オンライン  1:遠隔  9:解析用(ｵﾝﾗｲﾝ系の全機能)  -1:デバック)
#=========================================================
[COMMON]
LINEID = 0
NOA = 9

#=========================================================
# 機器ID定義
#  各機能での機器IDを定義 (共通支援機能での機器IDは除く)
#=========================================================
[STATUS]
# 判定PC01応答無し
HANTEI_ANS_1_ID = 137
HANTEI_ANS_2_ID = 138
HANTEI_ANS_3_ID = 139
HANTEI_ANS_4_ID = 140
HANTEI_ANS_5_ID = 141
HANTEI_ANS_6_ID = 142
HANTEI_ANS_7_ID = 143
HANTEI_ANS_8_ID = 144
HANTEI_ANS_9_ID = 145
HANTEI_ANS_10_ID = 146
HANTEI_ANS_11_ID = 147
HANTEI_ANS_12_ID = 148
HANTEI_ANS_13_ID = 149
HANTEI_ANS_14_ID = 150

# 判定PC 異常発生（バックアップも不可能）
HANTEI_TOP_ANS_ID = 151
HANTEI_BOT_ANS_ID = 152
#CYCLE_TOP_ANS_ID = 999
#CYCLE_BOT_ANS_ID = 999

# カメラ温度状態
CAM_TEMPSTATE_1_1_ID = 165
CAM_TEMPSTATE_2_1_ID = 166
CAM_TEMPSTATE_3_1_ID = 167
CAM_TEMPSTATE_4_1_ID = 168
CAM_TEMPSTATE_5_1_ID = 169
CAM_TEMPSTATE_6_1_ID = 170
CAM_TEMPSTATE_7_1_ID = 171
CAM_TEMPSTATE_8_1_ID = 172
CAM_TEMPSTATE_9_1_ID = 173
CAM_TEMPSTATE_10_1_ID = 174
CAM_TEMPSTATE_11_1_ID = 175
CAM_TEMPSTATE_12_1_ID = 176

# カメラ温度
CAM_TEMP_1_1_ID = 177
CAM_TEMP_2_1_ID = 178
CAM_TEMP_3_1_ID = 179
CAM_TEMP_4_1_ID = 180
CAM_TEMP_5_1_ID = 181
CAM_TEMP_6_1_ID = 182
CAM_TEMP_7_1_ID = 183
CAM_TEMP_8_1_ID = 184
CAM_TEMP_9_1_ID = 185
CAM_TEMP_10_1_ID = 186
CAM_TEMP_11_1_ID = 187
CAM_TEMP_12_1_ID = 188


# ライン稼動時の照明OFF
LED_RUNOFF_1_ID = 289
LED_RUNOFF_2_ID = 290


# カメラコントローラー
CAMLINKSW_ANS_ID=291
CAMCONTROL_ID = 292
CAMSWITCH_ID = 293

# 各種状態
BOOD_CNT_ID = 322
BOOD_PIO_ID = 323
DIV_KADOU_ID = 324
DIV_UNTEN_ID = 325
DIV_SOGYO_ID = 326
DIV_PLGMODE_ID = 327

# 画像書き込み失敗
BCP_ERR_ID = 330

# 検査実績保存上限
DB_SAVE_MAX_1_ID = 331
DB_SAVE_MAX_2_ID = 332

# プロコン通信
PROCON_ID = 333

# 対シーケンサ通信
DATAMEM_SEQ_ID = 334
DATAMEM_HB_ID = 335
PIOSEQ_HB_ID = 336
DATAMEM_SK_HB_ID = 337

# 上位情報
LINE_CNO_ID = 340
COIL_KEN_ID = 341
COIL_DSP_ID = 342

# カメラ関係
CAM_EXPTIME_1_ID = 343
CAM_EXPTIME_2_ID = 344
CAM_EXPTIME_3_ID = 345
CAM_EXPTIME_4_ID = 346
CAM_EXPTIME_5_ID = 347
CAM_EXPTIME_6_ID = 348
CAM_EXPTIME_7_ID = 349
CAM_EXPTIME_8_ID = 350
CAM_EXPTIME_9_ID = 351
CAM_EXPTIME_10_ID = 352
CAM_EXPTIME_11_ID = 353
CAM_EXPTIME_12_ID = 354
CAM_GAIN_1_1_ID = 355
CAM_GAIN_1_2_ID = 356
CAM_GAIN_1_3_ID = 357
CAM_GAIN_2_1_ID = 358
CAM_GAIN_2_2_ID = 359
CAM_GAIN_2_3_ID = 360
CAM_GAIN_3_1_ID = 361
CAM_GAIN_3_2_ID = 362
CAM_GAIN_3_3_ID = 363
CAM_GAIN_4_1_ID = 364
CAM_GAIN_4_2_ID = 365
CAM_GAIN_4_3_ID = 366
CAM_GAIN_5_1_ID = 367
CAM_GAIN_5_2_ID = 368
CAM_GAIN_5_3_ID = 369
CAM_GAIN_6_1_ID = 370
CAM_GAIN_6_2_ID = 371
CAM_GAIN_6_3_ID = 372
CAM_GAIN_7_1_ID = 373
CAM_GAIN_7_2_ID = 374
CAM_GAIN_7_3_ID = 375
CAM_GAIN_8_1_ID = 376
CAM_GAIN_8_2_ID = 377
CAM_GAIN_8_3_ID = 378
CAM_GAIN_9_1_ID = 379
CAM_GAIN_9_2_ID = 380
CAM_GAIN_9_3_ID = 381
CAM_GAIN_10_1_ID = 382
CAM_GAIN_10_2_ID = 383
CAM_GAIN_10_3_ID = 384
CAM_GAIN_11_1_ID = 385
CAM_GAIN_11_2_ID = 386
CAM_GAIN_11_3_ID = 387
CAM_GAIN_12_1_ID = 388
CAM_GAIN_12_2_ID = 389
CAM_GAIN_12_3_ID = 390

# 昇降SEQ
SK_MOVEING_ID		= 391
SK_POS_ID			= 392
SK_MODE_ID			= 393
SK_START_ID			= 394
SK_LOCK_ID			= 395
SK_ERR_ID			= 396
SK_SOFTLIMIT_1_ID	= 397
SK_SOFTLIMIT_2_ID	= 398
SK_LSLIMIT_1_ID		= 399
SK_LSLIMIT_2_ID		= 400
SK_LSLIMIT_3_ID		= 401
SK_LOCKPIN_WS_ID	= 402
SK_LOCKPIN_DS_ID	= 403
SK_POS_MENTE_ID		= 404
SK_SBA_MCB_ON_ID	= 405
SK_SBA_MCB_TRIP_ID	= 405
SK_SBA_ERR_ID		= 407
SK_SBM_MCB_ON_ID	= 408
SK_SBM_MCB_TRIP_ID	= 409
SK_SBM_MCB_ANS_ID	= 410
SK_BAN_MCB_ON_ID	= 411
SK_BAN_MCB_TRIP_ID	= 412
SK_LED_MCB_ON_ID	= 413
SK_LED_MCB_TRIP_ID	= 414
SK_LED_ERR_ID		= 415
SK_CHILER_1_ST_ID	= 416
SK_CHILER_1_ERR_ID	= 417
SK_CHILER_2_ST_ID	= 418
SK_CHILER_2_ERR_ID	= 419
SK_COMP_ST_ID		= 420
SK_COMP_ERR_ID		= 421
SK_LED_1_B_FLOW_ID	= 422
SK_LED_1_G_FLOW_ID	= 423
SK_AIR_1_ID			= 424
SK_LED_2_B_FLOW_ID	= 425
SK_LED_2_G_FLOW_ID	= 426
SK_AIR_2_ID			= 427

## NASサーバー	全長保存PC
#NAS_CONNECT_BCP_ID	=  428
#NAS_CONNECT_RPI_ID	=  429

# 検査実績保存スキップ
DB_SAVE_SKIP_1_ID = 430
DB_SAVE_SKIP_2_ID = 431

#=========================================================
# 共有メモリ情報 (1〜50まで)
#  MEM1_NAME	: 共有メモリ名
#  MEM1_SIZE	: サイズ
#=========================================================
[MEM]
#MEM1_NAME = TBL_TO_COIL
#MEM1_SIZE = 6144
#MEM2_NAME = TBL_TO_SEQMEM
#MEM2_SIZE = 512
#MEM3_NAME = TBL_TO_CAMERA
#MEM3_SIZE = 512

MEM6_NAME = TBL_TO_COIL
MEM6_SIZE = 6144
MEM7_NAME = TBL_TO_SEQMEM
MEM7_SIZE = 512
MEM8_NAME = TBL_TO_CAMERA
MEM8_SIZE = 512

# 表示機能もテストするために定義しておく
MEM1_NAME = TBL_HY_STATUS
MEM1_SIZE = 2048
MEM2_NAME = TBL_HY_POINT
MEM2_SIZE = 4096
MEM3_NAME = TBL_HY_COILINF
MEM3_SIZE = 100000
MEM4_NAME = TBL_HY_COILRESULT
MEM4_SIZE = 220000
MEM5_NAME = TBL_HY_DEFECTINF
MEM5_SIZE = 100000000




#=========================================================
# プロセス情報 (1〜50まで)
#  TASK1	: 起動タスク名, 起動プロセス(0:通常 1:最小化 2:最大化 3:非表示), ホントの起動EXE名称(起動タスク名と同じなら無しでOK)
#=========================================================
[EXECUTE]
TASK1=KS_SYSLOG, 1
TASK2=KS_EVTLOG, 1
TASK3=KS_HDDCHK, 1, KS_HDDCHKx64
TASK4=KS_HISTRY, 1
TASK5=KS_EQALDB, 1
TASK6=KT_LEDMGR, 1
TASK7=TI_DELETE, 1

TASK8=TO_CAMERA, 1
TASK9=TO_LINKSW, 1
TASK10=KT_RPICHK, 1

TASK11=TO_DEFECT, 0
TASK12=TO_GETDAT, 1
TASK13=TO_SEQDM, 1

TASK14=TO_PROCON, 1

#TASK15=HY_DEFECT, 1
#TASK16=KT_CHILER, 1
#TASK17=KT_TEMPMT, 1


#**************************************************************************************
# 各タスク 部
#**************************************************************************************
#=========================================================
# 統括管理
#=========================================================
[TO_DEFECT]
# LED照明 ライン休止OFF時間 [分]
LED_LINESTOP_OFFTIME    = 5

# 各判定PCの物理的なカメラリンクスイッチ接続CH を設定
#   CAMLINKSW_PCIDx_y : 判定PCと接続されているｶﾒﾗﾘﾝｸｽｲｯﾁ出力 (FPGAボードNo*100 + ch(1〜15))
#			x:PCID 1〜
#			y:接続口 1〜
CAMLINKSW_PCID1_1 = 1
CAMLINKSW_PCID2_1 = 2
CAMLINKSW_PCID3_1 = 3
CAMLINKSW_PCID4_1 = 4
CAMLINKSW_PCID5_1 = 5
CAMLINKSW_PCID6_1 = 6
CAMLINKSW_PCID13_1= 7

CAMLINKSW_PCID7_1 = 201
CAMLINKSW_PCID8_1 = 202
CAMLINKSW_PCID9_1 = 203
CAMLINKSW_PCID10_1= 204
CAMLINKSW_PCID11_1= 205
CAMLINKSW_PCID12_1= 206
CAMLINKSW_PCID14_1= 207



# 判定PCとのソケット定義
# Cliant01_Nameは、プログラム内で値を設定しなおす
[HT_RECV_TOP]
SAVE_IP		= 192.9.200.31
SAVE_PORT	= 10000
[HT_RECV_BOT]
SAVE_IP		= 192.9.200.31
SAVE_PORT	= 10001
# 表示PCとのソケット定義
[OP_SEND]
SAVE_IP 	= 192.9.200.31
SAVE_PORT 	= 10002
## 周期PCとのソケット定義
#[CY_RECV_TOP]
#SAVE_IP		= 192.9.200.31
#SAVE_PORT	= 10010
#[CY_RECV_BOT]
#SAVE_IP		= 192.9.200.31
#SAVE_PORT	= 10011

#=====================================>>>>>>>>>>>>>
[SOGYO_MODE]
#操業条件
# 最小ライン速度チェック周期 [ms]
CHECK_INTERVAL = 1000
# 操業状態判定方法
# 「ライン速度がXmpm以下が、Y回続いた」の場合、低速操業認識。
# 「ライン速度がXmpm以下が、Y回続いた」の場合、ライン停止認識。
# 「ライン速度がXmpmより大きくが、Y回続いた」の場合、低速操業認識。
# 「ライン速度がXmpmより大きくが、Y回続いた」の場合、ライン稼動認識。
#    ※ 条件がかぶった場合は、下の項目に行くほど優先される。
#     ・Xが xxx_MPM。
#     ・Yが xxx_CNT(=最小ライン速度チェック周期で１回) (0で未チェック)

# 0mpmが4秒続いたら、一時停止 (ストップマーク発生)
UpToDown_SLOW_MPM = 5
UpToDown_SLOW_CNT = 10
# 0mpmが10秒続いたら、停止
UpToDown_STOP_MPM = 0
UpToDown_STOP_CNT = 30
# ちょっとでも動いたら即低速操業
DownToUp_SLOW_MPM = 0
DownToUp_SLOW_CNT = 1
# 5mpmより大きければ即ライン稼動認識
DownToUp_RUN_MPM = 5
DownToUp_RUN_CNT = 1
#<<<<<<<<<<<<<=======================================



#=========================================================
# 対プロコン通信 (送受信1ポート：サーバー)
# OPLT  プロコンIP  192.9.202.8		ルーター 192.9.202.246/192.168.10.1(デフォルトGW)   
#       疵検IP      192.168.10.2   送11121  受11221   テスト時は2****
#=========================================================
[TO_PROCON_R]
SAVE_IP	= 192.168.10.2
SAVE_PORT	= 11221

[TO_PROCON_S]
SAVE_IP	= 192.9.202.8
SAVE_PORT	= 11121





#=========================================================
# シーケンサ データメモリ管理
#   UDP接続 (ActQJ71E71UDPを使用)
# -- MXコンポーネント設置用 --
#  PC_NETWORK_NO		: パソコン側(自局) ネットワークNo
#  PC_STATION_NO		: パソコン側(自局) 局番
#  SEQ_NETWORK_NO		: シーケンサ側(他局) ネットワークNo
#  SEQ_STATION_NO		: シーケンサ側(他局) 局番
#  SEQ_CPU_TYPE			: Ver3: CPUタイプ  マニュアル sh080275f.pdf  P53を参照 (10進数で指定すること)
#                                 Ver4: Ver4 sh081083g.pdf  P56を参照
#     CPUタイプ (上が新機種)
#      Q06UDV:211
#      Q06UDEH:146
#      Q06: 35
#      Q02: 34
#
# -- データメモリ領域用 --
#  READADDR  	: 読込エリア開始アドレス
#  WRITEADDR 	: 書込エリア開始アドレス
#=========================================================
[TO_SEQDM]
PC_NETWORK_NO	= 1
PC_STATION_NO	= 2
SEQ_NETWORK_NO	= 1
SEQ_STATION_NO 	= 1
SEQ_CPU_TYPE	= 211
CONNECT_IP		= 192.168.0.2
CONNECT_PORT	= 5001
CONNECT_TIMEOUT	= 5000

READADDR  = D8000
WRITEADDR = D8500




#**************************************************************************************
# 共通タスク 部

#=========================================================
# 機器状態履歴管理
#  MAX_DB_COLUMN_KIKI		：DBのST_HISTORY関係の機器状態の列数 (最大64コ)
#  MAX_DB_COLUMN_TEMP		: DBのST_HISTORY関係の付加情報の列数 (最大64コ)
#=========================================================
[KS_HISTRY]
MAX_DB_COLUMN_KIKI 		= 9
MAX_DB_COLUMN_TEMP 		= 1


#=========================================================
# RPIファイル監視
#
# ----- 共通部 ---------------------------
# INS_NUM  		何個ある (1オリジン。MAX:4)
# CHECK_OK_NUM		過去xコイルを見て、１つもRPIファイルが無ければNG判定 (1〜)
# CYCLE_TIME		チェック周期 [分] ※チェック対象疵検管理Noが変更なければ、チェックしない
#
### 各機能 [**_ID_1･･･] ---------------------------
## 設定
# RPISAVE_INI_PATH	TI_RPISAVEのINIファイル絶対パス(統括IniSettingの中)
# RPISAVE_INS_SEC	TI_RPISAVEセクション名 ([TI_RPISAVE_INS_1])
#
## 機器状態
# ERR_ID		機器ID
# REBOOT_PCNAME 再起動PC名称。空白時再起動無し
#=========================================================
[KT_RPICHK]
INS_NUM 	= 2
CHECK_OK_NUM= 3
CYCLE_TIME	= 5

[KT_RPICHK_ID_1]
RPISAVE_INI_PATH= \\192.9.200.31\C$\OPLT\IniSetting_OPLT\t全長処理表機能 KizuTask.ini
RPISAVE_INS_SEC	= TI_RPISAVE_INS_1
ERR_ID		= 338
#REBOOT_PCNAME=RPIEXEC01


[KT_RPICHK_ID_2]
RPISAVE_INI_PATH= \\192.9.200.31\C$\OPLT\IniSetting_OPLT\t全長処理裏機能 KizuTask.ini
RPISAVE_INS_SEC	= TI_RPISAVE_INS_1
ERR_ID		= 339
#REBOOT_PCNAME=RPIEXEC02



#=========================================================
# 対カメラコントローラー通信
#  ※ メールスロットLineIDで、Unitを切替。(0:全部  1〜:対象ユニットのみ)
#=========================================================
[TO_CAMERA_MAIN]

# カメラコントローラ複数台対応
#  NAME_*		：セッション名となる (インスタンスの名前にもなる) MAX8コ
NAME_1 = TO_CAMERA

[TO_CAMERA]
com=COM4
baud=96
parity=n
data=8
stop=1
to=off
dtr=off
rts=off
idsr=off
octs=off


# フィルタ値 [0.1μs] (未指定時は、0μs) 機器内部デフォルト値10
FILTER = 10
# Hコマンド (初期値0) ※ジッター対策。振幅フレ対策。べき乗で移動平均を取る。0〜5。※0の時には、コマンドも送らない。Hコマンドは追加コマンドのため
COMMAND_H = 0

# 入力チャンネル別のパラメータ指定 (0:なし 1:あり)
#	カメラPLG逓倍率〜カメラPLG位相差までの５項目 が
# 	それぞれ表校正、裏校正、テスト用に存在するか(_O,_U,_T)
PARAM_O = 1
PARAM_U = 1
PARAM_T = 1

#====================================
# カメラリンクスイッチ用
#
# カメラIDとカメラコントローラーの入力CHの紐付け
#   配線ミス時などに指定する (1オリジン) (飛び飛びで指定も可能)
#   CAMID_<スイッチマスタのFPGAボードID>_<連番(1〜8)>
#   INPCH_<スイッチマスタのFPGAボードID>_<連番(1〜8)>
# 例
#   CAMID_0_1 = 1
#   INPCH_0_1 = 2 
#   この場合、カメラID=1の時には A2*****としてカメラコントローラーへ指示される
# 未定義だと、何もしない(= デフォルト値のまま)
#CAMID_0_1 = 1
#CAMID_0_2 = 2
#CAMID_0_3 = 3
#CAMID_0_4 = 4
#CAMID_0_5 = 5
#CAMID_0_6 = 6
#CAMID_0_7 = 7
#CAMID_0_8 = 8

#INPCH_0_1 = 1
#INPCH_0_2 = 2
#INPCH_0_3 = 3
#INPCH_0_4 = 4
#INPCH_0_5 = 5
#INPCH_0_6 = 6
#INPCH_0_7 = 7
#INPCH_0_8 = 8


#=========================================================
# 対カメラリンクスイッチ通信
#
# ### 共通仕様
#  TIMER_CYCLE		：定周期チェックタイマ周期 [秒]
#
# ### 個別仕様
# [タスク名_スイッチFPGAボードID]
#  FPGADIE_TEMP_LIMIT	：FPGAダイ温度上限 [℃]
#  FPGADIE_TEMP_ID	：FPGAダイ温度 ID
#  FPGADIE_TEMP_ST_ID	：FPGAダイ温度状態 ID
#  AMBIENT_TEMP_LIMIT	：周囲温度上限 [℃]
#  AMBIENT_TEMP_ID	：周囲温度 ID
#  AMBIENT_TEMP_ST_ID	：周囲温度状態 ID
#  OPTCLINKx_B_ST_ID	：Opt-C:Link B   ステータス ID (x:1〜4) (※ スイッチFPGAマスタならCH1〜4、スイッチFPGAスレーブならCH5〜6に相当)
#  OPTCLINKx_MF_ST_ID	：Opt-C:Link M/F ステータス ID (x:1〜4) (※ スイッチFPGAマスタならCH1〜4、スイッチFPGAスレーブならCH5〜6に相当)
#=========================================================
[TO_LINKSW]
com=COM3
baud=96
parity=n
data=8
stop=1
to=off
dtr=off
rts=off
idsr=off
octs=off

# 定周期チェックタイマ周期 [秒]
TIMER_CYCLE = 180

# 各ボードのカメラ入力CH(1〜8, 0:無視), 表裏区分(0:表, 1:裏)
# テスト的に画像パラ撮りする時などに使用
# 設定は未使用。DBテーブルのみで設定する。同一カメラをini,DBで指定した場合は、若いCHがマスターとなる。
;FPGA_0_BOARD_1 = 0, 0
;FPGA_0_BOARD_2 = 0, 0
;FPGA_0_BOARD_3 = 0, 0
;FPGA_0_BOARD_4 = 0, 0
;FPGA_0_BOARD_5 = 0, 0
;FPGA_0_BOARD_6 = 0, 0
;FPGA_0_BOARD_7 = 0, 0
;FPGA_0_BOARD_8 = 0, 0
;FPGA_0_BOARD_9 = 0, 0
;FPGA_0_BOARD_10 = 0, 0
;FPGA_0_BOARD_11 = 0, 0
;FPGA_0_BOARD_12 = 0, 0
;FPGA_0_BOARD_13 = 0, 0
;FPGA_0_BOARD_14 = 0, 0
;FPGA_0_BOARD_15 = 0, 0

;FPGA_1_BOARD_1 = 1, 0
;FPGA_1_BOARD_2 = 2, 0
;FPGA_1_BOARD_3 = 3, 0
;FPGA_1_BOARD_4 = 4, 0
;FPGA_1_BOARD_5 = 5, 0
;FPGA_1_BOARD_6 = 0, 0
;FPGA_1_BOARD_7 = 0, 0
;FPGA_1_BOARD_8 = 0, 0
;FPGA_1_BOARD_9 = 0, 0
;FPGA_1_BOARD_10 = 0, 0
;FPGA_1_BOARD_11 = 0, 0
;FPGA_1_BOARD_12 = 0, 0
;FPGA_1_BOARD_13 = 0, 0
;FPGA_1_BOARD_14 = 0, 0
;FPGA_1_BOARD_15 = 0, 0

;FPGA_2_BOARD_1 = 0, 1
;FPGA_2_BOARD_2 = 0, 1
;FPGA_2_BOARD_3 = 0, 1
;FPGA_2_BOARD_4 = 0, 1
;FPGA_2_BOARD_5 = 0, 1
;FPGA_2_BOARD_6 = 0, 1
;FPGA_2_BOARD_7 = 0, 1
;FPGA_2_BOARD_8 = 0, 1
;FPGA_2_BOARD_9 = 0, 1
;FPGA_2_BOARD_10 = 0, 1
;FPGA_2_BOARD_11 = 0, 1
;FPGA_2_BOARD_12 = 0, 1
;FPGA_2_BOARD_13 = 0, 1
;FPGA_2_BOARD_14 = 0, 1
;FPGA_2_BOARD_15 = 0, 1

;FPGA_3_BOARD_1 = 1, 1
;FPGA_3_BOARD_2 = 2, 1
;FPGA_3_BOARD_3 = 3, 1
;FPGA_3_BOARD_4 = 4, 1
;FPGA_3_BOARD_5 = 5, 1
;FPGA_3_BOARD_6 = 0, 1
;FPGA_3_BOARD_7 = 0, 1
;FPGA_3_BOARD_8 = 0, 1
;FPGA_3_BOARD_9 = 0, 1
;FPGA_3_BOARD_10 = 0, 1
;FPGA_3_BOARD_11 = 0, 1
;FPGA_3_BOARD_12 = 0, 1
;FPGA_3_BOARD_13 = 0, 1
;FPGA_3_BOARD_14 = 0, 1
;FPGA_3_BOARD_15 = 0, 1




# スイッチマスタ (スイッチFPGAボードID = 0)
[TO_LINKSW_0]
FPGADIE_TEMP_LIMIT	= 60
FPGADIE_TEMP_ST_ID	= 294
FPGADIE_TEMP_ID		= 298
AMBIENT_TEMP_LIMIT	= 50
AMBIENT_TEMP_ST_ID	= 302
AMBIENT_TEMP_ID		= 306
OPTCLINK1_B_ST_ID	= 310
OPTCLINK2_B_ST_ID	= 311
OPTCLINK3_B_ST_ID	= 312
OPTCLINK4_B_ST_ID	= 313

# スイッチスレーブ (スイッチFPGAボードID = 1)
[TO_LINKSW_1]
FPGADIE_TEMP_LIMIT	= 60
FPGADIE_TEMP_ST_ID	= 295
FPGADIE_TEMP_ID		= 299
AMBIENT_TEMP_LIMIT	= 50
AMBIENT_TEMP_ST_ID	= 303
AMBIENT_TEMP_ID		= 307
OPTCLINK1_B_ST_ID	= 314
OPTCLINK1_B_ST_ID	= 315

# スイッチマスタ (スイッチFPGAボードID = 2)
[TO_LINKSW_2]
FPGADIE_TEMP_LIMIT	= 60
FPGADIE_TEMP_ST_ID	= 296
FPGADIE_TEMP_ID		= 300
AMBIENT_TEMP_LIMIT	= 50
AMBIENT_TEMP_ST_ID	= 304
AMBIENT_TEMP_ID		= 308
OPTCLINK1_B_ST_ID	= 316
OPTCLINK2_B_ST_ID	= 317
OPTCLINK3_B_ST_ID	= 318
OPTCLINK4_B_ST_ID	= 319

# スイッチスレーブ (スイッチFPGAボードID = 3)
[TO_LINKSW_3]
FPGADIE_TEMP_LIMIT	= 60
FPGADIE_TEMP_ST_ID	= 297
FPGADIE_TEMP_ID		= 301
AMBIENT_TEMP_LIMIT	= 50
AMBIENT_TEMP_ST_ID	= 305
AMBIENT_TEMP_ID		= 309
OPTCLINK1_B_ST_ID	= 320
OPTCLINK2_B_ST_ID	= 321





#=========================================================
# 対LED照明装置 (アイテック製 TCP/IP)
#   2分30秒 通信がなければ、LED照明側が回線切断する。PCいきなり死亡対策。
# ### 共通仕様
#  BLOCK		：配光ブロック数　　 CHごとに設定しない場合、この値を用いる(MAX256)
#  TEMP_UNIT 		：LED温度計測点数　　CHごとに設定しない場合、この値を用いる(MAX9)
#  TEMP_THR		：温度閾値 (これ以上はエラーとなる) [度]
#  TEMP_THR_DOWN	：強制OFF温度閾値 (これ以上はエラー+LED消灯となる) [度]
#  TIMER_CYCLE		：温度取り込み周期 [秒]
#  NAME_*		：セッションの末の部分となる (インスタンスの名前にもなる) MAX8コ
# 
# ### 個別仕様
# -装置単位-----------------
#  MEN			：面 (0:表 1:裏)
#  CH_NUM		：管理対象チャンネル数 (最大4CH)
#  CH_START		：先頭チャンネルの片面単位のID(1オリジン)
#  LED_CONNECT_ID	：照明装置 通信状態
#  SAVE_IP		：デフォルト 192.168.0.99
#  SAVE_PORT		：デフォルト 5001
#
# -チャンネル単位-----------------
#   ・高輝度LED（１列に対して複数CH使うLED照明）対応の為、INDEXを追加。
#   　１列に複数CH使う場合、同じINDEXにすることで、１回のメールスロットで
#   　同時にコマンドを投げることが出来る。
#
#   ・配光補正値の展開方向を追加。
#     (通常は、DBから読み出したバイナリ列をDS→WS方向に展開。逆展開するとWS→DS方向になる)
#
# [タスク名_セッション名_CH1]
#  INDEX		：CHに対応するINDEX   定義しない場合、CH番号を使用
#  BLOCK		：配光ブロック数  定義しない場合、共通設定を使用
#  TEMP_UNIT		：LED温度計測点数 定義しない場合、共通設定を使用
#  LR			：配光補正値左右展開(0=そのまま展開、1=逆展開)　定義しない場合、0(そのまま展開)
#  LED_BREAK_ID		：断線
#  LED_HOTWAR_ID	：加熱検出
#  LED_HOTERR_ID	：加熱シャットダウン
#  LED_ONOFF_ID		：LED点灯消灯状態
#  LED_VALNOW_ID	：現在設定輝度値
#  LED_TOTALTIME_ID	：稼動累計時間
#  LED_TEMP_ST_1_ID 	：温度状態 (L,C,R)
#  LED_TEMP_1_ID 	：温度 (L,C,R)
#=========================================================
[KT_LEDMGR]
### BLOCK 		   = 40
### TEMP_UNIT 	   = 3
TEMP_THR           = 50
TEMP_THR_DOWN	   = 70
TIMER_CYCLE        = 120
NAME_1             = TOP_G
NAME_2             = TOP_B
NAME_3      	   = BOT_G
NAME_4      	   = BOT_B

[KT_LEDMGR_TOP_G]
# 基本設定
MEN		= 0
CH_NUM		= 3
CH_START	= 1
LED_CONNECT_ID	= 189
# TCP/IP設定
SAVE_IP		= 192.168.1.101
SAVE_PORT	= 5001

# CH単位 (1:R 2:G(1) 3:G(2)の順)
[KT_LEDMGR_TOP_G_CH1]
INDEX		   = 2
BLOCK		   = 39
TEMP_UNIT	   = 3
LR		   = 0

LED_BREAK_ID       = 190
LED_HOTWAR_ID      = 191
LED_HOTERR_ID      = 192
LED_ONOFF_ID       = 193
LED_VALNOW_ID      = 194
LED_TOTALTIME_ID   = 195

LED_TEMP_ST_1_ID   = 208
LED_TEMP_ST_2_ID   = 209
LED_TEMP_ST_3_ID   = 210
LED_TEMP_1_ID      = 211
LED_TEMP_2_ID      = 212
LED_TEMP_3_ID      = 213

[KT_LEDMGR_TOP_G_CH2]
INDEX		   = 2
BLOCK		   = 39
TEMP_UNIT	   = 0
LR		   = 0

LED_BREAK_ID       = 196
LED_HOTWAR_ID      = 197
LED_HOTERR_ID      = 198
LED_ONOFF_ID       = 199
LED_VALNOW_ID      = 200
LED_TOTALTIME_ID   = 201


[KT_LEDMGR_TOP_G_CH3]
INDEX		   = 2
BLOCK		   = 36
TEMP_UNIT	   = 0
LR		   = 0

LED_BREAK_ID       = 202
LED_HOTWAR_ID      = 203
LED_HOTERR_ID      = 204
LED_ONOFF_ID       = 205
LED_VALNOW_ID      = 206
LED_TOTALTIME_ID   = 207


[KT_LEDMGR_TOP_B]
# 基本設定
MEN		= 0
CH_NUM		= 3
CH_START	= 4
LED_CONNECT_ID	= 214
# TCP/IP設定
SAVE_IP		= 192.168.1.102
SAVE_PORT	= 5001

# CH単位
[KT_LEDMGR_TOP_B_CH1]
INDEX		   = 3
BLOCK		   = 39
TEMP_UNIT	   = 3
LR		   = 0

LED_BREAK_ID       = 215
LED_HOTWAR_ID      = 216
LED_HOTERR_ID      = 217
LED_ONOFF_ID       = 218
LED_VALNOW_ID      = 219
LED_TOTALTIME_ID   = 220

LED_TEMP_ST_1_ID   = 233
LED_TEMP_ST_2_ID   = 234
LED_TEMP_ST_3_ID   = 235
LED_TEMP_1_ID      = 236
LED_TEMP_2_ID      = 237
LED_TEMP_3_ID      = 238

[KT_LEDMGR_TOP_B_CH2]
INDEX			= 3
BLOCK			= 39
TEMP_UNIT		= 0
LR			= 0

LED_BREAK_ID       = 221
LED_HOTWAR_ID      = 222
LED_HOTERR_ID      = 223
LED_ONOFF_ID       = 224
LED_VALNOW_ID      = 225
LED_TOTALTIME_ID   = 226

[KT_LEDMGR_TOP_B_CH3]
INDEX			= 3
BLOCK			= 36
TEMP_UNIT		= 0
LR			= 0

LED_BREAK_ID       = 227
LED_HOTWAR_ID      = 228
LED_HOTERR_ID      = 229
LED_ONOFF_ID       = 230
LED_VALNOW_ID      = 231
LED_TOTALTIME_ID   = 232


[KT_LEDMGR_BOT_G]
# 基本設定
MEN		= 1
CH_NUM		= 3
CH_START	= 1
LED_CONNECT_ID	= 239
# TCP/IP設定
SAVE_IP		= 192.168.1.103
SAVE_PORT	= 5001

# CH単位 (1:R 2:G(1) 3:G(2)の順)
[KT_LEDMGR_BOT_G_CH1]
INDEX		   = 2
BLOCK		   = 36
TEMP_UNIT	   = 3
LR		   = 0

LED_BREAK_ID       = 240
LED_HOTWAR_ID      = 241
LED_HOTERR_ID      = 242
LED_ONOFF_ID       = 243
LED_VALNOW_ID      = 244
LED_TOTALTIME_ID   = 245

LED_TEMP_ST_1_ID   = 258
LED_TEMP_ST_2_ID   = 259
LED_TEMP_ST_3_ID   = 260
LED_TEMP_1_ID      = 261
LED_TEMP_2_ID      = 262
LED_TEMP_3_ID      = 263

[KT_LEDMGR_BOT_G_CH2]
INDEX		   = 2
BLOCK		   = 36
TEMP_UNIT	   = 0
LR		   = 0

LED_BREAK_ID       = 246
LED_HOTWAR_ID      = 247
LED_HOTERR_ID      = 248
LED_ONOFF_ID       = 249
LED_VALNOW_ID      = 250
LED_TOTALTIME_ID   = 251


[KT_LEDMGR_BOT_G_CH3]
INDEX		   = 2
BLOCK		   = 38
TEMP_UNIT	   = 0
LR		   = 0

LED_BREAK_ID       = 252
LED_HOTWAR_ID      = 253
LED_HOTERR_ID      = 254
LED_ONOFF_ID       = 255
LED_VALNOW_ID      = 256
LED_TOTALTIME_ID   = 257


[KT_LEDMGR_BOT_B]
# 基本設定
MEN		= 0
CH_NUM		= 3
CH_START	= 4
LED_CONNECT_ID	= 264
# TCP/IP設定
SAVE_IP		= 192.168.1.104
SAVE_PORT	= 5001

# CH単位
[KT_LEDMGR_BOT_B_CH1]
INDEX		   = 3
BLOCK		   = 36
TEMP_UNIT	   = 3
LR		   = 0

LED_BREAK_ID       = 265
LED_HOTWAR_ID      = 266
LED_HOTERR_ID      = 267
LED_ONOFF_ID       = 268
LED_VALNOW_ID      = 269
LED_TOTALTIME_ID   = 270

LED_TEMP_ST_1_ID   = 283
LED_TEMP_ST_2_ID   = 284
LED_TEMP_ST_3_ID   = 285
LED_TEMP_1_ID      = 286
LED_TEMP_2_ID      = 287
LED_TEMP_3_ID      = 288

[KT_LEDMGR_BOT_B_CH2]
INDEX			= 3
BLOCK			= 36
TEMP_UNIT		= 0
LR			= 0

LED_BREAK_ID       = 271
LED_HOTWAR_ID      = 272
LED_HOTERR_ID      = 273
LED_ONOFF_ID       = 274
LED_VALNOW_ID      = 275
LED_TOTALTIME_ID   = 276

[KT_LEDMGR_BOT_B_CH3]
INDEX			= 3
BLOCK			= 32
TEMP_UNIT		= 0
LR			= 0

LED_BREAK_ID       = 277
LED_HOTWAR_ID      = 278
LED_HOTERR_ID      = 279
LED_ONOFF_ID       = 280
LED_VALNOW_ID      = 281
LED_TOTALTIME_ID   = 282




#=========================================================
# DB容量管理
#---------------------------
# タスク名セッションの中身
# SESSION_1	: セッション情報 (1〜10)
#---------------------------
# 各セッションの中身
# DB_ODBC	: DBセッション名
# DB_TRAN_SIZE_ERR_ID : トランザクションログサイズ増加時の異常機器ID (0時異常判定処理未実施)
# DB_TRAN_ERR_SIZE : トランザクションエラー認識サイズ [MByte]
# TIME_CYCLE	: 定周期実行周期 [分] (0時、チェック無し)
# TIME_SIZECHECK: DB容量チェック周期 [分] (0時、容量チェック無し)
# THREAD_COUNT	: DB容量低下時の削除スレッド数 (0時、容量低下で削除しない)
# DEL_RITU_1	: 削除スレッド実行開始容量 [%-2] (空き容量が指定パーセント以下になるとスレッド実行) (降順)
# 			スレッドの実行数と同じ数にする事
# 			最大9コまでとする。(指定した最後のスレッドが起動時は、ホントに容量がやばいと判断して、全力で消しに行くので注意する事)
#			(0時、チェック無し)
# TIME_MAX_WAIT	: 書込優先時の待ち時間 [ms]
# TIME_MIN_WAIT	: 削除優先時の待ち時間 [ms]
# LOG_SAVEDAY	: ログ保存日数 (0時、LOG_INF削除 実施無し)
# COIL_DEL_COUNT: 1回での削除コイル件数
# COILRESULT_TBL: コイル実績テーブル (疵検管理Noが主キーのテーブルを指定する事)
# COILRESULT_KEY: コイル実績テーブルの主キー (通常疵検管理No)
# COILRESULT_SORT:コイル実績テーブルのソートキー(ASCでソート)(複数工程疵検管理Noが1テーブルに入っているような場合、疵検管理NoではASCソートできない対応) ※未指定なら 従来どおりCOILRESULT_KEY でソート、 (通常は、空白。設定する場合は、登録日付) 
#					※ COILRESULT_SORT が 設定されている場合 (且つ COILRESULT_KEY と異なる場合)、バックアップ削除(最後に削除した疵検管理Noよりも小さいものを全部削除)は、停止
#					   そうしないと、ソートで大きい疵検管理Noが消えた場合、バックアップ削除でそれよりも小さい疵検管理Noが全部消えてしまうため
# 
#### 拡張
# ZI_1		: コイル実績の疵検管理Noを消す時に、一緒に消えていくテーブル (容量により削除) (1〜無限)		
# 			テーブル名, 主キー, サブキー(通常,疵No or ""), 一回の削除件数(0だと疵検管理No全部)
#  
# TI_1		: 日付で管理しているテーブル (定周期により削除) (1〜無限)
# 			テーブル名, 日付列(通常,登録日付), 保存日数
#
# CI_1		: 主キーの件数で管理しているテーブル (定周期により削除) (1〜無限)
#			テーブル名, 主キー, サブキー(通常,疵No or ""), 一回の削除件数(0だと対象全部), 保存上限数
#=========================================================
[TI_DELETE]
SESSION_1 = TI_DELETE_A
SESSION_2 = TI_DELETE_B

# 統合サーバー取得事後仕様 ------>>>
# 無害Gr 削除スレッド実行数(1〜9) (0のときは、以降一切無処理)
LOWGR_THREAD_COUNT = 2

# 何日以前のデータを強制削除するか [日] (0のときは、強制削除しない)
LOWGR_DELEDAY = 0
# 一覧テーブルのチェック周期 [分]
LOWGR_CYCLE = 30


##############################################
# 一覧テーブルから削除対象キー取得SQL (削除対象主キーを昇順で一覧取得)
# 無害Gr削除後の一覧テーブル更新SQL (WHERE句には削除した主キーがセットされる) ※ 無くてもOK
### 	登録日付<current_timestamp-3  の場合、3日経過したコイルを対象に 期間対象の疵を削除
###
SQL_SELECT_KEY = "SELECT 管理No FROM T_COIL_RESULT WHERE 期間Gr削除区分 IS NULL AND    登録日付<current_timestamp-7    ORDER BY 管理No ASC"

SQL_SELECT_END = "UPDATE T_COIL_RESULT SET 期間Gr削除区分=1 WHERE 管理No='%s'"
##############################################

# テーブル設定 (いろんなところで使用)
COILRESULT_TBL 	= T_COIL_RESULT
COILRESULT_TIME = 登録日付
MAINKEY_NAME 	= 管理No
SUBKEY_NAME 	= 疵No

# 無害Gr削除メイン
# KEY :(通常DEFECT_INF)		テーブル名, 対象抽出WHERE句(単純にAddするだけなのでAND等はつけること)
# SUB :( TBL_SUB_[KEYに紐付く]_[1からの連番] )	テーブル名 (主キー,サブキーはﾒｲﾝと同じ)
TBL_KEY_1	= "T_DEFECT_INF_T, AND 期間削除対象Gr=1"
TBL_KEY_2	= "T_DEFECT_INF_B, AND 期間削除対象Gr=1"
TBL_SUB_1_1 = T_DEFECT_IMG_T
TBL_SUB_1_2 = T_DEFECT_ATTR0_T
TBL_SUB_1_3 = T_DEFECT_ATTR1_T
TBL_SUB_1_4 = T_DEFECT_ATTR2_T
TBL_SUB_1_5 = T_DEFECT_ATTR3_T
TBL_SUB_1_6 = T_DEFECT_ATTR4_T
TBL_SUB_2_1 = T_DEFECT_IMG_B
TBL_SUB_2_2 = T_DEFECT_ATTR0_B
TBL_SUB_2_3 = T_DEFECT_ATTR1_B
TBL_SUB_2_4 = T_DEFECT_ATTR2_B
TBL_SUB_2_5 = T_DEFECT_ATTR3_B
TBL_SUB_2_6 = T_DEFECT_ATTR4_B
# <<<--------------------


# デフラグ実行仕様 ------>>>
# デフラグ経過日。この間隔以上空いたときにデフラグ実行 (0のときは、未実行)
DEFRAG_INTERVAL_DAY = 7

# デフラグ実行可=1, 不可=0となるように単項目のSQL文。※ 操業状態の停止、休止で実行1。
SQL_DEFRAG_RUN = "SELECT (CASE 機器状態 WHEN 2 THEN 0 ELSE 1 END) FROM M_STATUS_INF WHERE 機器ID=326"
# <<<--------------------


[TI_DELETE_A]
DB_ODBC = DB_A
DB_TRAN_SIZE_ERR_ID = 328
DB_TRAN_ERR_SIZE = 200000
TIME_CYCLE = 10
TIME_SIZECHECK = 5
THREAD_COUNT = 3
DEL_RITU_1 = 600
DEL_RITU_2 = 300
DEL_RITU_3 = 200
TIME_MAX_WAIT = 3000
TIME_MIN_WAIT = 100
LOG_SAVEDAY = 180
COIL_DEL_COUNT = 20
COILRESULT_TBL = T_COIL_RESULT
COILRESULT_KEY = 管理No
COILRESULT_SORT = 

#### 拡張
## コイル実績の疵検管理Noを消す時に、一緒に消えていくテーブル達
# テーブル名, 主キー, サブキー(通常,疵No or ""), 一回の削除件数(0だと疵検管理No全部)
ZI_1	= T_COIL_INF, 		管理No,	,		0
ZI_2	= T_CULL_IMG,		管理No,	,		0
ZI_3	= T_COIL_TRAND,		管理No,	,		0

ZI_4	= T_DEFECT_INF_T,	管理No,	疵No,		5000
ZI_5	= T_DEFECT_IMG_T,	管理No,	疵No,		1000
ZI_6	= T_DEFECT_ATTR0_T,	管理No,	疵No,		2000
ZI_7	= T_DEFECT_ATTR1_T,	管理No,	疵No,		2000
ZI_8	= T_DEFECT_ATTR2_T,	管理No,	疵No,		2000
ZI_9	= T_DEFECT_ATTR3_T,	管理No,	疵No,		2000
ZI_10	= T_DEFECT_ATTR4_T,	管理No,	疵No,		2000
ZI_11	= T_DEFECT_INF_B,	管理No,	疵No,		5000
ZI_12	= T_DEFECT_IMG_B,	管理No,	疵No,		1000
ZI_13	= T_DEFECT_ATTR0_B,	管理No,	疵No,		2000
ZI_14	= T_DEFECT_ATTR1_B,	管理No,	疵No,		2000
ZI_15	= T_DEFECT_ATTR2_B,	管理No,	疵No,		2000
ZI_16	= T_DEFECT_ATTR3_B,	管理No,	疵No,		2000
ZI_17	= T_DEFECT_ATTR4_B,	管理No,	疵No,		2000

ZI_18	= T_SEND_NAS,		管理No,	,		0


## 日付で管理しているテーブル
# テーブル名, 日付列(通常,登録日付), 保存日数
TI_1	= T_ST_HISTORY_INF,	登録日付,	400
TI_2	= T_STATUS_LOG,		登録日付,	90

TI_3	= BUF_PRO_R_COILINF,登録日付,	30



[TI_DELETE_B]
DB_ODBC = DB_B
DB_TRAN_SIZE_ERR_ID = 329
DB_TRAN_ERR_SIZE = 200000
TIME_CYCLE = 10
TIME_SIZECHECK = 5
THREAD_COUNT = 2
DEL_RITU_1 = 1000
DEL_RITU_2 = 400
TIME_MAX_WAIT = 3000
TIME_MIN_WAIT = 100
LOG_SAVEDAY = 180
COIL_DEL_COUNT = 20
COILRESULT_TBL = T_COIL_RESULT
COILRESULT_KEY = 管理No
COILRESULT_SORT = 

#### 拡張
## コイル実績の疵検管理Noを消す時に、一緒に消えていくテーブル達
# テーブル名, 主キー, サブキー(通常,疵No or ""), 一回の削除件数(0だと疵検管理No全部)
ZI_1	= T_COIL_INF, 		管理No,	,		0
ZI_2	= T_CULL_IMG,		管理No,	,		0
ZI_3	= T_COIL_TRAND,		管理No,	,		0

ZI_4	= T_DEFECT_INF_T,	管理No,	疵No,		5000
ZI_5	= T_DEFECT_IMG_T,	管理No,	疵No,		1000
ZI_6	= T_DEFECT_ATTR0_T,	管理No,	疵No,		2000
ZI_7	= T_DEFECT_ATTR1_T,	管理No,	疵No,		2000
ZI_8	= T_DEFECT_ATTR2_T,	管理No,	疵No,		2000
ZI_9	= T_DEFECT_ATTR3_T,	管理No,	疵No,		2000
ZI_10	= T_DEFECT_ATTR4_T,	管理No,	疵No,		2000
ZI_11	= T_DEFECT_INF_B,	管理No,	疵No,		5000
ZI_12	= T_DEFECT_IMG_B,	管理No,	疵No,		1000
ZI_13	= T_DEFECT_ATTR0_B,	管理No,	疵No,		2000
ZI_14	= T_DEFECT_ATTR1_B,	管理No,	疵No,		2000
ZI_15	= T_DEFECT_ATTR2_B,	管理No,	疵No,		2000
ZI_16	= T_DEFECT_ATTR3_B,	管理No,	疵No,		2000
ZI_17	= T_DEFECT_ATTR4_B,	管理No,	疵No,		2000

ZI_18	= T_SEND_NAS,		管理No,	,		0


## 日付で管理しているテーブル
# テーブル名, 日付列(通常,登録日付), 保存日数
TI_1	= T_ST_HISTORY_INF,	登録日付,	400
TI_2	= T_STATUS_LOG,		登録日付,	90

TI_3	= BUF_PRO_R_COILINF,登録日付,	30





#=========================================================
# DB同期管理
#---------------------------
# タスク名セッションの中身
## SESSION_1	: セッション情報 (1〜) [セッション名, TYPE]
# 		   TYPE : このセッションの動作定義 (同一タイプの最大登録数10個)
#     		0 ･･･ マスターの同期  (初期時)
#				TBLの形式１：テーブル名
#			1 ･･･ 実績の追加コピー (先テーブルの最新をキーに、それ以降の元テーブルのデータを先テーブルにコピー)
#				TBLの形式１：テーブル名,  1回の追加件数,  主キー1(必須),  主キー2(空白可),  主キー3(空白可)
#			2 ･･･ 実績の移動
#				TBLの形式１：テーブル名,  1回の移動件数,  主キー1(必須),  主キー2(空白可)
#			3 ･･･ 実績の完全同期 (双方のテーブルで、キーが無い項目を補間しあう)  (初期時,A→Bにデータがコピー)
#				TBLの形式１：テーブル名,  1回の追加件数,  主キー1(必須),  主キー2(空白可),  主キー3(空白可)
#---------------------------
# 各セッションの中身
# DB_ODBC_A	: DBセッション名
# DB_ODBC_B	: DBセッション名
# LINK_PATH_AB	: A系のDBに定義されているリンクサーバー経由でB系アクセスする時のパス "[リンクサーバー名].データベース名.dbo."
# LINK_PATH_BA	: B系のDBに定義されているリンクサーバー経由でA系アクセスする時のパス "[リンクサーバー名].データベース名.dbo."
#   通常の定周期実行時は、 A→Bの流れでデータが処理される
#   このタスクを使用する場合は、必ずDBのリンクサーバーの定義をする事。
#    ・A系には、B系のサーバーを追加。B系には、A系のサーバーを追加する事。
#    ・リンクサーバーの定義は、 プロパイダ[SQL Native Client、Microsoft OLE DB Pro…SQLServer]
#				製品名[mySQLServer]    データソース[IPアドレス]   カタログ[DB名]   セキュリティでログイン名とパスを設定する事
#
# TIME_FAST	: 初期実行までの時間 (0:定周期無し) [分]
# TIME_INTERVAL	: ２回目以降の実行周期 [分]
# MAIL_KEY	: メールスロット受信時に第2引数と一致した場合、強制的に実行される。 (0:未実施)
# T_1		: テーブル名 (最大50テーブル)
#
# FACT_KS_EQALDB_01の起動受信時
#     data[0]   0:A→B    1:B→A
#     data[1]  任意の値 (0:無視  1〜:MAIL_KEYと一致した場合、強制的に実行される。
#
#---------------------------
#リンクサーバー定義	(A系のDBにはB系にアクセスするために定義を設定させる)
# [LINKSRV_1]		1〜の連番
# SELECT_ODBC_KEY	追加対象のODBCキー
# LINK_NAME		リンクサーバー名
# DBADDLESS		: DB接続アドレス
# DSNAME		: SQLServerのDB名称
# USERID		: ユーザー名
# PASSWORD		: パスワード
# SRVPRODUCT		製品名 (mySQLServer)固定
# PROVIDER		プロバイダ (SQLServer2005=SQLNCLI。SQLServer2008=SQLNCLI10。SQLServer2014=SQLNCLI11)
#=========================================================
[KS_EQALDB]
SESSION_1 = KS_EQALDB_EQAL, 0
#SESSION_2 = KS_EQALDB_MOVE, 2

#リンクサーバー定義
[LINKSRV_1]
SELECT_ODBC_KEY = DB_A
LINK_NAME		= BACKUP
DBADDLESS		= 192.9.200.32
DSNAME			= DATABASE_OPLT
USERID			= sa
PASSWORD		= vz
SRVPRODUCT		= mySQLServer
PROVIDER		= SQLNCLI11

[LINKSRV_2]
SELECT_ODBC_KEY = DB_B
LINK_NAME		= TOKATU
DBADDLESS		= 192.9.200.31
DSNAME			= DATABASE_OPLT
USERID			= sa
PASSWORD		= vz
SRVPRODUCT		= mySQLServer
PROVIDER		= SQLNCLI11

[KS_EQALDB_EQAL]
DB_ODBC_A	= DB_A
DB_ODBC_B	= DB_B
LINK_PATH_AB	= [BACKUP].DATABASE_OPLT.dbo.
LINK_PATH_BA	= [TOKATU].DATABASE_OPLT.dbo.
TIME_FAST	= 1440
TIME_INTERVAL	= 60
MAIL_KEY	= 1

# マスター同期対象テーブル
T_1	= M_STATUS_MASTER
T_2	= M_STATUS_INF
T_3	= M_LOG_MASTER
T_4	= M_PC_MASTER
T_5	= M_PC_INF
T_6	= M_ST_HISTORY_MASTER
T_7 = M_BASE_ACTION_MASTER
T_8	= M_COMMON_MASTER

T_9		= TYPE_NAME
T_10	= GRADE_NAME
T_11	= M_SCODE_MASTER
T_12	= M_SCODE_JUDGE
T_13	= M_PCODE_MASTER
T_14	= M_PCODE_JUDGE
T_15	= M_PCODE_OUTPUT
T_16	= M_CAMERA_LINKSWITCH
T_17	= M_PAR_GRID_SETTING
T_18	= M_PAR_LOV_ITEM
T_19	= M_HT_ENABLE

T_20	= ATTR_NAME
T_21	= PARAM_COMMON
T_22	= PARAM_SCODE
T_23	= PARAM_CAMSET
T_24	= PARAM_CAMSET_SCODE
T_25	= PARAM_CAMSET_ANGLE
T_26	= PARAM_CAMANGLE_SCODE
T_27	= PARAM_CAMSET_ANGLE_SCODE
T_28	= PCINFO_DESC


#**************************************************************************************
# 統括機能外
#**************************************************************************************
#=========================================================
# 表示管理
# IMAGE_PATH        : 探傷画面表示用の切り出し画像格納パス (最後の\不要)
# CULL_PATH         : 探傷画面表示用の間引き全長画像格納パス (最後の\不要)
# CULL_PATH_REMOTE  : 統括PC上の間引き全長画像格納パス (ベースフォルダまだ) (最後の\不要)
# SAVE_IP           : 疵実績情報送信PCのIPアドレス
# SAVE_PORT         : 受信ポート
#=========================================================
[HY_DEFECT]
IMAGE_PATH = D:\IMG
SAVE_IP	   = 192.9.200.31
SAVE_PORT  = 10002

CULL_PATH  = D:\CULL
CULL_PATH_REMOTE = \\192.9.200.31\C$\IMG_CULL_TEMP



#===============================================================================
#   探傷画面設定値
#===============================================================================
#[HY_TANSHO](探傷画面共通設定)
#   FROM_TOTAL_NUM          :出力総画面数               (1〜:探傷画面ウィンドウの出力数)
#   STATUS_INTERVAL         :ステータス更新秒数         (0〜:探傷画面上ステータス欄の更新間隔)
#   AUTO_START_INTERVAL     :自動送り開始秒数           (0〜:新規板表示〜自動送り開始までの秒数)
#   IMAGE_WIDTH             :画像100pixel横幅設定       (1〜:100pixel横幅を指定[mm])
#   SYNC_MODE               :同期モード                 (0:全ての画面を同期、1:検査台毎に動作、2:同期無し)
#   DSP_ZENTYO_FUNC         :全長画像表示機能           (1:有効、0:無効)
#===============================================================================
#[HY_TANSHO_FORMn](探傷画面個別設定 : n=1以上)
#   FROM_POS_NUM            :画面位置番号               (1〜:HY_TANSHO_FORMnまで表示)
#   FROM_MEN_NUM            :表示表裏面番号             (0:表面、1:裏面) 
#   KENSA_NUM               :検査台番号                 (0〜:検査台番号 ポインタ情報テーブル参照番号)
#   KENSA_NAME              :検査台名称                 (検査台名称)
#   MAP_SCROLL_DIRECT       :疵マップ進行方向           (0:下から上、1:上から下)
#   MAP_VIEW_DIRECT         :疵マップ表示欄側           (0:左がDS、1:左がWS)
#   MAP_CELL_DIRECT         :疵マップセル側             (0:疵マップの左右反転無し、1:疵マップの左右反転有り)
#   IMAGE_VIEW_DIRECT       :疵画像の表示欄反転         (0:左がDS、1:左がWS)
#   IMAGE_TOP_BOTTOM_INF    :疵画像の上下反転           (0:反転無し、1:反転有り)
#   IMAGE_SIDE_INF          :疵画像の右左反転           (0:反転無し、1:反転有り)
#   ZENTYO_TOP_BOTTOM_INF   :全長画像の上下反転         (0:反転無し、1:反転有り)
#   ZENTYO_SIDE_INF         :全長画像の右左反転         (0:反転無し、1:反転有り)
#   ZENTYO_VIEW_DIRECT      :全長画像の表示欄反転       (0:左がDS、1:左がWS)
#   ZENTYO_X_SCALE_OFFSET  : 全長画像のX軸メモリ基準位置(0mmの位置)[pixel] ※右端からの位置(0〜250pixcl)
#   ZENTYO_Y_SCALE_POS     : 全長画像のY軸メモリ表示位置(0:左端表示、1:右端表示)
#   TAB_DSPTYPE_INF         :表示タイプタブ設定         (1:マップ表示、2:全長画像表示)
#===============================================================================
[HY_TANSHO]
FROM_TOTAL_NUM      = 1
STATUS_INTERVAL     = 1000
AUTO_START_INTERVAL = 10000
IMAGE_WIDTH         = 25
SYNC_MODE           = 0
DSP_ZENTYO_FUNC     = 1

[HY_TANSHO_FORM1]
FROM_POS_NUM            = 1
FROM_MEN_NUM            = 0
KENSA_NUM               = 0
KENSA_NAME              = 検査室
MAP_SCROLL_DIRECT       = 1
MAP_VIEW_DIRECT         = 0
MAP_CELL_DIRECT         = 0
IMAGE_VIEW_DIRECT       = 0
IMAGE_TOP_BOTTOM_INF    = 0
IMAGE_SIDE_INF          = 0
ZENTYO_TOP_BOTTOM_INF   = 0
ZENTYO_SIDE_INF         = 0
ZENTYO_VIEW_DIRECT      = 0
ZENTYO_X_SCALE_OFFSET   = 125
ZENTYO_Y_SCALE_POS      = 0
TAB_DSPTYPE_INF         = 1

#=========================================================
# 操作画面
#   RAS_TIMER              : RAS画面 DB読み込み周期[msec]
#   SYUKUTAI_TIMER         : 縮退状態画面 DB読み込み周期[msec]
#   SEARCH_TIMEOUT_SEC     : 実績画面 検索 コマンド実行タイムアウト時間[検索用(単位：秒)]
#
#   MAP_BASE_POSITION      : 実績画面 疵マップ表示位置(画面配置)    (0:左が表面、1:左が裏面)
#   DEFECT_BASE_POSITION   : 実績画面 疵情報・疵画像位置(画面配置)  (0:上が表面、1:上が裏面)
#   DSP_ZENTYO_FUNC        : 全長画像表示機能                       (1:有効、0:無効)
#
#   MAP_SCROLL_DIRECT      : 実績画面 マップ進行方向                (0:下から上、1:上から下)
#   MAP_VIEW_DIRECT_O      : 実績画面 表面 疵マップ表示側           (0:左がDS、1:左がWS)
#   MAP_CELL_DIRECT_O      : 実績画面 表面 疵マップセル側           (0:疵マップの左右反転無し、1:疵マップの左右反転有り)
#   IMAGE_VIEW_DIRECT_O    : 実績画面 表面 疵画像の表示欄反転       (0:左がDS、1:左がWS)
#   IMAGE_TOP_BOTTOM_INF_O : 実績画面 表面 疵画像の上下反転         (0:反転無し、1:反転有り)
#   IMAGE_SIDE_INF_O       : 実績画面 表面 疵画像の右左反転         (0:反転無し、1:反転有り)
#   MAP_VIEW_DIRECT_U      : 実績画面 裏面 疵マップ表示側           (0:左がDS、1:左がWS)
#   MAP_CELL_DIRECT_U      : 実績画面 裏面 疵マップセル側           (0:疵マップの左右反転無し、1:疵マップの左右反転有り)
#   IMAGE_VIEW_DIRECT_U    : 実績画面 裏面 疵画像の表示欄反転       (0:左がDS、1:左がWS)
#   IMAGE_TOP_BOTTOM_INF_U : 実績画面 裏面 疵画像の上下反転         (0:反転無し、1:反転有り)
#   IMAGE_SIDE_INF_U       : 実績画面 裏面 疵画像の右左反転         (0:反転無し、1:反転有り)
#   IMAGE_WIDTH            : 実績画面 切り出し画像100pixel横幅設定  (1 〜 :100pixel横幅を指定[mm])
#   ZENTYO_TOP_BOTTOM_INF  : 全長画像の上下反転                     (0:反転無し、1:反転有り)
#   ZENTYO_SIDE_INF        : 全長画像の右左反転                     (0:反転無し、1:反転有り)
#   ZENTYO_VIEW_DIRECT     : 全長画像の表示欄反転                   (0:左がDS、1:左がWS)
#   ZENTYO_Y_SCALE_POS     : 全長画像のY軸メモリ表示位置            (0:左端表示、1:右端表示)
#
#   DEFMAP_UP_TOP          : 疵散布図画面 表面 長手方向に対して、上下反転 (0:反転無し、1:反転有り)
#   DEFMAP_UP_BOT          : 疵散布図画面 裏面 長手方向に対して、上下反転 (0:反転無し、1:反転有り)
#   DEFMAP_SIDE_TOP        : 疵散布図画面 表面 長手縦方向表示時、左右反転 (0:反転無し、1:反転有り)
#   DEFMAP_SIDE_BOT        : 疵散布図画面 裏面 長手縦方向表示時、左右反転 (0:反転無し、1:反転有り)
#   DEFMAP_SIDE_TOP_HORZ   : 疵散布図画面 表面 長手横方向表示時、左右反転 (0:反転無し、1:反転有り)
#   DEFMAP_SIDE_BOT_HORZ   : 疵散布図画面 裏面 長手横方向表示時、左右反転 (0:反転無し、1:反転有り)
#
#   DISP_TOP_FLG           : 最前面   画面表示設定       (0:通常、1:最前面表示)
#=========================================================
[SO_GAMENN]
RAS_TIMER              = 1000
SYUKUTAI_TIMER         = 5000
SEARCH_TIMEOUT_SEC     = 60

MAP_BASE_POSITION      = 0
DEFECT_BASE_POSITION   = 0
DSP_ZENTYO_FUNC        = 1

MAP_SCROLL_DIRECT      = 0
MAP_VIEW_DIRECT_O      = 0
MAP_CELL_DIRECT_O      = 0
IMAGE_VIEW_DIRECT_O    = 0
IMAGE_TOP_BOTTOM_INF_O = 0
IMAGE_SIDE_INF_O       = 0
MAP_VIEW_DIRECT_U      = 0
MAP_CELL_DIRECT_U      = 0
IMAGE_VIEW_DIRECT_U    = 0
IMAGE_TOP_BOTTOM_INF_U = 0
IMAGE_SIDE_INF_U       = 0
IMAGE_WIDTH            = 25
ZENTYO_TOP_BOTTOM_INF  = 0
ZENTYO_SIDE_INF        = 0
ZENTYO_VIEW_DIRECT     = 0
ZENTYO_Y_SCALE_POS     = 0

DEFMAP_UP_TOP          = 0
DEFMAP_UP_BOT          = 0
DEFMAP_SIDE_TOP        = 0
DEFMAP_SIDE_BOT        = 0
DEFMAP_SIDE_TOP_HORZ   = 0
DEFMAP_SIDE_BOT_HORZ   = 0

DISP_TOP_FLG           = 0

#=========================================================
# パラメータ設定画面
# PASSCHK_UMU  : パスワード設定実施有無(0:パスワード無し、設定可 -1:パス無し、設定不可  1:パス有り、設定可)
# PASSWORD	   : 設定値変更用 パスワード
#=========================================================
[KA_PARSET]
PASSCHK_UMU = 0
PASSWORD = kizu

