#////////////////////////////////////////////////////////////////////
# 機能単位の設定ファイル
#  ※ 名前の付け方 [t統括機能 kizuTask.ini]
#////////////////////////////////////////////////////////////////////

#**************************************************************************************
# ライブラリ使用 部
#**************************************************************************************
#=========================================================
# データベース情報
#  DBADDLESS	: DB接続アドレス (VBでしか使用しない)
#  ODBCNAME	: ODBCの名称 (C のみ使用)
#  DSNAME	: SQLServerのDB名称(VB のみ使用)
#  USERID	: ユーザー名
#  PASSWORD	: パスワード
#=========================================================
# オンライン実行中DB
[DB]
DBADDLESS=192.9.200.33
#DBADDLESS=192.9.200.216\vz2005
ODBCNAME =DATABASE_N4PL_C
DSNAME   =DATABASE_N4PL_C
USERID   =sa
PASSWORD =vz
# A系DB
[DB_A]
DBADDLESS= 192.9.200.33
ODBCNAME = DATABASE_N4PL_C
DSNAME   = DATABASE_N4PL_C
USERID   = sa
PASSWORD = vz
# B系DB
[DB_B]
DBADDLESS= 192.9.200.32
ODBCNAME = DATABASE_N4PL_Csub
DSNAME   = DATABASE_N4PL_C
USERID   = sa
PASSWORD = vz


#=========================================================
#　前工程DB情報
#=========================================================
# 熱延疵検DB (新タイプ)
[DB_HOT]
DBADDLESS= 10.25.31.7
ODBCNAME = DATABASE_HOT
DSNAME   = DATABASE_NHOT
USERID   = sa
PASSWORD = nsc
IPADDLESS= 10.25.31.7
# 熱延疵検DB (旧タイプ) ※ いずれ削除予定
[DB_HOT_OLD]
DBADDLESS= 10.25.31.91
ODBCNAME = DATABASE_HOT_OLD
DSNAME   = HOT_DATABASE
USERID   = sa
PASSWORD = nsc
IPADDLESS= 10.25.31.91

#=========================================================
#　他所用共通DB情報
#=========================================================
# 広畑HOT
[DB_HHOT]
DBADDLESS= 10.25.129.62
ODBCNAME = DATABASE_HHOT
DSNAME   = DATABASE_HHOT
USERID   = sa
PASSWORD = nsc
IPADDLESS= 10.25.129.62

#=========================================================
#　統合サーバーDB情報
#=========================================================
# 熱延疵検DB (新タイプ)
[DB_HOT_SHARE]
DBADDLESS= 10.25.129.62
ODBCNAME = DATABASE_HOT_SHARE
DSNAME   = DATABASE_NHOTMAKI
USERID   = sa
PASSWORD = nsc
IPADDLESS= 10.25.129.62

# 熱延疵検DB (旧タイプ) ※ いずれ削除予定
[DB_HOT_OLD_SHARE]
DBADDLESS= 10.25.129.62
ODBCNAME = DATABASE_HOT_OLD_SHARE
DSNAME   = HOT_DATABASE
USERID   = sa
PASSWORD = nsc
IPADDLESS= 10.25.129.62

#=========================================================
# 共通設定
#  LINEID	: ライン区分(コンパイル無しでタスクの切替等で使用可能) (0:3CPL)
#  NOA		: NOA接続フラグ (0:オンライン  1:遠隔  -1:解析用  9:デバック)
#=========================================================
[COMMON]
LINEID = 0
NOA = 9

#=========================================================
# 機器ID定義
#  各機能での機器IDを定義 (共通支援機能での機器IDは除く)
#=========================================================
[STATUS]
# 判定PC01応答無し
HANTEI_ANS_1_ID = 111
HANTEI_ANS_2_ID = 112
HANTEI_ANS_3_ID = 113
HANTEI_ANS_4_ID = 114
HANTEI_ANS_5_ID = 115
HANTEI_ANS_6_ID = 116
HANTEI_ANS_7_ID = 117
HANTEI_ANS_8_ID = 118
HANTEI_ANS_9_ID = 119
HANTEI_ANS_10_ID = 120

# 判定PC 異常発生（バックアップも不可能）
HANTEI_TOP_ANS_ID = 121
HANTEI_BOT_ANS_ID = 122
CYCLE_TOP_ANS_ID = 123
CYCLE_BOT_ANS_ID = 124

# カメラ温度状態
CAM_TEMPSTATE_1_1_ID = 133
CAM_TEMPSTATE_2_1_ID = 134
CAM_TEMPSTATE_3_1_ID = 135
CAM_TEMPSTATE_4_1_ID = 136
CAM_TEMPSTATE_5_1_ID = 137
CAM_TEMPSTATE_6_1_ID = 138
CAM_TEMPSTATE_7_1_ID = 139
CAM_TEMPSTATE_8_1_ID = 140

# カメラ温度
CAM_TEMP_1_1_ID = 141
CAM_TEMP_2_1_ID = 142
CAM_TEMP_3_1_ID = 143
CAM_TEMP_4_1_ID = 144
CAM_TEMP_5_1_ID = 145
CAM_TEMP_6_1_ID = 146
CAM_TEMP_7_1_ID = 147
CAM_TEMP_8_1_ID = 148


# ライン稼動時の照明OFF
LED_RUNOFF_1_ID = 289
LED_RUNOFF_2_ID = 290


# カメラリンクスイッチ
CAMCONTROL_ID = 304
CAMSWITCH_ID = 305


# カウンターボード
BOOD_CNT_ID = 314
# PIOボード
BOOD_PIO_ID = 315

# 各種状態
DIV_KADOU_ID = 316
DIV_UNTEN_ID = 317
DIV_SOGYO_ID = 318
DIV_PLGMODE_ID = 319

# 検査開始１本目
COIL_INIT_ID = 320
COIL_RESTART_ID = 321

# コイル情報無し
COIL_KEN_ID = 322
COIL_DSP_ID = 323
# コイル長異常
MAXLEN_KEN_ID = 324
MAXLEN_DSP_ID = 325

# 画像書き込み失敗
BCP_ERR_ID = 328

# 検査実績保存上限
DB_SAVE_MAX_1_ID = 329
DB_SAVE_MAX_2_ID = 330
# 検査実績保存スキップ
DB_SAVE_SKIP_1_ID = 331
DB_SAVE_SKIP_2_ID = 332
# 未検査区間
FRAME_SKIP_1_ID = 333
FRAME_SKIP_2_ID = 334
# エッジ不正
EDGE_NG_1_ID = 335
EDGE_NG_2_ID = 336

# プロコン通信
PROCON_ID = 337
# FF通信
FFSERV_ID = 338
# FFサーバーイニシャル中
FF_CONNECT_ERR_ID = 339
# 対シーケンサ通信
DATAMEM_SEQ_ID = 340
DATAMEM_HB_ID = 341
PIOSEQ_HB_ID = 342
# 通板中情報
LINE_CNO_ID = 343
LINE_LEN_ID = 344
LINE_ZANLEN_ID = 345
LINE_SPEED_ID = 346

# プロコン長補正率
HOSEIRITU_ID = 347
# 表面圧縮全長画像保存異常
SAVE_RPI_1_ERR_ID = 348
SAVE_RPI_2_ERR_ID = 349

# カメラ台車位置情報
DAISYA_1_ID = 350
DAISYA_2_ID = 351

# エアドライア
AIR_BLOW_1_ID = 377

# カメラリンクスイッチ
CAMLINKSW_ANS_ID = 378


#=========================================================
# 共有メモリ情報 (1〜50まで)
#  MEM1_NAME	: 共有メモリ名
#  MEM1_SIZE	: サイズ
#=========================================================
[MEM]
#MEM1_NAME = TBL_TO_COIL
#MEM1_SIZE = 6144
#MEM2_NAME = TBL_TO_SEQMEM
#MEM2_SIZE = 512
#MEM3_NAME = TBL_TO_CAMERA
#MEM3_SIZE = 1024
MEM11_NAME = TBL_TO_COIL
MEM11_SIZE = 6144
MEM12_NAME = TBL_TO_SEQMEM
MEM12_SIZE = 512
MEM13_NAME = TBL_TO_CAMERA
MEM13_SIZE = 512

# 表示機能もテストするために定義しておく
MEM1_NAME = TBL_HY_STATUS
MEM1_SIZE = 2048
MEM2_NAME = TBL_HY_POINT
MEM2_SIZE = 4096
MEM3_NAME = TBL_HY_COILINF
MEM3_SIZE = 20480
MEM4_NAME = TBL_HY_COILRESULT
MEM4_SIZE = 10240
MEM5_NAME = TBL_HY_MAP_COLROW
MEM5_SIZE = 155232000
MEM6_NAME = TBL_HY_MAP_ROW
MEM6_SIZE = 16128000
MEM7_NAME = TBL_HY_DEFECTINF
MEM7_SIZE = 358400252
MEM8_NAME = TBL_HY_ALARM
MEM8_SIZE = 2048
MEM9_NAME = TBL_HY_MAE_MAP
MEM9_SIZE = 8064028
MEM10_NAME = TBL_HY_MAE_INF
MEM10_SIZE = 8848056


#=========================================================
# プロセス情報 (1〜50まで)
#  TASK1	: 起動タスク名, 起動プロセス(0:通常 1:最小化 2:最大化 3:非表示), ホントの起動EXE名称(起動タスク名と同じなら無しでOK)
#=========================================================
[EXECUTE]
TASK1=KS_SYSLOG, 1
TASK2=KS_EVTLOG, 1
TASK3=KS_HDDCHK, 1, KS_HDDCHKx64
TASK4=KS_HISTRY, 1
TASK5=KS_EQALDB, 1
TASK6=KT_LEDMGR, 1
TASK7=KT_CHILER, 1
TASK8=KT_TEMPMT, 1
TASK9=TI_DELETE, 1
TASK10=TO_CAMERA, 1
TASK11=TO_LINKSW, 1
TASK12=KT_RPICHK, 1

TASK13=TO_DEFECT, 0
TASK14=TO_GETDAT, 1
TASK15=TO_PUTDAT, 1
TASK16=TO_MAEDAT, 1
TASK17=TO_INTENS, 1
TASK18=TO_PROCON, 1
TASK19=TO_FFSERV, 1
###TASK20=TO_SEQDM, 1

TASK20=HY_DEFECT, 1


#**************************************************************************************
# 各タスク 部
#**************************************************************************************
#=========================================================
# 統括管理
#=========================================================
[TO_DEFECT]
# LED照明 ライン休止OFF時間 [分]
LED_LINESTOP_OFFTIME    = 5

# パンチ穴 疵種EdasysID。ログチェックのみ(0なら実施しない)
PANTI_TYPE_ID  = 0

# 自動高速リセット。有効疵種EdasysID(0なら実施しない)
CAM_RESET_TYPE_ID = 0

# 検査基点〜表示基点間の距離[m]
LEN_BITWEEN_BASE = 100

# 各判定PCのカメラリンクスイッチ接続CH (1〜30)
# PCID=1〜10 (判定PC01〜10)
CAMLINKSW_PCID1_1 = 1
CAMLINKSW_PCID2_1 = 2
CAMLINKSW_PCID3_1 = 3
CAMLINKSW_PCID4_1 = 4
CAMLINKSW_PCID5_1 = 5
CAMLINKSW_PCID6_1 = 6
CAMLINKSW_PCID7_1 = 7
CAMLINKSW_PCID8_1 = 8
CAMLINKSW_PCID9_1 = 9
CAMLINKSW_PCID10_1 = 10
# PCID=19 (全長画像処理PC01,02,調整用レコーダー)
#CAMLINKSW_PCID11_1 = 16
#CAMLINKSW_PCID11_2 = 17
#CAMLINKSW_PCID11_3 = 18
#CAMLINKSW_PCID11_4 = 19
#CAMLINKSW_PCID12_1 = 20
#CAMLINKSW_PCID12_2 = 21
#CAMLINKSW_PCID12_3 = 22
#CAMLINKSW_PCID12_4 = 23
#CAMLINKSW_PCID13_1 = 24
#CAMLINKSW_PCID13_2 = 25
#CAMLINKSW_PCID13_3 = 26
#CAMLINKSW_PCID13_4 = 27

# 判定PCとのソケット定義
# Cliant01_Nameは、プログラム内で値を設定しなおす
[HT_RECV_TOP]
SAVE_IP		= 192.9.200.31
SAVE_PORT	= 10000
[HT_RECV_BOT]
SAVE_IP		= 192.9.200.31
SAVE_PORT	= 10001
# 表示PCとのソケット定義
[OP_SEND]
SAVE_IP 	= 192.9.200.31
SAVE_PORT 	= 10002
# 周期PCとのソケット定義
[CY_RECV_TOP]
SAVE_IP		= 192.9.200.31
SAVE_PORT	= 10010
[CY_RECV_BOT]
SAVE_IP		= 192.9.200.31
SAVE_PORT	= 10011


[SOGYO_MODE]
#操業条件
# 最小ライン速度チェック周期 [ms]
CHECK_INTERVAL = 1000
# 操業状態判定方法
# 「ライン速度がXmpm以下が、Y回続いた」の場合、低速操業認識。
# 「ライン速度がXmpm以下が、Y回続いた」の場合、ライン停止認識。
# 「ライン速度がXmpmより大きくが、Y回続いた」の場合、低速操業認識。
# 「ライン速度がXmpmより大きくが、Y回続いた」の場合、ライン稼動認識。
#    ※ 条件がかぶった場合は、下の項目に行くほど優先される。
#     ・Xが xxx_MPM。
#     ・Yが xxx_CNT(=最小ライン速度チェック周期で１回) (0で未チェック)

# 5mpmが10秒続いたら、一時停止 (ストップマーク発生)
UpToDown_SLOW_MPM = 5
UpToDown_SLOW_CNT = 10
# 0mpmが30秒続いたら、停止
UpToDown_STOP_MPM = 0
UpToDown_STOP_CNT = 30
# ちょっとでも動いたら即低速操業
DownToUp_SLOW_MPM = 0
DownToUp_SLOW_CNT = 1
# 5mpmより大きければ即ライン稼動認識
DownToUp_RUN_MPM = 5
DownToUp_RUN_CNT = 1

#=========================================================
# UDP設定
#----------------------------
# HT_SEND_PORT_0	: 全長レコーダー送信(表)用　 相手ポートNo
# HT_SEND_PORT_1	: 全長レコーダー送信(裏)用　 相手ポートNo
# HT_SEND_IP_n		: 全長レコーダー送信用	     相手IPアドレス
#=========================================================
[UDP]
HT_SEND_PORT_0 = 8500
HT_SEND_PORT_1 = 8501

HT_SEND_IP_1 = 192.9.200.110
HT_SEND_IP_2 = 192.9.200.110
HT_SEND_IP_3 = 192.9.200.110
HT_SEND_IP_4 = 192.9.200.110
HT_SEND_IP_5 = 192.9.200.110
HT_SEND_IP_6 = 192.9.200.110
HT_SEND_IP_7 = 192.9.200.110
HT_SEND_IP_8 = 192.9.200.110

#=========================================================
# 対プロコン通信 (サーバー：受信ポート  クライアント：送信ポート)
# 4PL  プロコンIP  10.27.58.1
#      疵検IP      10.27.58.56   受信 8700  送信 8701
#=========================================================
[TO_PROCON]

[TO_PROCON_RECV]
SAVE_IP		= 10.27.58.56
#SAVE_IP	= 127.0.0.1
SAVE_PORT	= 8700

[TO_PROCON_SEND]
SAVE_IP		= 10.27.58.56
#SAVE_IP	= 127.0.0.1
SAVE_PORT	= 8701


#=========================================================
# 対ＦＦサーバー通信 (受信ポート:クライアント/送信ポート:クライアント)
#  FFサーバーIP  10.24.98.1
#  4PL φωIP    10.25.123.185  受信 3981  送信 3931 ※本番
#  4PL φωIP    10.25.123.185  受信 5551  送信 5501 ※試験
#=========================================================
[TO_FFSERV_RECV]
SAVE_IP		= 10.24.98.1
#SAVE_IP	= 127.0.0.1
# 本番
#SAVE_PORT	= 3981
# 試験
SAVE_PORT	= 5551

[TO_FFSERV_SEND]
SAVE_IP		= 10.24.98.1
#SAVE_IP	= 127.0.0.1
# 本番
#SAVE_PORT	= 3931
# 試験
SAVE_PORT	= 5501


#=========================================================
# シーケンサ データメモリ管理
#   UDP接続 (ActQJ71E71UDPを使用)
# -- MXコンポーネント設置用 --
#  PC_NETWORK_NO		: パソコン側(自局) ネットワークNo
#  PC_STATION_NO		: パソコン側(自局) 局番
#  SEQ_NETWORK_NO		: シーケンサ側(他局) ネットワークNo
#  SEQ_STATION_NO		: シーケンサ側(他局) 局番
#  SEQ_CPU_TYPE			: CPUタイプ  マニュアル sh080275f.pdf  P53を参照 (10進数で指定すること)
#							Q02(H) ･･･ 0x22
# -- データメモリ領域用 --
#  READADDR  	: 読込エリア開始アドレス
#  WRITEADDR 	: 書込エリア開始アドレス
#=========================================================
[TO_SEQDM]
PC_NETWORK_NO	= 1
PC_STATION_NO	= 2
SEQ_NETWORK_NO	= 1
SEQ_STATION_NO 	= 1
SEQ_CPU_TYPE	= 34
CONNECT_IP	= 192.168.0.2
CONNECT_PORT	= 5001
CONNECT_TIMEOUT	= 5000

READADDR  = D1000
WRITEADDR = D11000


#=========================================================
# 実績編集処理
#   CHKCOILDATE        : コイル検索対象期間[日]
#   ADDDB_MAXWAITTIME  : コイル実績の最大待ち合わせ時間[msec]
#   RETRYCOUNT         : 実績書き込み状況問い合わせのリトライ回数[回]
#   RETRYWAITTIME      : 実績書き込み状況問い合わせのリトライ時間[msec]
#=========================================================
[TO_PUTDAT]
CHKCOILDATE = 10
ADDDB_MAXWAITTIME = 5000
RETRYCOUNT = 15
RETRYWAITTIME = 10000


#=========================================================
# 前工程疵情報管理
#=========================================================
[TO_MAEDAT]
LINE_HOT_SQL = SELECT COUNT (*) FROM COIL_RESULT WHERE 疵検管理No = '%s'
LINE_HOT_OLD_SQL = SELECT COUNT (*) FROM COILINF WHERE 保存ファイル名 = '%s'
LINE_HHOT_SQL = SELECT COUNT (*) FROM COIL_INF WHERE 疵検管理No = '%s'

[TO_MAEDAT_RETRY_HOT]
PING_RETRY_COUNT_PRE   = 3
PING_RETRY_COUNT_SHARE = 3
PING_RETRY_TIME_PRE   = 1000
PING_RETRY_TIME_SHARE = 1000
CONNECT_RETRY_COUNT_PRE   = 1
CONNECT_RETRY_COUNT_SHARE = 1
CONNECT_RETRY_TIME_PRE   = 1000
CONNECT_RETRY_TIME_SHARE = 1000

[TO_MAEDAT_RETRY_HHOT]
PING_RETRY_COUNT_PRE   = 3
PING_RETRY_COUNT_SHARE = 3
PING_RETRY_TIME_PRE   = 1000
PING_RETRY_TIME_SHARE = 1000
CONNECT_RETRY_COUNT_PRE   = 1
CONNECT_RETRY_COUNT_SHARE = 1
CONNECT_RETRY_TIME_PRE   = 1000
CONNECT_RETRY_TIME_SHARE = 1000


#**************************************************************************************
# 共通タスク 部
#**************************************************************************************
#=========================================================
# 機器状態履歴管理
#  MAX_DB_COLUMN_KIKI		：DBのST_HISTORY関係の機器状態の列数 (最大64コ)
#  MAX_DB_COLUMN_TEMP		: DBのST_HISTORY関係の付加情報の列数 (最大64コ)
#=========================================================
[KS_HISTRY]
MAX_DB_COLUMN_KIKI 		= 9
MAX_DB_COLUMN_TEMP 		= 1


#=========================================================
# RPIファイル監視
#
# ----- 共通部 ---------------------------
# INS_NUM  		何個ある (1オリジン。MAX:4)
# CHECK_OK_NUM		過去xコイルを見て、１つもRPIファイルが無ければNG判定 (1〜)
# CYCLE_TIME		チェック周期 [分] ※チェック対象疵検管理Noが変更なければ、チェックしない
#
### 各機能 [**_ID_1･･･] ---------------------------
## 設定
# RPI_CHECK_MODE	0:ini参照	1:直接指定
#
# (0:ini参照)
# RPISAVE_INI_PATH	TI_RPISAVEのINIファイル絶対パス(統括IniSettingの中)
# RPISAVE_INS_SEC	TI_RPISAVEセクション名 ([TI_RPISAVE_INS_1])
#
# (1:直接指定)
# RPI_FOLDER_SAVE_1	保存パス指定
#
## 機器状態
# ERR_ID		機器ID
# REBOOT_PCNAME 再起動PC名称。空白時再起動無し
#=========================================================
[KT_RPICHK]
INS_NUM 	= 2
CHECK_OK_NUM= 2
CYCLE_TIME	= 5

[KT_RPICHK_ID_1]
RPI_CHECK_MODE = 1

# ini参照 [RPI_CHECK_MODE:0]
RPISAVE_INI_PATH= \\192.9.200.31\C$\N4PL_C\IniSetting_N4PL_C\t全長処理表機能 KizuTask.ini
RPISAVE_INS_SEC	= TI_RPISAVE_INS_1
# 直接指定 [RPI_CHECK_MODE:1]
RPI_FOLDER_SAVE_1  = \\192.9.200.50\F$\RPI

ERR_ID		= 348
#REBOOT_PCNAME=RPIEXEC01


[KT_RPICHK_ID_2]
RPI_CHECK_MODE = 1

# ini参照 [RPI_CHECK_MODE:0]
RPISAVE_INI_PATH= \\192.9.200.31\C$\N4PL_C\IniSetting_N4PL_C\t全長処理裏機能 KizuTask.ini
RPISAVE_INS_SEC	= TI_RPISAVE_INS_1
# 直接指定 [RPI_CHECK_MODE:1]
RPI_FOLDER_SAVE_1  = \\192.9.200.50\G$\RPI

ERR_ID		= 349
#REBOOT_PCNAME=RPIEXEC02


#=========================================================
# 対カメラコントローラー通信
#  ※ メールスロットLineIDで、Unitを切替。(0:全部  1〜:対象ユニットのみ)
#=========================================================
[TO_CAMERA_MAIN]

# カメラコントローラ複数台対応
#  NAME_*		：セッション名となる (インスタンスの名前にもなる) MAX8コ
NAME_1 = TO_CAMERA

[TO_CAMERA]
com=COM6
baud=96
parity=n
data=8
stop=1
to=off
dtr=off
rts=off
idsr=off
octs=off

# フィルタ値 [0.1μs] (未指定時は、0μs)
#FILTER = 1
# Hコマンド (初期値0) ※ジッター対策。振幅フレ対策。べき乗で移動平均を取る。0〜5。※0の時には、コマンドも送らない。Hコマンドは追加コマンドのため
COMMAND_H = 0

# 入力チャンネル別のパラメータ指定 (0:なし 1:あり)
#	カメラPLG逓倍率〜カメラPLG位相差までの５項目 が
# 	それぞれ表校正、裏校正、テスト用に存在するか(_O,_U,_T)
PARAM_O = 0
PARAM_U = 0
PARAM_T = 0

#====================================
# カメラリンクスイッチ用
#
# カメラIDとカメラコントローラーの入力CHの紐付け
#   配線ミス時などに指定する (1オリジン) (飛び飛びで指定も可能)
#   CAMID_<スイッチマスタのFPGAボードID>_<連番(1〜8)>
#   INPCH_<スイッチマスタのFPGAボードID>_<連番(1〜8)>
# 例
#   CAMID_0_1 = 1
#   INPCH_0_1 = 2 
#   この場合、カメラID=1の時には A2*****としてカメラコントローラーへ指示される
# 未定義だと、何もしない(= デフォルト値のまま)
CAMID_0_1 = 1
CAMID_0_2 = 2
CAMID_0_3 = 3
CAMID_0_4 = 4
CAMID_0_5 = 5
CAMID_0_6 = 6
CAMID_0_7 = 7
CAMID_0_8 = 8

INPCH_0_1 = 1
INPCH_0_2 = 2
INPCH_0_3 = 3
INPCH_0_4 = 4
INPCH_0_5 = 5
INPCH_0_6 = 6
INPCH_0_7 = 7
INPCH_0_8 = 8

#=========================================================
# 対カメラリンクスイッチ通信
#
# ### 共通仕様
#  TIMER_CYCLE		：定周期チェックタイマ周期 [秒]
#
# ### 個別仕様
# [タスク名_スイッチFPGAボードID]
#  FPGADIE_TEMP_LIMIT	：FPGAダイ温度上限 [℃]
#  FPGADIE_TEMP_ID	：FPGAダイ温度 ID
#  FPGADIE_TEMP_ST_ID	：FPGAダイ温度状態 ID
#  AMBIENT_TEMP_LIMIT	：周囲温度上限 [℃]
#  AMBIENT_TEMP_ID	：周囲温度 ID
#  AMBIENT_TEMP_ST_ID	：周囲温度状態 ID
#=========================================================
[TO_LINKSW]
com=COM5
baud=96
parity=n
data=8
stop=1
to=off
dtr=off
rts=off
idsr=off
octs=off

# 定周期チェックタイマ周期 [秒]
TIMER_CYCLE = 180

# 各ボードのカメラ入力CH(1〜8, 0:無視), 表裏区分(0:表, 1:裏)
# テスト的に画像パラ撮りする時などに使用
FPGA_0_BOARD_1 = 0, 0
FPGA_0_BOARD_2 = 0, 0
FPGA_0_BOARD_3 = 0, 0
FPGA_0_BOARD_4 = 0, 0
FPGA_0_BOARD_5 = 0, 0
FPGA_0_BOARD_6 = 0, 0
FPGA_0_BOARD_7 = 0, 0
FPGA_0_BOARD_8 = 0, 0
FPGA_0_BOARD_9 = 0, 0
FPGA_0_BOARD_10 = 0, 0
FPGA_0_BOARD_11 = 0, 0
FPGA_0_BOARD_12 = 0, 0
FPGA_0_BOARD_13 = 0, 0
FPGA_0_BOARD_14 = 0, 0
FPGA_0_BOARD_15 = 0, 0

FPGA_1_BOARD_1 = 0, 0
FPGA_1_BOARD_2 = 0, 0
FPGA_1_BOARD_3 = 0, 0
FPGA_1_BOARD_4 = 0, 0
FPGA_1_BOARD_5 = 5, 1
FPGA_1_BOARD_6 = 6, 1
FPGA_1_BOARD_7 = 7, 1
FPGA_1_BOARD_8 = 8, 1
FPGA_1_BOARD_9 = 1, 0
FPGA_1_BOARD_10 = 2, 0
FPGA_1_BOARD_11 = 3, 0
FPGA_1_BOARD_12 = 4, 0
FPGA_1_BOARD_13 = 0, 0
FPGA_1_BOARD_14 = 0, 0
FPGA_1_BOARD_15 = 0, 0

# スイッチマスタ (スイッチFPGAボードID = 0)
[TO_LINKSW_0]
FPGADIE_TEMP_LIMIT	= 60
FPGADIE_TEMP_ID		= 308
FPGADIE_TEMP_ST_ID	= 306
AMBIENT_TEMP_LIMIT	= 50
AMBIENT_TEMP_ID		= 312
AMBIENT_TEMP_ST_ID	= 310

# スイッチスレーブ (スイッチFPGAボードID = 1)
[TO_LINKSW_1]
FPGADIE_TEMP_LIMIT	= 60
FPGADIE_TEMP_ID		= 309
FPGADIE_TEMP_ST_ID	= 307
AMBIENT_TEMP_LIMIT	= 50
AMBIENT_TEMP_ID		= 313
AMBIENT_TEMP_ST_ID	= 311

#=========================================================
# 対LED照明装置 (アイテック製 TCP/IP)
#   2分30秒 通信がなければ、LED照明側が回線切断する。PCいきなり死亡対策。
# ### 共通仕様
#  BLOCK		：配光ブロック数　　 CHごとに設定しない場合、この値を用いる(MAX256)
#  TEMP_UNIT 		：LED温度計測点数　　CHごとに設定しない場合、この値を用いる(MAX9)
#  TEMP_THR		：温度閾値 (これ以上はエラーとなる) [度]
#  TEMP_THR_DOWN	：強制OFF温度閾値 (これ以上はエラー+LED消灯となる) [度]
#  TIMER_CYCLE		：温度取り込み周期 [秒]
#  NAME_*		：セッションの末の部分となる (インスタンスの名前にもなる) MAX8コ
# 
# ### 個別仕様
# -装置単位-----------------
#  MEN			：面 (0:表 1:裏)
#  CH_NUM		：管理対象チャンネル数 (最大4CH)
#  CH_START		：先頭チャンネルの片面単位のID(1オリジン)
#  LED_CONNECT_ID	：照明装置 通信状態
#  SAVE_IP		：デフォルト 192.168.0.99
#  SAVE_PORT		：デフォルト 5001
#
# -チャンネル単位-----------------
#   ・高輝度LED（１列に対して複数CH使うLED照明）対応の為、INDEXを追加。
#   　１列に複数CH使う場合、同じINDEXにすることで、１回のメールスロットで
#   　同時にコマンドを投げることが出来る。
#
#   ・配光補正値の展開方向を追加。
#     (通常は、DBから読み出したバイナリ列をDS→WS方向に展開。逆展開するとWS→DS方向になる)
#
# [タスク名_セッション名_CH1]
#  INDEX		：CHに対応するINDEX   定義しない場合、CH番号を使用
#  BLOCK		：配光ブロック数  定義しない場合、共通設定を使用
#  TEMP_UNIT		：LED温度計測点数 定義しない場合、共通設定を使用
#  LR			：配光補正値左右展開(0=そのまま展開、1=逆展開)　定義しない場合、0(そのまま展開)
#  LED_BREAK_ID		：断線
#  LED_HOTWAR_ID	：加熱検出
#  LED_HOTERR_ID	：加熱シャットダウン
#  LED_ONOFF_ID		：LED点灯消灯状態
#  LED_VALNOW_ID	：現在設定輝度値
#  LED_TOTALTIME_ID	：稼動累計時間
#  LED_TEMP_ST_1_ID 	：温度状態 (L,C,R)
#  LED_TEMP_1_ID 	：温度 (L,C,R)
#=========================================================
[KT_LEDMGR]
BLOCK 		   = 40
TEMP_UNIT 	   = 3
TEMP_THR           = 50
TEMP_THR_DOWN	   = 70
TIMER_CYCLE        = 120
NAME_1             = TOP1
NAME_2             = TOP2
NAME_3      	   = BOT1
NAME_4      	   = BOT2

[KT_LEDMGR_TOP1]
# 基本設定
MEN		= 0
CH_NUM		= 3
CH_START	= 1
LED_CONNECT_ID	= 165
# TCP/IP設定
SAVE_IP		= 192.168.1.101
SAVE_PORT	= 5001

# CH単位 (1:R 2:G(1) 3:G(2)の順)
[KT_LEDMGR_TOP1_CH1]
INDEX		   = 1
BLOCK		   = 40
TEMP_UNIT	   = 3
LR		   = 0

LED_BREAK_ID       = 167
LED_HOTWAR_ID      = 168
LED_HOTERR_ID      = 169
LED_ONOFF_ID       = 170
LED_VALNOW_ID      = 171
LED_TOTALTIME_ID   = 172

LED_TEMP_ST_1_ID   = 173
LED_TEMP_ST_2_ID   = 174
LED_TEMP_ST_3_ID   = 175
LED_TEMP_1_ID      = 176
LED_TEMP_2_ID      = 177
LED_TEMP_3_ID      = 178

[KT_LEDMGR_TOP1_CH2]
INDEX		   = 2
BLOCK		   = 40
TEMP_UNIT	   = 3
LR		   = 0

LED_BREAK_ID       = 179
LED_HOTWAR_ID      = 180
LED_HOTERR_ID      = 181
LED_ONOFF_ID       = 182
LED_VALNOW_ID      = 183
LED_TOTALTIME_ID   = 184

LED_TEMP_ST_1_ID   = 185
LED_TEMP_ST_2_ID   = 186
LED_TEMP_ST_3_ID   = 187
LED_TEMP_1_ID      = 188
LED_TEMP_2_ID      = 189
LED_TEMP_3_ID      = 190

[KT_LEDMGR_TOP1_CH3]
INDEX		   = 2
BLOCK		   = 40
TEMP_UNIT	   = 0
LR		   = 1

LED_BREAK_ID       = 191
LED_HOTWAR_ID      = 192
LED_HOTERR_ID      = 193
LED_ONOFF_ID       = 194
LED_VALNOW_ID      = 195
LED_TOTALTIME_ID   = 196

#LED_TEMP_ST_1_ID   = 197
#LED_TEMP_ST_2_ID   = 198
#LED_TEMP_ST_3_ID   = 199
#LED_TEMP_1_ID      = 200
#LED_TEMP_2_ID      = 201
#LED_TEMP_3_ID      = 202



[KT_LEDMGR_TOP2]
# 基本設定
MEN		= 0
CH_NUM		= 2
CH_START	= 4
LED_CONNECT_ID	= 166
# TCP/IP設定
SAVE_IP		= 192.168.1.102
SAVE_PORT	= 5001

# CH単位 (2:B(1) 3:B(2)の順)
[KT_LEDMGR_TOP2_CH2]
INDEX		   = 3
BLOCK		   = 40
TEMP_UNIT	   = 3
LR		   = 0

LED_BREAK_ID       = 203
LED_HOTWAR_ID      = 204
LED_HOTERR_ID      = 205
LED_ONOFF_ID       = 206
LED_VALNOW_ID      = 207
LED_TOTALTIME_ID   = 208

LED_TEMP_ST_1_ID   = 209
LED_TEMP_ST_2_ID   = 210
LED_TEMP_ST_3_ID   = 211
LED_TEMP_1_ID      = 212
LED_TEMP_2_ID      = 213
LED_TEMP_3_ID      = 214

[KT_LEDMGR_TOP2_CH3]
INDEX			= 3
BLOCK			= 40
TEMP_UNIT		= 0
LR			= 1

LED_BREAK_ID       = 215
LED_HOTWAR_ID      = 216
LED_HOTERR_ID      = 217
LED_ONOFF_ID       = 218
LED_VALNOW_ID      = 219
LED_TOTALTIME_ID   = 220

#LED_TEMP_ST_1_ID   = 221
#LED_TEMP_ST_2_ID   = 222
#LED_TEMP_ST_3_ID   = 223
#LED_TEMP_1_ID      = 224
#LED_TEMP_2_ID      = 225
#LED_TEMP_3_ID      = 226


[KT_LEDMGR_BOT1]
# 基本設定
MEN		= 1
CH_NUM		= 3
CH_START	= 1
LED_CONNECT_ID	= 227
# TCP/IP設定
SAVE_IP		= 192.168.1.103
SAVE_PORT	= 5001

# CH単位 (1:R 2:G(1) 3:G(2)の順)
[KT_LEDMGR_BOT1_CH1]
INDEX		   = 1
BLOCK		   = 40
TEMP_UNIT	   = 3
LR		   = 0

LED_BREAK_ID       = 229
LED_HOTWAR_ID      = 230
LED_HOTERR_ID      = 231
LED_ONOFF_ID       = 232
LED_VALNOW_ID      = 233
LED_TOTALTIME_ID   = 234

LED_TEMP_ST_1_ID   = 235
LED_TEMP_ST_2_ID   = 236
LED_TEMP_ST_3_ID   = 237
LED_TEMP_1_ID      = 238
LED_TEMP_2_ID      = 239
LED_TEMP_3_ID      = 240

[KT_LEDMGR_BOT1_CH2]
INDEX		   = 2
BLOCK		   = 40
TEMP_UNIT	   = 3
LR		   = 0

LED_BREAK_ID       = 241
LED_HOTWAR_ID      = 242
LED_HOTERR_ID      = 243
LED_ONOFF_ID       = 244
LED_VALNOW_ID      = 245
LED_TOTALTIME_ID   = 246

LED_TEMP_ST_1_ID   = 247
LED_TEMP_ST_2_ID   = 248
LED_TEMP_ST_3_ID   = 249
LED_TEMP_1_ID      = 250
LED_TEMP_2_ID      = 251
LED_TEMP_3_ID      = 252

[KT_LEDMGR_BOT1_CH3]
INDEX		   = 2
BLOCK		   = 40
TEMP_UNIT	   = 0
LR		   = 1

LED_BREAK_ID       = 253
LED_HOTWAR_ID      = 254
LED_HOTERR_ID      = 255
LED_ONOFF_ID       = 256
LED_VALNOW_ID      = 257
LED_TOTALTIME_ID   = 258

#LED_TEMP_ST_1_ID   = 259
#LED_TEMP_ST_2_ID   = 260
#LED_TEMP_ST_3_ID   = 261
#LED_TEMP_1_ID      = 262
#LED_TEMP_2_ID      = 263
#LED_TEMP_3_ID      = 264

[KT_LEDMGR_BOT2]
# 基本設定
MEN		= 0
CH_NUM		= 2
CH_START	= 4
LED_CONNECT_ID	= 228
# TCP/IP設定
SAVE_IP		= 192.168.1.104
SAVE_PORT	= 5001

# CH単位 (2:B(1) 3:B(2)の順)
[KT_LEDMGR_BOT2_CH2]
INDEX		   = 3
BLOCK		   = 40
TEMP_UNIT	   = 3
LR		   = 0

LED_BREAK_ID       = 265
LED_HOTWAR_ID      = 266
LED_HOTERR_ID      = 267
LED_ONOFF_ID       = 268
LED_VALNOW_ID      = 269
LED_TOTALTIME_ID   = 270

LED_TEMP_ST_1_ID   = 271
LED_TEMP_ST_2_ID   = 272
LED_TEMP_ST_3_ID   = 273
LED_TEMP_1_ID      = 274
LED_TEMP_2_ID      = 275
LED_TEMP_3_ID      = 276

[KT_LEDMGR_BOT2_CH3]
INDEX		   = 3
BLOCK		   = 40
TEMP_UNIT	   = 0
LR		   = 1

LED_BREAK_ID       = 277
LED_HOTWAR_ID      = 278
LED_HOTERR_ID      = 279
LED_ONOFF_ID       = 280
LED_VALNOW_ID      = 281
LED_TOTALTIME_ID   = 282

#LED_TEMP_ST_1_ID   = 283
#LED_TEMP_ST_2_ID   = 284
#LED_TEMP_ST_3_ID   = 285
#LED_TEMP_1_ID      = 286
#LED_TEMP_2_ID      = 287
#LED_TEMP_3_ID      = 288



#=========================================================
# 対チラー装置
# ### 共通仕様
#  TEMP_THR	：温度閾値 (これ以上はエラーとなる) [度]
#  TIMER_CYCLE	：温度取り込み周期 [秒]
#  NAME_*	：セッションの末の部分となる (インスタンスの名前にもなる) MAX8コ
#
# ### 個別仕様
#  CHILER_CONNECT_ID	: チラー装置との通信状態を格納するID
#  CHILER_STATE_ID	: チラー運転状態を格納するID (0:クーラー運転中 1:停止,ポンプ単独運転中 )
#  CHILER_ERR_ID	: チラーからの異常を格納するID 
#  CHILER_TEMP_ST_ID	: 温度異常を格納するID (ID=0は未実行)
#  CHILER_TEMP_ID	: 温度を格納するID (ID=0は未実行)
#   以降は、232C設定
#=========================================================
[KT_CHILER]
TEMP_THR           = 35 
TIMER_CYCLE        = 180
NAME_1             = TOP
NAME_2      	   = BOT

[KT_CHILER_TOP]
# 一般設定
CHILER_CONNECT_ID  = 294
CHILER_STATE_ID    = 295
CHILER_ERR_ID      = 296
CHILER_TEMP_ST_ID  = 297
CHILER_TEMP_ID     = 298
# 232C設定
com    = COM3
baud   = 96
parity = n
data   = 8
stop   = 1
to     = off
dtr    = on
rts    = on
idsr   = off
octs   = off

[KT_CHILER_BOT]
# 一般設定
CHILER_CONNECT_ID  = 299
CHILER_STATE_ID    = 300
CHILER_ERR_ID      = 301
CHILER_TEMP_ST_ID  = 302
CHILER_TEMP_ID     = 303
# 232C設定
com    = COM4
baud   = 96
parity = n
data   = 8
stop   = 1
to     = off
dtr    = on
rts    = on
idsr   = off
octs   = off


#=========================================================
# 対温度パネルメーター装置 (オムロン製 RS-232C)
# ### 共通仕様
#  NAME_*		：セッションの末の部分となる (インスタンスの名前にもなる) MAX8コ
#
# ### 個別仕様
# -１ループ単位-----------------
# [タスク名_セッション名]
#  UNIT_NUM		：管理対象装置数 (最大16機器)
#  TIMER_CYCLE		：温度取り込み周期 [秒]
#  CONNECT_ID		：232C 通信状態 機器ID 	(0：機器状態に登録しない)
#  TEMP_KETA	: 取得温度の桁合わせ (1で1/10。2で1/100。0はそのまま。マイナスは未対応)
#  232C定義
#
# -装置単位-----------------
# [タスク名_セッション名_UNIT(UnitNo)] UnitNo=1〜の連番
#  NAME			：装置名称
#  TEMP_LIMIT		：温度上限 [度] (0のときは、未チェック)
#  TEMP_ID		：温度 ID 	(0：機器状態に登録しない)
#  TEMP_ST_ID		：温度状態 ID	(0：機器状態に登録しない)
#  UNTEN_ID		：運転状態 ID	(0：機器状態に登録しない)
#  STATE_ID		：ステータスID 	(0：機器状態に登録しない)
#			     ステータス状態
#				1bit目：未計測状態
#				2bit目：表示範囲オーバー
#				3bit目：入力異常A
#				4bit目：入力異常B
#=========================================================
[KT_TEMPMT]
NAME_1		= MAIN

[KT_TEMPMT_MAIN]
UNIT_NUM	= 3
TIMER_CYCLE	= 180
CONNECT_ID	= 352
TEMP_KETA	= 1

com = COM1
baud=9600
parity=e
data=7
stop=2
to = ON
dtr = ON
rts = ON
idsr = ON
octs = ON

[KT_TEMPMT_MAIN_UNIT1]
NAME		= 制御盤
TEMP_LIMIT	= 50
TEMP_ID		= 353
TEMP_ST_ID	= 354
UNTEN_ID	= 355
STATE_ID	= 356
[KT_TEMPMT_MAIN_UNIT2]
NAME		= 機側盤
TEMP_LIMIT	= 50
TEMP_ID		= 357
TEMP_ST_ID	= 358
UNTEN_ID	= 359
STATE_ID	= 360
[KT_TEMPMT_MAIN_UNIT3]
NAME		= チラー室
TEMP_LIMIT	= 50
TEMP_ID		= 361
TEMP_ST_ID	= 362
UNTEN_ID	= 363
STATE_ID	= 364


#=========================================================
# DB容量管理
#---------------------------
# タスク名セッションの中身
# SESSION_1	: セッション情報 (1〜10)
#---------------------------
# 各セッションの中身
# DB_ODBC	: DBセッション名
# DB_TRAN_SIZE_ERR_ID : トランザクションログサイズ増加時の異常機器ID (0時異常判定処理未実施)
# DB_TRAN_ERR_SIZE : トランザクションエラー認識サイズ [MByte]
# TIME_CYCLE	: 定周期実行周期 [分] (0時、チェック無し)
# TIME_SIZECHECK: DB容量チェック周期 [分] (0時、容量チェック無し)
# THREAD_COUNT	: DB容量低下時の削除スレッド数 (0時、容量低下で削除しない)
# DEL_RITU_1	: 削除スレッド実行開始容量 [%-2] (空き容量が指定パーセント以下になるとスレッド実行) (降順)
# 			スレッドの実行数と同じ数にする事
# 			最大9コまでとする。(指定した最後のスレッドが起動時は、ホントに容量がやばいと判断して、全力で消しに行くので注意する事)
#			(0時、チェック無し)
# TIME_MAX_WAIT	: 書込優先時の待ち時間 [ms]
# TIME_MIN_WAIT	: 削除優先時の待ち時間 [ms]
# LOG_SAVEDAY	: ログ保存日数 (0時、LOG_INF削除 実施無し)
# COIL_DEL_COUNT: 1回での削除コイル件数
# COILRESULT_TBL: コイル実績テーブル (疵検管理Noが主キーのテーブルを指定する事)
# COILRESULT_KEY: コイル実績テーブルの主キー (通常疵検管理No)
# COILRESULT_SORT:コイル実績テーブルのソートキー(ASCでソート)(複数工程疵検管理Noが1テーブルに入っているような場合、疵検管理NoではASCソートできない対応) ※未指定なら 従来どおりCOILRESULT_KEY でソート、 (通常は、空白。設定する場合は、登録日付) 
#					※ COILRESULT_SORT が 設定されている場合 (且つ COILRESULT_KEY と異なる場合)、バックアップ削除(最後に削除した疵検管理Noよりも小さいものを全部削除)は、停止
#					   そうしないと、ソートで大きい疵検管理Noが消えた場合、バックアップ削除でそれよりも小さい疵検管理Noが全部消えてしまうため
# 
#### 拡張
# ZI_1		: コイル実績の疵検管理Noを消す時に、一緒に消えていくテーブル (容量により削除) (1〜無限)		
# 			テーブル名, 主キー, サブキー(通常,疵No or ""), 一回の削除件数(0だと疵検管理No全部)
#  
# TI_1		: 日付で管理しているテーブル (定周期により削除) (1〜無限)
# 			テーブル名, 日付列(通常,登録日付), 保存日数
#
# CI_1		: 主キーの件数で管理しているテーブル (定周期により削除) (1〜無限)
#			テーブル名, 主キー, サブキー(通常,疵No or ""), 一回の削除件数(0だと対象全部), 保存上限数
#=========================================================
[TI_DELETE]
SESSION_1 = TI_DELETE_A
SESSION_2 = TI_DELETE_B

# 統合サーバー取得事後仕様 ------>>>
# 無害Gr 削除スレッド実行数(1〜9) (0のときは、以降一切無処理)
#LOWGR_THREAD_COUNT = 2
LOWGR_THREAD_COUNT = 0

# 何日以前のデータを強制削除するか [日] (0のときは、強制削除しない)
LOWGR_DELEDAY = 3
# 一覧テーブルのチェック周期 [分]
LOWGR_CYCLE = 60

# 一覧テーブルから削除対象キー取得SQL (削除対象主キーを昇順で一覧取得)
# 無害Gr削除後の一覧テーブル更新SQL (WHERE句には削除した主キーがセットされる) ※ 無くてもOK
SQL_SELECT_KEY = "SELECT 疵検管理No FROM COIL_RESULT WHERE 無害Gr削除区分 IS NULL AND [統合サーバー取得区分]=1 ORDER BY 疵検管理No ASC"
SQL_SELECT_END = "UPDATE COIL_RESULT SET 無害Gr削除区分=1 WHERE 疵検管理No='%s'"

# テーブル設定 (いろんなところで使用)
COILRESULT_TBL 	= COIL_RESULT
COILRESULT_TIME = 登録日付
MAINKEY_NAME 	= 疵検管理No
SUBKEY_NAME 	= 疵No

# 無害Gr削除メイン
# KEY :(通常DEFECT_INF)		テーブル名, 対象抽出WHERE句(単純にAddするだけなのでAND等はつけること)
# SUB :( TBL_SUB_[KEYに紐付く]_[1からの連番] )	テーブル名 (主キー,サブキーはﾒｲﾝと同じ)
TBL_KEY_1	= "DEFECT_INF_T, AND 無害Gr=1"
TBL_KEY_2	= "DEFECT_INF_B, AND 無害Gr=1"
TBL_SUB_1_1 = DEFECT_IMG_T
TBL_SUB_1_2 = DEFECT_ATTR0_T
TBL_SUB_1_3 = DEFECT_ATTR1_T
TBL_SUB_1_4 = DEFECT_ATTR2_T
TBL_SUB_2_1 = DEFECT_IMG_B
TBL_SUB_2_2 = DEFECT_ATTR0_B
TBL_SUB_2_3 = DEFECT_ATTR1_B
TBL_SUB_2_4 = DEFECT_ATTR2_B
# <<<--------------------


# デフラグ実行仕様 ------>>>
# デフラグ経過日。この間隔以上空いたときにデフラグ実行 (0のときは、未実行)
DEFRAG_INTERVAL_DAY = 7

# デフラグ実行可=1, 不可=0となるように単項目のSQL文。※ 操業状態の停止、休止で実行1。
SQL_DEFRAG_RUN = "SELECT (CASE 機器状態 WHEN 2 THEN 0 ELSE 1 END) FROM STATUS_INF WHERE 機器ID=266"
# <<<--------------------


[TI_DELETE_A]
DB_ODBC = DB_A
DB_TRAN_SIZE_ERR_ID = 325
DB_TRAN_ERR_SIZE = 200000
TIME_CYCLE = 10
TIME_SIZECHECK = 5
THREAD_COUNT = 3
DEL_RITU_1 = 600
DEL_RITU_2 = 300
DEL_RITU_3 = 200
TIME_MAX_WAIT = 3000
TIME_MIN_WAIT = 100
LOG_SAVEDAY = 180
COIL_DEL_COUNT = 20
COILRESULT_TBL = COIL_RESULT
COILRESULT_KEY = 疵検管理No
COILRESULT_SORT = 

#### 拡張
## コイル実績の疵検管理Noを消す時に、一緒に消えていくテーブル達
# テーブル名, 主キー, サブキー(通常,疵No or ""), 一回の削除件数(0だと疵検管理No全部)
ZI_1	= COIL_INF, 		疵検管理No,	,		0
ZI_2	= COIL_POSITION,	疵検管理No,	,		0
ZI_3	= COIL_TRAND,		疵検管理No,	,		0

ZI_4	= DEFECT_INF_T,		疵検管理No,	疵No,		5000
ZI_5	= DEFECT_IMG_T,		疵検管理No,	疵No,		1000
ZI_6	= DEFECT_ATTR0_T,	疵検管理No,	疵No,		2000
ZI_7	= DEFECT_ATTR1_T,	疵検管理No,	疵No,		2000
ZI_8	= DEFECT_ATTR2_T,	疵検管理No,	疵No,		2000
ZI_9	= DEFECT_ATTR3_T,	疵検管理No,	疵No,		2000
ZI_10	= DEFECT_ATTR4_T,	疵検管理No,	疵No,		2000
ZI_11	= DEFECT_INF_B,		疵検管理No,	疵No,		5000
ZI_12	= DEFECT_IMG_B,		疵検管理No,	疵No,		1000
ZI_13	= DEFECT_ATTR0_B,	疵検管理No,	疵No,		2000
ZI_14	= DEFECT_ATTR1_B,	疵検管理No,	疵No,		2000
ZI_15	= DEFECT_ATTR2_B,	疵検管理No,	疵No,		2000
ZI_16	= DEFECT_ATTR3_B,	疵検管理No,	疵No,		2000
ZI_17	= DEFECT_ATTR4_B,	疵検管理No,	疵No,		2000

ZI_18	= EDGE_COIL_INF,	疵検管理No,	,		0
ZI_19	= EDGE_CHANGE_INF,	疵検管理No,	,		0
ZI_20	= FRAME_INF,		疵検管理No,	,		0
ZI_21	= FRAME_IMG,		疵検管理No,	,		0

ZI_22	= COIL_CUT_RESULT,	疵検管理No,	,		0
ZI_23	= COIL_EDGE_CUT_RESULT,	疵検管理No,	,		0
ZI_24	= COIL_SAISUN_RESULT,		疵検管理No,	,	0

ZI_25	= COIL_ORDER,		疵検管理No,	,		0

ZI_26	= MAE_COIL_INF,		疵検管理No,	,		0
ZI_27	= MAE_COIL_LINE,	疵検管理No,	,		0
ZI_28	= MAE_FF_INF,		疵検管理No,	,		0
ZI_29	= MAE_DEFECT_INF,	疵検管理No,	,		0
ZI_30	= MAE_DEFECT_IMG,	疵検管理No,	,		0

ZI_31	= ACCESS_NEXT_COIL_INF,	疵検管理No,	,	0
ZI_32	= ACCESS_NEXT_DEFECT_INF,	疵検管理No,	,	0

ZI_33	= FT_INF,	疵検管理No,	,	0
ZI_34	= FT_IMG,	疵検管理No,	,	0
ZI_35	= DEFECT_NUM_TOTAL,	疵検管理No,	,	0
ZI_36	= DEFECT_NUM_INTERVAL,	疵検管理No,	,	0

#ZI_20	= TINY_RESULT,		疵検管理No,	,		0
#ZI_21	= TINY_INF,			疵検管理No,	,		0


## 日付で管理しているテーブル
# テーブル名, 日付列(通常,登録日付), 保存日数
TI_1	= ST_HISTORY_INF,	登録日付,	400
TI_2	= STATUS_LOG,		登録日付,	90

TI_3	= BUF_PRO_R_COILINF,登録日付,	90
TI_4	= BUF_PRO_R_CUT,	登録日付,	90
TI_5	= BUF_PRO_R_SAISUN,	登録日付,	90

TI_6	= BUF_FF_S_ZISEKI,	登録日付,	90
TI_7	= BUF_FF_R_MAEINF,	登録日付,	90



[TI_DELETE_B]
DB_ODBC = DB_B
DB_TRAN_SIZE_ERR_ID = 326
DB_TRAN_ERR_SIZE = 200000
TIME_CYCLE = 10
TIME_SIZECHECK = 5
THREAD_COUNT = 2
DEL_RITU_1 = 1000
DEL_RITU_2 = 400
TIME_MAX_WAIT = 3000
TIME_MIN_WAIT = 100
LOG_SAVEDAY = 180
COIL_DEL_COUNT = 20
COILRESULT_TBL = COIL_RESULT
COILRESULT_KEY = 疵検管理No
COILRESULT_SORT = 

#### 拡張
## コイル実績の疵検管理Noを消す時に、一緒に消えていくテーブル達
# テーブル名, 主キー, サブキー(通常,疵No or ""), 一回の削除件数(0だと疵検管理No全部)
ZI_1	= COIL_INF, 		疵検管理No,	,		0
ZI_2	= COIL_POSITION,	疵検管理No,	,		0
ZI_3	= COIL_TRAND,		疵検管理No,	,		0

ZI_4	= DEFECT_INF_T,		疵検管理No,	疵No,		5000
ZI_5	= DEFECT_IMG_T,		疵検管理No,	疵No,		1000
ZI_6	= DEFECT_ATTR0_T,	疵検管理No,	疵No,		2000
ZI_7	= DEFECT_ATTR1_T,	疵検管理No,	疵No,		2000
ZI_8	= DEFECT_ATTR2_T,	疵検管理No,	疵No,		2000
ZI_9	= DEFECT_ATTR3_T,	疵検管理No,	疵No,		2000
ZI_10	= DEFECT_ATTR4_T,	疵検管理No,	疵No,		2000
ZI_11	= DEFECT_INF_B,		疵検管理No,	疵No,		5000
ZI_12	= DEFECT_IMG_B,		疵検管理No,	疵No,		1000
ZI_13	= DEFECT_ATTR0_B,	疵検管理No,	疵No,		2000
ZI_14	= DEFECT_ATTR1_B,	疵検管理No,	疵No,		2000
ZI_15	= DEFECT_ATTR2_B,	疵検管理No,	疵No,		2000
ZI_16	= DEFECT_ATTR3_B,	疵検管理No,	疵No,		2000
ZI_17	= DEFECT_ATTR4_B,	疵検管理No,	疵No,		2000

ZI_18	= EDGE_COIL_INF,	疵検管理No,	,		0
ZI_19	= EDGE_CHANGE_INF,	疵検管理No,	,		0
ZI_20	= FRAME_INF,		疵検管理No,	,		0
ZI_21	= FRAME_IMG,		疵検管理No,	,		0

ZI_22	= COIL_CUT_RESULT,	疵検管理No,	,		0
ZI_23	= COIL_EDGE_CUT_RESULT,	疵検管理No,	,		0
ZI_24	= COIL_SAISUN_RESULT,		疵検管理No,	,	0

ZI_25	= COIL_ORDER,		疵検管理No,	,		0

ZI_26	= MAE_COIL_INF,		疵検管理No,	,		0
ZI_27	= MAE_COIL_LINE,	疵検管理No,	,		0
ZI_28	= MAE_FF_INF,		疵検管理No,	,		0
ZI_29	= MAE_DEFECT_INF,	疵検管理No,	,		0
ZI_30	= MAE_DEFECT_IMG,	疵検管理No,	,		0

ZI_31	= ACCESS_NEXT_COIL_INF,	疵検管理No,	,	0
ZI_32	= ACCESS_NEXT_DEFECT_INF,	疵検管理No,	,	0

ZI_33	= FT_INF,	疵検管理No,	,	0
ZI_34	= FT_IMG,	疵検管理No,	,	0
ZI_35	= DEFECT_NUM_TOTAL,	疵検管理No,	,	0
ZI_36	= DEFECT_NUM_INTERVAL,	疵検管理No,	,	0

#ZI_20	= TINY_RESULT,		疵検管理No,	,		0
#ZI_21	= TINY_INF,			疵検管理No,	,		0


## 日付で管理しているテーブル
# テーブル名, 日付列(通常,登録日付), 保存日数
TI_1	= ST_HISTORY_INF,	登録日付,	400
TI_2	= STATUS_LOG,		登録日付,	90

TI_3	= BUF_PRO_R_COILINF,登録日付,	90
TI_4	= BUF_PRO_R_CUT,	登録日付,	90
TI_5	= BUF_PRO_R_SAISUN,	登録日付,	90

TI_6	= BUF_FF_S_ZISEKI,	登録日付,	90
TI_7	= BUF_FF_R_MAEINF,	登録日付,	90



#=========================================================
# DB同期管理
#---------------------------
# タスク名セッションの中身
## SESSION_1	: セッション情報 (1〜) [セッション名, TYPE]
# 		   TYPE : このセッションの動作定義 (同一タイプの最大登録数10個)
#     		0 ･･･ マスターの同期  (初期時)
#				TBLの形式１：テーブル名
#			1 ･･･ 実績の追加コピー (先テーブルの最新をキーに、それ以降の元テーブルのデータを先テーブルにコピー)
#				TBLの形式１：テーブル名,  1回の追加件数,  主キー1(必須),  主キー2(空白可),  主キー3(空白可)
#			2 ･･･ 実績の移動
#				TBLの形式１：テーブル名,  1回の移動件数,  主キー1(必須),  主キー2(空白可)
#			3 ･･･ 実績の完全同期 (双方のテーブルで、キーが無い項目を補間しあう)  (初期時,A→Bにデータがコピー)
#				TBLの形式１：テーブル名,  1回の追加件数,  主キー1(必須),  主キー2(空白可),  主キー3(空白可)
#---------------------------
# 各セッションの中身
# DB_ODBC_A	: DBセッション名
# DB_ODBC_B	: DBセッション名
# LINK_PATH_AB	: A系のDBに定義されているリンクサーバー経由でB系アクセスする時のパス "[リンクサーバー名].データベース名.dbo."
# LINK_PATH_BA	: B系のDBに定義されているリンクサーバー経由でA系アクセスする時のパス "[リンクサーバー名].データベース名.dbo."
#   通常の定周期実行時は、 A→Bの流れでデータが処理される
#   このタスクを使用する場合は、必ずDBのリンクサーバーの定義をする事。
#    ・A系には、B系のサーバーを追加。B系には、A系のサーバーを追加する事。
#    ・リンクサーバーの定義は、 プロパイダ[SQL Native Client、Microsoft OLE DB Pro…SQLServer]
#				製品名[mySQLServer]    データソース[IPアドレス]   カタログ[DB名]   セキュリティでログイン名とパスを設定する事
#
# TIME_FAST	: 初期実行までの時間 (0:定周期無し) [分]
# TIME_INTERVAL	: ２回目以降の実行周期 [分]
# MAIL_KEY	: メールスロット受信時に第2引数と一致した場合、強制的に実行される。 (0:未実施)
# T_1		: テーブル名 (最大50テーブル)
#
# FACT_KS_EQALDB_01の起動受信時
#     data[0]   0:A→B    1:B→A
#     data[1]  任意の値 (0:無視  1〜:MAIL_KEYと一致した場合、強制的に実行される。
#
#---------------------------
#リンクサーバー定義	(A系のDBにはB系にアクセスするために定義を設定させる)
# [LINKSRV_1]		1〜の連番
# SELECT_ODBC_KEY	追加対象のODBCキー
# LINK_NAME		リンクサーバー名
# DBADDLESS		: DB接続アドレス
# DSNAME		: SQLServerのDB名称
# USERID		: ユーザー名
# PASSWORD		: パスワード
# SRVPRODUCT		製品名 (mySQLServer)固定
# PROVIDER		プロバイダ (SQLServer2005=SQLNCLI。SQLServer2008=SQLNCLI10 )
#=========================================================
[KS_EQALDB]
SESSION_1 = KS_EQALDB_EQAL, 0
#SESSION_2 = KS_EQALDB_MOVE, 2

#リンクサーバー定義
[LINKSRV_1]
SELECT_ODBC_KEY = DB_A
LINK_NAME		= BACKUP
DBADDLESS		= 192.9.200.32
DSNAME			= DATABASE_N4PL_C
USERID			= sa
PASSWORD		= vz
SRVPRODUCT		= mySQLServer
PROVIDER		= SQLNCLI

[LINKSRV_2]
SELECT_ODBC_KEY = DB_B
LINK_NAME		= TIKUSEKI
DBADDLESS		= 192.9.200.33
DSNAME			= DATABASE_N4PL_C
USERID			= sa
PASSWORD		= vz
SRVPRODUCT		= mySQLServer
PROVIDER		= SQLNCLI

[KS_EQALDB_EQAL]
DB_ODBC_A	= DB_A
DB_ODBC_B	= DB_B
LINK_PATH_AB	= [BACKUP].DATABASE_N4PL_C.dbo.
LINK_PATH_BA	= [TIKUSEKI].DATABASE_N4PL_C.dbo.
TIME_FAST	= 1440
TIME_INTERVAL	= 60
MAIL_KEY	= 1
# マスター同期対象テーブル
T_1	= STATUS_MASTER
T_2	= STATUS_INF
T_3	= LOG_MASTER
T_4	= PC_MASTER
T_5	= PC_INF
T_6	= ST_HISTORY_MASTER
T_7 = BASE_ACTION_MASTER
T_8	= COMMON_MASTER

T_9	= TYPE_NAME
T_10	= GRADE_NAME
T_11	= SCODE_MASTER
T_12	= SCODE_JUDGE
#T_13	= SCODE_OUTPUT
T_13	= PCODE_MASTER
T_14	= PCODE_JUDGE
T_15	= PCODE_OUTPUT
#T_17	= PALL_OUTPUT
#T_18	= PCOMMON_OUTPUT

T_16	= ATTR_NAME
T_17	= PARAM_COMMON
T_18	= PARAM_SCODE
T_19	= PARAM_CAMSET
T_20	= PARAM_CAMSET_SCODE
T_21	= PARAM_CAMSET_ANGLE
T_22	= PARAM_CAMANGLE_SCODE
T_23	= PARAM_CAMSET_ANGLE_SCODE
T_24	= ROLL_INFO
T_25	= PCINFO_DESC
#T_27	= Group_Name

T_26	= CAMERA_LINKSWITCH

T_27	= MAE_MASTER
T_28	= MAE_TYPE_NAME
T_29	= MAE_GRADE_NAME

T_30	= DEMAND_MASTER
T_31	= COUNT_MASTER
T_32	= COUNT_JUDGE
T_33	= NORMALCOUNT_COMMON
T_34	= NORMALCOUNT_TYPE
T_35	= NORMALCOUNT_PATTERN
T_36	= INTENS_COMMON
T_37	= INTENS_TYPE


### 今回無し
[KS_EQALDB_MOVE]
DB_ODBC_A	= DB_B
DB_ODBC_B	= DB_A
LINK_PATH_AB	= [TIKUSEKI].DATABASE_N4PL_C.dbo.
LINK_PATH_BA	= [BACKUP].DATABASE_N4PL_C.dbo.
TIME_FAST	= 0
TIME_INTERVAL	= 0
MAIL_KEY	= 2
#実績移動
T_1		= LOG_INF,			1000,	登録日付, 	AutoNo
T_2		= ST_HISTORY_INF,	2000,	登録日付,	区分
T_3		= STATUS_LOG,		2000,	登録日付,	AutoNo

T_4		= COIL_INF,			500,	疵検管理No
T_5		= COIL_POSITION,	2000,	疵検管理No,	ID
T_6		= COIL_TRAND,		2000,	疵検管理No,	表裏区分,	取得位置

T_7		= DEFECT_INF_T,		500,	疵検管理No,	疵No
T_8		= DEFECT_IMG_T,		500,	疵検管理No,	疵No
T_9 	= DEFECT_ATTR0_T,	500,	疵検管理No,	疵No
T_10	= DEFECT_ATTR1_T,	500,	疵検管理No,	疵No
T_11	= DEFECT_ATTR2_T,	500,	疵検管理No,	疵No	
T_12	= DEFECT_ATTR3_T,	500,	疵検管理No,	疵No
T_13	= DEFECT_ATTR4_T,	500,	疵検管理No,	疵No
T_14	= DEFECT_INF_B,		500,	疵検管理No,	疵No
T_15	= DEFECT_IMG_B,		500,	疵検管理No,	疵No
T_16	= DEFECT_ATTR0_B,	500,	疵検管理No,	疵No
T_17	= DEFECT_ATTR1_B,	500,	疵検管理No,	疵No
T_18	= DEFECT_ATTR2_B,	500,	疵検管理No,	疵No
T_19	= DEFECT_ATTR3_B,	500,	疵検管理No,	疵No
T_20	= DEFECT_ATTR4_B,	500,	疵検管理No,	疵No

T_21	= EDGE_COIL_INF,	500,	疵検管理No,	表裏区分
T_22	= EDGE_CHANGE_INF,	500,	疵検管理No,	長手位置,	表裏区分
T_23	= FRAME_INF,		500,	疵検管理No,	カメラセット,	フレームNo
T_24	= FRAME_IMG,		500,	疵検管理No,	カメラセット,	フレームNo

T_25	= COIL_CUT_RESULT,	500,	疵検管理No,	受信回数
T_26	= COIL_EDGE_CUT_RESULT,	500,	疵検管理No,	受信回数
T_27	= COIL_SAISUN_RESULT,	500,疵検管理No,	子番

T_28	= COIL_ORDER,		500,	疵検管理No, 通順

T_29	= MAE_COIL_INF,		1000,	疵検管理No
T_30	= MAE_COIL_LINE,	1000,	疵検管理No,	工程種別,	表裏区分
T_31	= MAE_FF_INF,		3000,	疵検管理No,	疵No
T_32	= MAE_DEFECT_INF,	3000,	疵検管理No,	疵No
T_33	= MAE_DEFECT_IMG,	500,	疵検管理No,	疵No

T_34	= ACCESS_NEXT_COIL_INF,		500,	疵検管理No
T_35	= ACCESS_NEXT_DEFECT_INF,		500,	疵検管理No, 疵No

T_36	= FT_INF,		500,	疵検管理No
T_37	= FT_IMG,		500,	疵検管理No
T_38	= DEFECT_NUM_TOTAL,		500,	疵検管理No, 表裏区分
T_39	= DEFECT_NUM_INTERVAL,		500,	疵検管理No, 発生連番, 表裏区分

T_40	= COIL_RESULT,		500,	疵検管理No


#T_23	= TINY_RESULT,		500,	疵検管理No,	表裏区分
#T_24	= TINY_INF,			500,	疵検管理No,	微小欠陥No
#T_27	= CAMERA_GAP_INF,	1000,	登録日付,	camset,	camangle


#**************************************************************************************
# 統括機能外
#**************************************************************************************

#=========================================================
# 操作画面
#   RAS_TIMER		   : RAS画面DB読み込み周期[msec]
#   SYUKUTAI_TIMER	   : 縮退状態画面DB読み込み周期[msec]
#
#   MAP_SCROLL_DIRECT      : マップ進行方向             (0:左から右、1:右から左)
#   MAP_CELL_DIRECT_O      : 表面疵マップセル側         (0:疵マップの左右反転無し、1:疵マップの左右反転有り)
#   IMAGE_VIEW_DIRECT_O    : 表面疵画像の表示欄反転     (0:左がDS、1:左がWS)
#   IMAGE_TOP_BOTTOM_INF_O : 表面疵画像の上下反転       (0:反転無し、1:反転有り)
#   IMAGE_SIDE_INF_O       : 表面疵画像の右左反転       (0:反転無し、1:反転有り)
#   MAP_CELL_DIRECT_U      : 裏面疵マップセル側         (0:疵マップの左右反転無し、1:疵マップの左右反転有り)
#   IMAGE_VIEW_DIRECT_U    : 裏面疵画像の表示欄反転     (0:左がDS、1:左がWS)
#   IMAGE_TOP_BOTTOM_INF_U : 裏面疵画像の上下反転       (0:反転無し、1:反転有り)
#   IMAGE_SIDE_INF_U       : 裏面疵画像の右左反転       (0:反転無し、1:反転有り)
#   IMAGE_WIDTH            : 切り出し画像100pixel横幅設定       (1 〜 :100pixel横幅を指定[mm])
#   FRAME_IMAGE_WIDTH      : フレーム画像100pixel横幅設定       (1 〜 :100pixel横幅を指定[mm])
#
#   DEFMAP_UP_TOP          : 疵マップ画面 表面 長手方向に対して、上下反転 (0:反転無し、1:反転有り)
#   DEFMAP_UP_BOT          : 疵マップ画面 裏面 長手方向に対して、上下反転 (0:反転無し、1:反転有り)
#   DEFMAP_SIDE_TOP        : 疵マップ画面 表面 長手縦方向表示時、左右反転 (0:反転無し、1:反転有り)
#   DEFMAP_SIDE_BOT        : 疵マップ画面 裏面 長手縦方向表示時、左右反転 (0:反転無し、1:反転有り)
#   DEFMAP_SIDE_TOP_HORZ   : 疵マップ画面 表面 長手横方向表示時、左右反転 (0:反転無し、1:反転有り)
#   DEFMAP_SIDE_BOT_HORZ   : 疵マップ画面 裏面 長手横方向表示時、左右反転 (0:反転無し、1:反転有り)
#   DEFMAP_HORZ_FLOW       : 疵マップ画面 長手方向の向き                  (0:横方向 1:縦方向)
#
#   DISP_TOP_FLG           : 最前面   画面表示設定       (0:通常、1:最前面表示)
#   SEARCH_TIMEOUT_SEC     : コマンド実行タイムアウト時間 (1〜 :検索用（単位：秒））
#=========================================================
[SO_GAMENN]
RAS_TIMER              = 1000
SYUKUTAI_TIMER         = 5000

MAP_SCROLL_DIRECT      = 0

MAP_CELL_DIRECT_O      = 0
IMAGE_VIEW_DIRECT_O    = 0
IMAGE_TOP_BOTTOM_INF_O = 0
IMAGE_SIDE_INF_O       = 0

MAP_CELL_DIRECT_U      = 0
IMAGE_VIEW_DIRECT_U    = 0
IMAGE_TOP_BOTTOM_INF_U = 0
IMAGE_SIDE_INF_U       = 0

IMAGE_WIDTH            = 29
FRAME_IMAGE_WIDTH      = 29

DEFMAP_UP_TOP          = 0
DEFMAP_UP_BOT          = 0
DEFMAP_SIDE_TOP        = 0
DEFMAP_SIDE_BOT        = 0
DEFMAP_SIDE_TOP_HORZ   = 0
DEFMAP_SIDE_BOT_HORZ   = 0
DEFMAP_HORZ_FLOW       = 0

DISP_TOP_FLG           = 0
SEARCH_TIMEOUT_SEC     = 60

#=========================================================
# 表示管理
# IMAGE_PATH        : 探傷画面表示用の画像格納パス
# MAEIMG_PATH       : 前工程疵画像格納パス
# SAVE_IP           : 疵実績情報送信PCのIPアドレス
# SAVE_PORT         : 受信ポート
#=========================================================
[HY_DEFECT]
IMAGE_PATH = D:\IMG
MAEIMG_PATH = D:\MAE
SAVE_IP   = 192.9.200.31
#SAVE_IP	   = 127.0.0.1
SAVE_PORT  = 10002


#===============================================================================
#   探傷画面設定値
#===============================================================================
#[HY_TANSHO](探傷画面共通設定)
#   FROM_TOTAL_NUM          :出力総画面数               (1〜:探傷画面ウィンドウの出力数)
#   MAP_INTERVAL            :疵マップ更新秒数           (0〜:探傷画面上疵マップの更新間隔)
#   STATUS_INTERVAL         :ステータス更新秒数         (0〜:探傷画面上ステータス欄の更新間隔)
#   COIL_INTERVAL           :コイル更新秒数             (0〜:探傷画面上コイル情報欄の更新間隔)
#   SYNC_MODE               :同期モード                 (0:全ての画面を同期、1:検査台毎に動作、2:同期無し)
#   IMAGE_WIDTH             :画像100pixel横幅設定       (1〜:100pixel横幅を指定[mm])
#===============================================================================
#[HY_TANSHO_FORMn](探傷画面個別設定 : n=1以上)
#   FROM_POS_NUM            :画面位置番号               (1〜:HY_TANSHO_FORMnまで表示)
#   FROM_MEN_NUM            :表示表裏面番号             (0:表面、1:裏面) 
#   KENSA_NUM               :検査台番号                 (0〜:検査台番号 ポインタ情報テーブル参照番号)
#   KENSA_NAME              :検査台名称                 (0〜:検査台名称 ポインタ情報テーブル参照番号)
#   MAP_SCROLL_DIRECT       :疵マップ進行方向           (0:右から左、1:左から右)
#   MAP_CELL_DIRECT         :疵マップセル側             (0:疵マップの左右反転無し、1:疵マップの左右反転有り)
#   IMAGE_VIEW_DIRECT       :疵画像の表示欄反転         (0:左がDS、1:左がWS)
#   IMAGE_TOP_BOTTOM_INF    :疵画像の上下反転           (0:反転無し、1:反転有り)
#   IMAGE_SIDE_INF          :疵画像の右左反転           (0:反転無し、1:反転有り)
#   IMAGE_90_INF            :疵画像の90度回転           (0:回転無し、1:回転有り)
#   MAP_KENSA_POS           :疵マップ検査台位置         (1〜32:疵マップ上の表面検査台表示位置)
#   TAB_FUNCTION_INF        :ファンクションタブ設定     (1〜:探傷画面内ファンクション用タブの初期設定)
#   HOT_VIEW_INF            :HOT疵自動表示              (0:選択時のみ、1:自動表示)
#===============================================================================

[HY_TANSHO]
FROM_TOTAL_NUM      = 2
MAP_INTERVAL        = 500
STATUS_INTERVAL     = 1000
COIL_INTERVAL       = 2000
SYNC_MODE           = 0
IMAGE_WIDTH         = 29

[HY_TANSHO_FORM1]
FROM_POS_NUM            = 1
FROM_MEN_NUM            = 0
KENSA_NUM               = 5
KENSA_NAME              = 表面 検査室
MAP_SCROLL_DIRECT       = 0
MAP_CELL_DIRECT         = 0
IMAGE_VIEW_DIRECT       = 0
IMAGE_TOP_BOTTOM_INF    = 0
IMAGE_SIDE_INF          = 0
IMAGE_90_INF            = 0
MAP_KENSA_POS           = 25
TAB_FUNCTION_INF        = 1
HOT_VIEW_INF            = 0

[HY_TANSHO_FORM2]
FROM_POS_NUM            = 2
FROM_MEN_NUM            = 1
KENSA_NUM               = 4
KENSA_NAME              = 裏面 検査室
MAP_SCROLL_DIRECT       = 0
MAP_CELL_DIRECT         = 0
IMAGE_VIEW_DIRECT       = 0
IMAGE_TOP_BOTTOM_INF    = 0
IMAGE_SIDE_INF          = 0
MAP_KENSA_POS           = 25
TAB_FUNCTION_INF        = 1
HOT_VIEW_INF            = 0

#=========================================================
# パラメータ設定画面
# PASSCHK_UMU  : パスワード設定実施有無(0:パスワード無し、設定可 -1:パス無し、設定不可  1:パス有り、設定可)
# PASSWORD	   : 設定値変更用 パスワード
# HARDCOPY_UMU : DB保存時のハードコピー出力有無(0:出力無し、1:出力有り)
#=========================================================
[KA_PARSET]
PASSCHK_UMU = 0
PASSWORD = kizu
HARDCOPY_UMU = 0
